<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Dustin Farris</title><link href="http://dustinfarris.com/" rel="alternate"></link><link href="http://dustinfarris.com/feeds/all.atom.xml" rel="self"></link><id>http://dustinfarris.com/</id><updated>2014-01-01T16:20:00+01:00</updated><entry><title>Solr Start/Stop Script</title><link href="http://dustinfarris.com/2014/01/01/solr-startstop-script.html" rel="alternate"></link><updated>2014-01-01T16:20:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2014-01-01:2014/01/01/solr-startstop-script.html</id><summary type="html">&lt;p&gt;At some point I'm going to write a much longer post on how to set up Solr on Linux, but for now
here's a start/stop script that works well.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="c"&gt;### BEGIN INIT INFO&lt;/span&gt;
&lt;span class="c"&gt;# Provides:             solr&lt;/span&gt;
&lt;span class="c"&gt;# Short-Description:    starts the solr server&lt;/span&gt;
&lt;span class="c"&gt;# Description:          starts solr using start-stop-daemon&lt;/span&gt;
&lt;span class="c"&gt;### END INIT INFO&lt;/span&gt;

&lt;span class="nv"&gt;SOLR_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/opt/solr/django&amp;quot;&lt;/span&gt;  &lt;span class="c"&gt;# Change to your own solr directory!&lt;/span&gt;
&lt;span class="nv"&gt;PID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/run/solr/solr.pid&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;solr&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DAEMON&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/bin/java&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DAEMON_ARGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-server &lt;/span&gt;&lt;span class="nv"&gt;$JAVA_OPTS&lt;/span&gt;&lt;span class="s2"&gt; -Dsolr.solr.home=&lt;/span&gt;&lt;span class="nv"&gt;$SOLR_DIR&lt;/span&gt;&lt;span class="s2"&gt;/multicore -jar start.jar&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;solr&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DESC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;solr&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Include solr configuration defaults if available&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f /etc/default/solr &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    . /etc/default/solr
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="nb"&gt;test&lt;/span&gt; -x &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;0

&lt;span class="nb"&gt;set&lt;/span&gt; -e

. /lib/lsb/init-functions

start&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    start-stop-daemon --start --quiet --pidfile &lt;span class="nv"&gt;$PID&lt;/span&gt; --make-pidfile &lt;span class="se"&gt;\&lt;/span&gt;
        --chdir &lt;span class="nv"&gt;$SOLR_DIR&lt;/span&gt; --chuid &lt;span class="nv"&gt;$USER&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        --background --retry &lt;span class="m"&gt;5&lt;/span&gt; --exec &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -- &lt;span class="nv"&gt;$DAEMON_ARGS&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

stop&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    start-stop-daemon --stop --quiet --pidfile &lt;span class="nv"&gt;$PID&lt;/span&gt; --retry 5
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in
    start&lt;span class="o"&gt;)&lt;/span&gt;
        log_daemon_msg &lt;span class="s2"&gt;&amp;quot;Starting &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$NAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
        start
        log_end_msg &lt;span class="nv"&gt;$?&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
    stop&lt;span class="o"&gt;)&lt;/span&gt;
        log_daemon_msg &lt;span class="s2"&gt;&amp;quot;Stopping &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$NAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
        stop
        log_end_msg &lt;span class="nv"&gt;$?&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
    restart&lt;span class="o"&gt;)&lt;/span&gt;
        log_daemon_msg &lt;span class="s2"&gt;&amp;quot;Restarting &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$NAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
        stop
        sleep 3
        start
        log_end_msg &lt;span class="nv"&gt;$?&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
    status&lt;span class="o"&gt;)&lt;/span&gt;
        status_of_proc -p &lt;span class="nv"&gt;$PID&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$DAEMON&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; java
        &lt;span class="p"&gt;;;&lt;/span&gt;
    *&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$NAME&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|restart|status}&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;2
        &lt;span class="nb"&gt;exit &lt;/span&gt;1
        &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;

&lt;span class="nb"&gt;exit &lt;/span&gt;0
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Solr"></category><category term="Linux"></category></entry><entry><title>Django/Ember Token Authentication</title><link href="http://dustinfarris.com/2013/11/29/djangoember-token-authentication.html" rel="alternate"></link><updated>2013-11-29T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2013-11-29:2013/11/29/djangoember-token-authentication.html</id><summary type="html">&lt;p&gt;As I've &lt;a href="/2013/09/21/django-ember-authentication-is-easy.html"&gt;previously detailed&lt;/a&gt;, 
implementing session-based authentication with Django and Ember is not as hard as you might think.
Now I'd like to say the same thing for token-based authentication.&lt;/p&gt;
&lt;p&gt;In token-based authentication, every user in the database is assigned a unique token.  The flow of 
authentication then works like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You send a username and password to the API&lt;/li&gt;
&lt;li&gt;The API validates the credentials and returns that user's token&lt;/li&gt;
&lt;li&gt;You include the token in the header of every request going forward to prove that you are already 
   authenticated.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here's a demonstration of the concept using curl:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl localhost:8000/users/
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;detail&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;Authentication credentials were not provided.&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;curl -X POST -d &lt;span class="s2"&gt;&amp;quot;username=bob&amp;amp;password=correct&amp;quot;&lt;/span&gt; localhost:8000/api-token-auth/
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;token&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;abcdefg12345&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;curl -H &lt;span class="s2"&gt;&amp;quot;Authorization: Token abcdefg12345&amp;quot;&lt;/span&gt; localhost:8000/users/
&lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;: 1, &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;bob&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;bob@example.org&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here, I'll explain how to set up token-based authentication using Django REST Framework, and how to 
set up Ember as a consumer.  I'll assume you already have DRF installed, and that you have &lt;a href="https://docs.djangoproject.com/en/dev/topics/auth/customizing/#extending-the-existing-user-model"&gt;extended 
Django's User model&lt;/a&gt; 
(which I really recommend you do from the beginning even if you don't have an immediate need), e.g.:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;AbstractUser&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AbstractUser&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Django (DRF)&lt;/h2&gt;
&lt;p&gt;After installing DRF in the usual way, you will want need a way to generate tokens for your users, 
and return them when a consumer posts valid credentials.  Fortunately, DRF has most of this 
functionality &lt;a href="http://django-rest-framework.org/api-guide/authentication#tokenauthentication"&gt;built in&lt;/a&gt;.&lt;br /&gt;
First, add &lt;code&gt;rest_framework.authtoken&lt;/code&gt; to your &lt;code&gt;INSTALLED_APPS&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;rest_framework.authtoken&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run &lt;code&gt;manage.py syncdb&lt;/code&gt;.  Refer to the &lt;a href="http://django-rest-framework.org/api-guide/authentication#schema-migrations"&gt;DRF documentation&lt;/a&gt; 
for possible edge cases involving South migrations.  Finally, create tokens for all existing users 
in the Python shell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.authtoken.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Token&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;users.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;Token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Automating token creation&lt;/h3&gt;
&lt;p&gt;Going forward, you'll want to automate the creation of tokens for new users.  This is easily 
achieved with a post_save hook for the User model.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db.models.signals&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;post_save&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.dispatch&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;receiver&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.authtoken.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Token&lt;/span&gt;

&lt;span class="nd"&gt;@receiver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;post_save&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;init_new_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;created&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Create an authentication token for newly created users.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;created&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;Token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Authentication endpoint&lt;/h3&gt;
&lt;p&gt;DRF takes care of authenticating credentials and returning a token.  You just need to add the 
endpoint to your URLconf:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^api-token-auth/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;rest_framework.authtoken.views.obtain_auth_token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Token-based policy&lt;/h3&gt;
&lt;p&gt;The last piece as far as Django is concerned is specifying that you want to use token-based 
authentication throughout your REST API.  This can be done by adding/modifying the 
&lt;code&gt;DEFAULT_AUTHENTICATION&lt;/code&gt; setting:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;REST_FRAMEWORK&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;DEFAULT_AUTHENTICATION_CLASSES&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;rest_framework.authentication.TokenAuthentication&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;rest_framework.authentication.SessionAuthentication&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c"&gt;# optional&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I keep SessionAuthentication for using the web-browsable API that DRF comes with.&lt;/p&gt;
&lt;h3&gt;The current user&lt;/h3&gt;
&lt;p&gt;Thinking ahead, we know that in Ember, after authenticating, we will want an easy way to retrieve details 
about the authenticated user.  Things like, name, email, etc..  The DRF response to a correct username 
and password is: a token.  While the token helps us authenticate future requests, it tells us nothing
about the user we just authenticated.  We can't even do a GET request to /users/:id/ because we don't
even know what the user's ID is!  To solve this problem, I like to create a special endpoint that returns 
the currently authenticated user at /users/me/.  This is easy to accomplish in DRF.  In your UserViewSet:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserViewSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelViewSet&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
    &lt;span class="n"&gt;serializer_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UserSerializer&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;retrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        If provided &amp;#39;pk&amp;#39; is &amp;quot;me&amp;quot; then return the current user.&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pk&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;me&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserViewSet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;retrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's it for setting up Django.&lt;/p&gt;
&lt;h2&gt;Ember&lt;/h2&gt;
&lt;p&gt;As explained above, to make use of token authentication, we'll need to send a username and password 
to the API, store the returned token, and provide the token in the header for any future request to 
the API.  In short, we need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A user model to store user data&lt;/li&gt;
&lt;li&gt;An authentication controller to facilitate the exchange of credentials for a token and store the 
  currently authenticated user&lt;/li&gt;
&lt;li&gt;A way to prevent an unauthenticated user from visiting protected pages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The model is straight-forward:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="nx"&gt;first_name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="nx"&gt;last_name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="nx"&gt;is_active&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;boolean&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of course your model may be different depending on how you've extended the User Django model.&lt;/p&gt;
&lt;h3&gt;AuthController&lt;/h3&gt;
&lt;p&gt;The real meat of token authentication in Ember lies in a controller we'll create to submit form 
information (username/password) to the server, retrieve the token, store the token, and provide 
information about the currently logged in user.  To accomplish this, we'll extend ObjectController, 
so that the controller itself represents the logged in user (or lack thereof).  Remember that 
ObjectControllers in Ember are manifestations of a model—just as ArrayControllers are manifestations 
of a set of models, etc.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AuthController&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ObjectController&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I'm going to digress and talk for a second on Django, Ember, and forms.  In Ember, form fields can 
be tied to controller attributes.  In Django, forms are validated and if they are not valid, a set 
of errors is returned.  In this case we will be submitting form data to Django REST Framework which 
passes the information on to the UserSerializer for validation.  Serializers in DRF inherit from 
Django forms, so the errors we get back (if any) will look just like errors we might get back from 
an invalid Django form.  So we know that errors will come back as a Python dictionary, converted to 
a JSON object, e.g.:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;This field is required.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;non_field_errors&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Invalid username or password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We are going to use these ideas to our advantage to submit form data to Django, and report back 
with any errors (like an invalid password).&lt;/p&gt;
&lt;p&gt;So right now we have an AuthController that does nothing.  It has a "model" attribute, which we will 
use later on to represent the currently logged in user.  We are going to add a few more attributes 
to represent the form fields we need, the token we eventually get back, and any errors encountered 
while processing the login form.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AuthController&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ObjectController&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;reset&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperties&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's look at the authentication handlebars template we'll be using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;action&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;login&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;submit&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;bind-attr&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;errors.username:has-error&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;errors.username&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;username&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;text&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Username&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;bind-attr&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;errors.password:has-error&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;errors.password&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;password&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Password&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;errors.non_field_errors&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;Oops!&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;errors.non_field_errors&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;submit&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Log in&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Easy: we have a username and password field bound to the AuthController, and a few areas of text 
that are bound to any potential errors we get back.  When the form is submitted, the "login" action 
is fired, so let's implement that in the controller:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getProperties&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/api-token-auth/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transitionToRoute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;jqXHR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;errors&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parseJSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;jqXHR&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;responseText&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If the authentication request is successful, we'll reset the form (a function we'll implement later 
to just clear the fields of their old values), store the token, and navigate to the index (or 
wherever you want the user to go next).  If the authentication request is not successful, we'll 
populate the errors attribute so the user gets information on why the form was not valid.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The tricky part!&lt;/strong&gt;  After the authentication request to the API succeeds, we want to 
store the token permanently (so if the user refreshes the page, they are still logged in), &lt;em&gt;and&lt;/em&gt; we 
want to make sure that any future API request includes the token in the header.  To accomplish the 
latter we'll implement functions in the AuthController to check for a valid token, setup future AJAX 
requests to use the token, retrieve the current user, and process a new token when it is set by a 
successful authentication form response:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;hasValidToken&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;null&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="nx"&gt;setupAjax&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ajaxSend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;xhr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasValidToken&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;xhr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRequestHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Authorization&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Token &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="nx"&gt;setCurrentUser&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasValidToken&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;currentUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;me&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;model&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;currentUser&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="nx"&gt;tokenChanged&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MYPROJECT_auth_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setupAjax&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setCurrentUser&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="nx"&gt;observes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here we have an observer that persists a new token to local storage, sets up future AJAX requests, 
and retrieves the currently logged in user.&lt;/p&gt;
&lt;h3&gt;Retrieving tokens from local storage&lt;/h3&gt;
&lt;p&gt;You'll notice above that we persist the token to local storage.  This is so the token is still 
available even if the user refreshes the page (or leaves and comes back, etc..)  We'll need to 
retrieve the token from local storage anytime the user visits the site, so create/modify 
ApplicationRoute to handle this.  While we're at it, we'll add a 'logout' action that can be 
accessed from anywhere in the site:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ApplicationRoute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_super&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;controllerFor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MYPROJECT_auth_token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;controllerFor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;setupAjax&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;controllerFor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;setCurrentUser&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;logout&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;controllerFor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transitionTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If the user has not visited the site before, or has not authenticated, 
&lt;code&gt;localStorage.MYPROJECT_auth_token&lt;/code&gt; will return &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Protected Routes&lt;/h3&gt;
&lt;p&gt;Invariably, there will be some routes you do not want unauthenticated users to access.  We'll 
create a base route that covers these:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RestrictedRoute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;beforeModel&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;controllerFor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;hasValidToken&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transitionTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And all other protected routes will extend this, e.g.:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MySecretRoute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RestrictedRoute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="err"&gt;…&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Tying it all together&lt;/h3&gt;
&lt;p&gt;So now we have an AuthController, an auth template, and a few modifications to our routes.  All 
that's remaining is creating the actual login page, and a way to get to it.  In your router:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/login&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will use the auth template and controller we already created, now we just need part of the 
main application template to provide information about the logged in user, or provide a link to 
the login page if the user is not yet logged in.  To do this we'll need to make the AuthController 
available to the main application template.  So create/modify ApplicationController:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ApplicationController&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;needs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;auth&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And now in your main application handlebars template:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nv"&gt;controllers.auth&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;hasValidToken&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
Welcome back, &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;first_name&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;last_name&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;!
&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;action&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;logout&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Logout&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nv"&gt;link-to&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;auth&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;Login&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;link-to&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Everything above, when put together, will provide you with a token-based authentication scheme for 
your API server, and a way to consume it using Ember.  Token-based authentication is nice because 
it is straight-forward for other API consumers to plug into quickly without having to worry about 
cookies and such.  Think mobile applications.&lt;/p&gt;
&lt;p&gt;Remember, the initial request to retrieve a token sends a plain text username and password across 
the net, and all subsequent requests send a naked token across the net.  Always use SSL when using 
token-based authentication.&lt;/p&gt;</summary><category term="Django"></category><category term="Ember"></category></entry><entry><title>Django/Ember Authentication is Easy</title><link href="http://dustinfarris.com/2013/09/21/djangoember-authentication-is-easy.html" rel="alternate"></link><updated>2013-09-21T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2013-09-21:2013/09/21/djangoember-authentication-is-easy.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;[2013 Nov 29 Update]&lt;/strong&gt;: This blog examines the use of session-based authentication. You may find
token-based authentication more appropriate (as I have), in which case my more recent post will
probably better suit your needs. &lt;a href="/2013/11/29/django-ember-token-authentication.html"&gt;Check out the latest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As I've &lt;a href="/2013/08/authenticating-django-slash-ember/"&gt;previously explained&lt;/a&gt;, one of the biggest hurdles to jump when getting started with Ember
is authentication. Not anymore! I've put together a simple architecture that provides session-based
authentication in a relatively small amount of code.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/dustinfarris/django-ember-authentication"&gt;View the source on GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Session-based Authentication&lt;/h2&gt;
&lt;p&gt;If you Google "Ember authentication" you'll likely get a handful of SO posts and an even smaller handful
of blog posts almost all of which implement some kind of token-based authentication, usually relying on
Rails or Node for authentication. This requires you to perform a back-and-forth exchange with the server
to authenticate credentials and receive a token. You probably have to store the token in some kind of
manually made cookie or local-based storage, and you have to remember to consistently provide the token
whenever you access a restricted resource.&lt;/p&gt;
&lt;p&gt;Session-based authentication is a lot easier! The concept of session-based authentication is very similar
to token-based authentication but with some important differences. First, the server-side mechanics for 
session-based auth are entirely built in to Django. Second, because the majority of the work is done server-
side, there is little required of you in Ember. As with token-based authentication, though, it is important
to remember that after authentication, subsequent requests will contain a session-id cookie—consider using
SSL to encrypt client-server communication.&lt;/p&gt;
&lt;p&gt;REST purists might argue that session-based authentication is technically not "stateless."  The trade-off
depends on project requirements and personal preference.  For single-page web applications, I can't think
of any practical downsides.&lt;/p&gt;
&lt;h2&gt;Architecture&lt;/h2&gt;
&lt;p&gt;The basic design consists of a SessionController in Ember, and a SessionView in Django. While not required,
I'm also throwing in a User model in Ember and UserSerializer in Django to facilitate the notion of the
"current user" in Ember.&lt;/p&gt;
&lt;p&gt;The SessionController is responsible for providing login/logout actions, and maintaining an accurate
manifestation of the current user (or lack thereof). To make this simple, I made the 'model' property of the
SessionController an instance of User.&lt;/p&gt;
&lt;p&gt;The SessionView is responsible for providing the currently logged-in user (if one exists), authenticating
a new user, and logging a user out. Each of these operations are distinguished by a GET, POST, or DELETE
HTTP request respectively.&lt;/p&gt;
&lt;p&gt;I use a single handlebars template to provide the login form, and then replace that form with a welcome
message when the user authenticates.  This welcome message could be replaced with a link to the user's profile.&lt;/p&gt;
&lt;h2&gt;Code&lt;/h2&gt;
&lt;p&gt;When the user successfully authenticates, the SessionView returns a success flag and, as a bonus, the user's
id. Ember can then use the user id to pull information about the current user. To do that we need a serializer
and a ViewSet.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelSerializer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;last_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserViewSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelViewSet&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
    &lt;span class="n"&gt;serializer_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UserSerializer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With that out of the way, we can focus on authentication.  On the server side we need a SessionView that can
handle logging in, logging out, and returning the current user if one exists. We also want it to return an
appropriate error message if authentication fails:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SessionView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;APIView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;error_messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;invalid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Invalid username or password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;disabled&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Sorry, this account is suspended&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_error_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message_key&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;success&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;message&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error_messages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;message_key&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;user_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c"&gt;# Get the current user&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_authenticated&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;user_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;user_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c"&gt;# Login&lt;/span&gt;
        &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;authenticate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;success&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;user_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_error_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;disabled&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_error_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;invalid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c"&gt;# Logout&lt;/span&gt;
        &lt;span class="n"&gt;logout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTP_204_NO_CONTENT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And we just need to expose the user API and the session view in urls.py:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DefaultRouter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;users&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UserViewSet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^session/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SessionView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^api/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TemplateView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;template_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;application.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That takes care of the server side of things.  In Ember we'll need a User model:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;attr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="nx"&gt;first_name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="nx"&gt;last_name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The SessionController in Ember takes care of sending the user-provided credentials to the server, sending a
logout request to the server, or retrieiving the current user. Specifically, we need a way to reset the
controller's values, a flag that represents whether there is currently an authenticated user, and login/logout
actions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SessionController&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ObjectController&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;errorMessage&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

  &lt;span class="nx"&gt;reset&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperties&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;errorMessage&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="nx"&gt;isAuthenticated&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;model&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;model&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

  &lt;span class="nx"&gt;setCurrentUser&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;currentUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;model&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;currentUser&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getProperties&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/session/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;errorMessage&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setCurrentUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;logout&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/session/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;delete&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transitionToRoute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We then do an initial "current user" query in the main application router to check if there is already an active
session when the page is first loaded:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;session&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ApplicationRoute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;setupController&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getJSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/session/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;controllerFor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;session&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;setCurrentUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally we just need a handlebars template to provide the user with a login form, or with a representation of
the current user.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/x-handlebars&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;session&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;isAuthenticated&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;Welcome back, &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;first_name&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;!&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;action&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;logout&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Logout&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;action&lt;/span&gt; &lt;span class="nv"&gt;login&lt;/span&gt; &lt;span class="nv"&gt;on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;username&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Username&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
      &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;password&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Password&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
      &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;errorMessage&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;errorMessage&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
  &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can put this login form wherever you want by calling &lt;code&gt;{{render 'session'}}&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Authenticating in Ember using Django's session-based authentication is straight-forward and easy.  I've left
out a lot of boiler-plate and tests here. You can view a more complete and working &lt;a href="https://github.com/dustinfarris/django-ember-authentication"&gt;example on GitHub&lt;/a&gt;.&lt;/p&gt;</summary><category term="Django"></category><category term="Ember"></category></entry><entry><title>Authenticating Django/Ember</title><link href="http://dustinfarris.com/2013/08/24/authenticating-djangoember.html" rel="alternate"></link><updated>2013-08-24T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2013-08-24:2013/08/24/authenticating-djangoember.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;[2013 Sep 21 Update]&lt;/strong&gt;: I've completely refactored this solution and have done a much better job of
implementing it and explaining it.  &lt;a href="/2013/11/29/django-ember-authentication-is-easy.html"&gt;Check out the latest&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;The web app rage nowadays is to implement your backend as RESTfully as possible, and use Javascript frameworks to facilitate your controller and presentation layers as a single-page application.  There is bit of a learning curve involved when adapting to the new philosophies—especially so because the frameworks are still in their infancy.&lt;/p&gt;
&lt;p&gt;Currently, I'm using Django 1.6 (beta) for the ORM, &lt;a href="http://django-rest-framework.org/"&gt;Django Rest Framework&lt;/a&gt; to handle HTTP requests, and &lt;a href="http://emberjs.com/"&gt;Ember&lt;/a&gt; on the client side.&lt;/p&gt;
&lt;p&gt;To date, the biggest hurdle I've had to jump is authenticating a user, and then polling for a currently authenticated user.  There are a &lt;a href="http://django-rest-framework.org/api-guide/authentication.html#api-reference"&gt;few methodologies&lt;/a&gt; that could be considered given the technologies I'm using.  They include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basic Auth&lt;/li&gt;
&lt;li&gt;Token Auth&lt;/li&gt;
&lt;li&gt;Session Auth&lt;/li&gt;
&lt;li&gt;OAuth(2)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I chose to implement &lt;strong&gt;Session Auth&lt;/strong&gt; because it works with Django out of the box, and turned out to be mostly painless to implement on the Ember side.&lt;/p&gt;
&lt;p&gt;I created a &lt;code&gt;users&lt;/code&gt; application in Django, partly because I needed to &lt;a href="https://docs.djangoproject.com/en/dev/topics/auth/customizing/#extending-the-existing-user-model"&gt;extend the User model&lt;/a&gt; to satisfy a few project requirements, and partly because I wanted to namespace the tasks involving authentication.  To keep things simple, let's say my model looked something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;AbstractUser&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AbstractUser&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegerField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Nothing complex.  The bulk of what we need is inherited straight out of Django.&lt;/p&gt;
&lt;p&gt;Then I made a quick serializer for DRF:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;reset_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;serializers&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;users.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelSerializer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;last_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Again, basic stuff.&lt;/p&gt;
&lt;p&gt;The tricky part was deciding how to &lt;strong&gt;A&lt;/strong&gt;) authenticate the user "RESTfully" (which is really an incongruous thing to say—but for lack of better terms...), and &lt;strong&gt;B&lt;/strong&gt;) return the currently authenticated user.&lt;/p&gt;
&lt;p&gt;I chose to do all of it in one view (well two including the standard DRF ViewSet), borrowing logic from a few Django built-ins like the AuthenticationForm:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;logout&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;AuthenticationForm&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.decorators&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;api_view&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.response&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;users.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;users.serializers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;UserSerializer&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserViewSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelViewSet&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
    &lt;span class="n"&gt;serializer_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UserSerializer&lt;/span&gt;

&lt;span class="nd"&gt;@api_view&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;DELETE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;session&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Handle &amp;quot;RESTful&amp;quot; login, logout, get current user&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="c"&gt;# Login&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AuthenticationForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DATA&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_user&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# Logout&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;DELETE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;logout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTP_204_NO_CONTENT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# Get currently authenticated user&amp;#39;s id&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_authenticated&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;user_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTP_204_NO_CONTENT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And for completeness, here is &lt;code&gt;urls.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.generic.base&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TemplateView&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.routers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DefaultRouter&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;users.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;UserViewSet&lt;/span&gt;

&lt;span class="n"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DefaultRouter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;users&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UserViewSet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;api/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;session/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;users.views.session&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TemplateView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;template_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;site.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now the tricky part comes in tying it all together in Ember.  Skipping the HTML5 boilerplate for brevity, here's the contents of the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag inside &lt;code&gt;site.html&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;{% raw %}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/x-handlebars&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;session&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/header&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;main&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;outlet&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/x-handlebars&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-template-name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;session&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;authenticated&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="nx"&gt;Welcome&lt;/span&gt; &lt;span class="nx"&gt;back&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;logout&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Logout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;linkTo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sessions.new&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;/linkTo}}&lt;/span&gt;
    &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;/if}}&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/x-handlebars&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-template-name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sessions/new&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;login&amp;#39;&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/h2&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;allError&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kr"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;allError&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/div&amp;gt;{{/if}}&lt;/span&gt;
    &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;usernameError&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kr"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;usernameError&lt;/span&gt;&lt;span class="p"&gt;}}{{&lt;/span&gt;&lt;span class="err"&gt;/if}}&lt;/span&gt;
    &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
    &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;passwordError&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kr"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;passwordError&lt;/span&gt;&lt;span class="p"&gt;}}{{&lt;/span&gt;&lt;span class="err"&gt;/if}}&lt;/span&gt;
    &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
    &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Login&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/form&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;{% endraw %}&lt;/p&gt;
&lt;p&gt;Finally, in the Ember code I had to automate the check for a currently logged-in user, and provide the logic for logging in and out.  Here is &lt;code&gt;application.coffee&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Application&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;App = &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="c1"&gt;# Store&lt;/span&gt;

&lt;span class="nv"&gt;App.Store = &lt;/span&gt;&lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DjangoRESTStore&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;
  &lt;span class="nv"&gt;revision: &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nv"&gt;adapter: &lt;/span&gt;&lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DjangoRESTAdapter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;
    &lt;span class="nv"&gt;url: &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/api&amp;#39;&lt;/span&gt;


&lt;span class="c1"&gt;# Router&lt;/span&gt;

&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="nf"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;@resource&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;users&amp;quot;&lt;/span&gt;
  &lt;span class="nx"&gt;@resource&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;sessions&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;@route&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;new&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;App.ApplicationRoute = &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;
  &lt;span class="nv"&gt;setupController: &lt;/span&gt;&lt;span class="nf"&gt;(controller, context) -&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;@controllerFor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;session&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="c1"&gt;# Models&lt;/span&gt;

&lt;span class="nv"&gt;App.User = &lt;/span&gt;&lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;
  &lt;span class="nv"&gt;firstName = &lt;/span&gt;&lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;string&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nv"&gt;lastName = &lt;/span&gt;&lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;string&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nv"&gt;email = &lt;/span&gt;&lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;string&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nv"&gt;age = &lt;/span&gt;&lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;number&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;App.Session = &lt;/span&gt;&lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;
  &lt;span class="nv"&gt;user: &lt;/span&gt;&lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;belongsTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;App.User&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# Controllers&lt;/span&gt;

&lt;span class="nv"&gt;App.ApplicationController = &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;
  &lt;span class="nv"&gt;user: &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alias&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;controllers.session.content&amp;#39;&lt;/span&gt;

&lt;span class="nv"&gt;App.SessionController = &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;
  &lt;span class="nv"&gt;content: &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;
  &lt;span class="nv"&gt;authenticated: &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="nv"&gt;init: &lt;/span&gt;&lt;span class="nf"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;@_super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;@update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nv"&gt;update: &lt;/span&gt;&lt;span class="nf"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="c1"&gt;# Check if there is a user logged in already&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/session/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt; &lt;span class="nf"&gt;(response) =&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;and&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;@set&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;@set&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;authenticated&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nx"&gt;@set&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
        &lt;span class="nx"&gt;@set&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;authenticated&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="nv"&gt;logout: &lt;/span&gt;&lt;span class="nf"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;url: &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/session/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;type: &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;DELETE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt; &lt;span class="nf"&gt;(response) =&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;@controllerFor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;session&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="nx"&gt;@transitionToRoute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;App.SessionsNewController = &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;
  &lt;span class="nv"&gt;login: &lt;/span&gt;&lt;span class="nf"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nv"&gt;data = &lt;/span&gt;&lt;span class="nx"&gt;@getProperties&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/session/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt; &lt;span class="nf"&gt;(response) =&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Success&lt;/span&gt;
        &lt;span class="nx"&gt;@controllerFor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;session&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nx"&gt;@transitionToRoute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nx"&gt;@set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;allError&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__all__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;@set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;usernameError&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;@set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;passwordError&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There you have it.  Anywhere else in the application you can refer to &lt;code&gt;controllerFor('session').get('content')&lt;/code&gt; to access the logged-in user.&lt;/p&gt;</summary><category term="Django"></category><category term="Ember"></category></entry><entry><title>Functional API Tests</title><link href="http://dustinfarris.com/2013/07/27/functional-api-tests.html" rel="alternate"></link><updated>2013-07-27T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2013-07-27:2013/07/27/functional-api-tests.html</id><summary type="html">&lt;p&gt;Little is more frustrating than running your test suite and watching it fail fail fail because insert name here’s API service is lagging/down/changed/throttled. While knowing about those things has importance, the time to learn about them isn’t when you’re trying to deploy a completely unrelated feature.&lt;/p&gt;
&lt;h2&gt;Mocking to the rescue!&lt;/h2&gt;
&lt;p&gt;There are many libraries available in all languages worth a damn that allow you to short-circuit HTTP requests and insert a mock response; and your code is none the wiser. I’m particularly impressed with &lt;a href="https://github.com/gabrielfalcao/HTTPretty"&gt;HTTPretty&lt;/a&gt; that you can use right in your test:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@httpretty.activate&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_some_awful_api&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="n"&gt;httpretty&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register_uri&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="n"&gt;httpretty&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s"&gt;&amp;quot;http://awful-api.com/action-foo-bar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;{&amp;quot;success&amp;quot;: false}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

     &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://awful-api.com/action-foo-bar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;success&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can always be assured of getting the same response back regardless of awful-api’s current mood.&lt;/p&gt;
&lt;h2&gt;Great! Functional tests too?&lt;/h2&gt;
&lt;p&gt;No. So far every attempt on my part to integrate HTTPretty (or any other HTTP mocking library) with anything Selenium-related has ended either in a crash, or an unresponsive state. I’m assuming this is related to the monkey-patching these libraries do to the core Python libraries which interrupts communication with Selenium’s web driver as a side-effect.&lt;/p&gt;
&lt;h2&gt;But wait! Do we really need to mock in this case?&lt;/h2&gt;
&lt;p&gt;No! And it took me a few days of hair-pulling to finally accept this. I ended up recording all of the responses from the API I’m polling (LinkedIn) and just bypassed the call altogether when testing. Essentially, in &lt;code&gt;selenium_test_settings.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Why Django doesn&amp;#39;t support runtime environments out&lt;/span&gt;
&lt;span class="c"&gt;# of the box yet is beyond me&lt;/span&gt;
&lt;span class="n"&gt;ENVIRONMENT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and in some file somewhere else (like in a fixtures module):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;responses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="s"&gt;&amp;quot;foo-bar-action&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12345&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s"&gt;&amp;quot;attitude&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;cool&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and finally in the actual API code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run_api_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ENVIRONMENT&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;responses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
     &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASE_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I’m not a fan of modifying code just to accommodate tests. In my view, code should be, as much as possible, test agnostic. But in this case I see no other way and it has made my life less stressful which is a good thing.&lt;/p&gt;</summary><category term="Django"></category></entry><entry><title>Previous/Next Navigation in Django CMS</title><link href="http://dustinfarris.com/2013/07/27/previousnext-navigation-in-django-cms.html" rel="alternate"></link><updated>2013-07-27T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2013-07-27:2013/07/27/previousnext-navigation-in-django-cms.html</id><summary type="html">&lt;p&gt;I don't know why Django CMS doesn't have a built-in helper for navigating a page tree.  Maybe this will be included in the upcoming &lt;a href="https://www.django-cms.org/en/blog/2013/07/03/django-cms-3-beta-2/"&gt;3.0 release&lt;/a&gt; (which I am very much looking forward to).&lt;/p&gt;
&lt;p&gt;For now, here's a quick gist that will give you previous/next buttons to get from one page to the next in your CMS Page tree.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;load&lt;/span&gt; &lt;span class="nv"&gt;cms_tags&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="x"&gt;&amp;lt;ul class=&amp;quot;pager&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;current_page.get_previous_sibling&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;page_url&lt;/span&gt; &lt;span class="nv"&gt;current_page.get_previous_sibling&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot; role=&amp;quot;prev&amp;quot;&amp;gt;&amp;amp;larr; Previous&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;page_url&lt;/span&gt; &lt;span class="nv"&gt;current_page.parent&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot; role=&amp;quot;prev&amp;quot;&amp;gt;&amp;amp;larr; Previous&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;current_page.children.exists&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;page_url&lt;/span&gt; &lt;span class="nv"&gt;current_page.children.all&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot; role=&amp;quot;next&amp;quot;&amp;gt;Next &amp;amp;rarr;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="nv"&gt;current_page.get_next_sibling&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;page_url&lt;/span&gt; &lt;span class="nv"&gt;current_page.get_next_sibling&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot; role=&amp;quot;next&amp;quot;&amp;gt;Next &amp;amp;rarr;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="nv"&gt;current_page.parent.get_next_sibling&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;page_url&lt;/span&gt; &lt;span class="nv"&gt;current_page.parent.get_next_sibling&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot; role=&amp;quot;next&amp;quot;&amp;gt;Next &amp;amp;rarr;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="nv"&gt;current_page.parent.parent.get_next_sibling&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;page_url&lt;/span&gt; &lt;span class="nv"&gt;current_page.parent.parent.get_next_sibling&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot; role=&amp;quot;next&amp;quot;&amp;gt;Next &amp;amp;rarr;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Django"></category></entry><entry><title>Testing APIs in Django</title><link href="http://dustinfarris.com/2013/06/23/testing-apis-in-django.html" rel="alternate"></link><updated>2013-06-23T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2013-06-23:2013/06/23/testing-apis-in-django.html</id><summary type="html">&lt;p&gt;I think anyone who has got their hands more than slightly wet with functional testing knows the pain of testing code that relies on API calls.  The usual suspects can bring your tests to a screeching halt: your network is down, the API is down, the API changed.  While knowing about any of the above is important, you likely don't want a flood of emails every time the API you use has a hiccup.&lt;/p&gt;
&lt;p&gt;Python has a few solutions to this problem.  The one I am using is also one of the simplest: &lt;a href="https://github.com/kevin1024/vcrpy"&gt;VCR.py&lt;/a&gt;.  It wraps any code you like and listens for HTTP requests.  It records the responses to these requests to a file and then uses the file instead of the actual HTTP request going forward.  Awesome.&lt;/p&gt;
&lt;p&gt;Not only does this eliminate the annoying test failures, it also speeds up the test suite overall.  Two wins for the price of one.&lt;/p&gt;
&lt;h2&gt;What about Behavioral Tests?&lt;/h2&gt;
&lt;p&gt;Excellent question.  Turns out wrapping Selenium tests in VCR is not a good idea because it records &lt;em&gt;everything&lt;/em&gt; that is communicated over HTTP.  For Selenium that means every page request to the browser, session cookie transmission, etc..  Solution?  A little get method to replace requests.get.&lt;/p&gt;
&lt;p&gt;First a few extra settings in &lt;code&gt;test_settings.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;VCR_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TEST_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;fixtures&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;responses.yaml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;USE_VCR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And a get function in &lt;code&gt;myproject/http.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;vcr&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Wrap HTTP requests with VCR if we are testing.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;use_vcr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;USE_VCR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;use_vcr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;vcr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;patch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VCR_PATH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;use_vcr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;vcr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;patch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Use this method from now on anywhere you would ordinarily use requests.get.&lt;/p&gt;</summary><category term="Django"></category></entry><entry><title>Evernote</title><link href="http://dustinfarris.com/2013/06/22/evernote.html" rel="alternate"></link><updated>2013-06-22T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2013-06-22:2013/06/22/evernote.html</id><summary type="html">&lt;p&gt;&lt;img alt="Evernote logo" src="/uploads/images/evernote-logo.png" /&gt;&lt;/p&gt;
&lt;p&gt;Every now and then I find myself on a gadget spree—spending more than an appropriate amount of time looking for new tools and apps to improve my work flow.  On my last round of widget-hunting I discovered a note-taking app called &lt;a href="http://evernote.com/"&gt;Evernote&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Sounds like an over-glorified Notepad&lt;/h2&gt;
&lt;p&gt;It isn't.  While taking notes may seem like an elementary task, Evernote has a lot of extras that are exceedingly useful.&lt;/p&gt;
&lt;p&gt;First and foremost is a very well thought out &lt;a href="http://blog.evernote.com/tech/2011/09/30/evernote-indexing-system/"&gt;indexing system&lt;/a&gt;.  It allows Evernote to archive, not just typed-out notes, but also emails, PDF documents, and images.  And not just archive, but &lt;em&gt;index&lt;/em&gt; these as well.  That's right, if you throw an image into your notebook, Evernote will capture any text present and index the asset as it would any other note.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Evernote search for 'parachutes'" src="/uploads/images/evernote-search-parachutes.png" /&gt;&lt;/p&gt;
&lt;p&gt;Once the idea of archiving any sort of document you like catches on, I've found it becomes addictive and extremely useful in the end.&lt;/p&gt;
&lt;h2&gt;Email&lt;/h2&gt;
&lt;p&gt;Probably my favorite feature of Evernote—also one of the simplest—is the ability to archive email.  Forward any email you get to &lt;em&gt;&lt;code&gt;username@m.evernote.com&lt;/code&gt;&lt;/em&gt; and it gets added to your archive.  So now when you're searching your notes for details on a web page feature you need to implement for a client, anything the client has sent to you in email is included as well.&lt;/p&gt;
&lt;p&gt;Oh, and that includes attachments.  Text buried in an Excel spreadsheet someone emailed you months ago?  Evernote will bring it up in a flash.&lt;/p&gt;
&lt;p&gt;Also, on email, the forwarding feature is nice, but it leaves a lot of header information at the top.  "Orginially from, original message.."  Mail.app has a operation, redirect, that essentially forwards the email, but leaves the From: header as the original sender.  In short, this sends the email to Evernote exactly as it was sent to you.  Evernote will even make note of the From header and record that as the author in the entry's meta-data.&lt;/p&gt;
&lt;h2&gt;Extensibility&lt;/h2&gt;
&lt;p&gt;Evernote plugs in to a lot of applications you're probably already using.  If it doesn't, it tends to be fairly painless to copy and paste anything you see.  With a vast number of add-on software, browser plugins, and share options in third-party apps, you can effectively archive your entire electronic life.&lt;/p&gt;
&lt;p&gt;For example, I'm using an app called &lt;a href="http://shop.skype.com/apps/Call-recording-audio-only/Callnote.html"&gt;Callnote&lt;/a&gt; that automatically records my Skype calls.  With one click, the entire call is sent to Evernote.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Callnote screenshot" src="/uploads/images/callnote-screenshot.png" /&gt;&lt;/p&gt;
&lt;h2&gt;Everyone is using it&lt;/h2&gt;
&lt;p&gt;One of the downsides of working at home is that I am usually the last to hear about cool stuff, and by time I do, it's old news.  Once I started using Evernote religiously, I discovered that everyone I work with regularly also use it heavily.  Why does that matter?  Because you can collaborate on notebooks and search each other's archive.  This is great for doing internal research when you have a team that is geographically spread out.&lt;/p&gt;
&lt;h2&gt;Concerns&lt;/h2&gt;
&lt;p&gt;I was perturbed when I read that Evernote experienced a &lt;a href="http://online.wsj.com/article/SB10001424127887323478304578336373531236296.html"&gt;security breach&lt;/a&gt; earlier this year.  They have, though, implemented &lt;a href="http://blog.evernote.com/blog/2013/05/30/evernotes-three-new-security-features/"&gt;2-step verification&lt;/a&gt; since then.&lt;/p&gt;
&lt;p&gt;Initially, I was turned off by mandatory use of Evernote's cloud (no option to use Google Drive, iCloud, etc..).  But I know now that Evernote's servers don't just store the information, they process and index the files so it makes sense to use their own hardware.&lt;/p&gt;
&lt;p&gt;Lastly, I was surprised at the lack of Markdown support, but using a WYSYWIG has become comfortable very quickly as they have built in keyboard shortcuts for common formatting operations (bullets, links, indentation, etc..).&lt;/p&gt;
&lt;h2&gt;tl;dr&lt;/h2&gt;
&lt;p&gt;Evernote is a robust application that synchronizes your notes to the cloud.  It integrates with many other applications and has a well-tuned search feature.  It can be used by individuals or by an entire team—giving everyone real-time updates on thoughts, meetings, and, well, anything else you would take notes on.&lt;/p&gt;</summary><category term="[Evernote]"></category></entry><entry><title>And now, Octopress</title><link href="http://dustinfarris.com/2013/06/21/and-now-octopress.html" rel="alternate"></link><updated>2013-06-21T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2013-06-21:2013/06/21/and-now-octopress.html</id><summary type="html">&lt;p&gt;&lt;img alt="Octopress logo" src="/uploads/images/octopress.png" /&gt;&lt;/p&gt;
&lt;p&gt;What can top hosting your blog on GitHub Pages using Jekyll?  Wrapping it all together with Octopress.&lt;/p&gt;
&lt;p&gt;Octopress is an open-source blogging framework that wraps the above
technologies in a nice package complete with automation in a Rakefile, a boilerplate theme, and lots of plugins.&lt;/p&gt;
&lt;p&gt;But I didn't decide to use Octopress for the themes; in fact, I spent half a day gutting what it came with and dropping in bootstrap and my own design.  Where octopress shines is in its integration with Jekyll and GitHub.&lt;/p&gt;
&lt;p&gt;GitHub has a rather annoying (but probably necessary) stipulation on using Jekyll and their Pages to host your blog: &lt;a href="https://help.github.com/articles/pages-don-t-build-unable-to-run-jekyll#unsafe-plugins"&gt;No plugins allowed&lt;/a&gt;.  I'm sure there are a hundred security reasons for this, but it makes doing, well, really anything outside of the Jekyll "box" impractical.&lt;/p&gt;
&lt;p&gt;Octopress overcomes this roadblock by pre-compiling everything on your local machine before you deploy.  With this strategy, you can use any and whatever automation/plugin tools you like.  I, for one, am using a &lt;a href="https://github.com/robbyedwards/octopress-tag-pages"&gt;tagging plugin&lt;/a&gt;.  Oh, and SASS is built in too!&lt;/p&gt;
&lt;p&gt;I cloned Octopress and made several changes to the HTML layout and CSS.  It is available on &lt;a href="https://github.com/dustinfarris/dustinfarris.github.com/tree/source"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary><category term="Octopress"></category></entry><entry><title>From Django to GitHub Pages</title><link href="http://dustinfarris.com/2013/06/20/from-django-to-github-pages.html" rel="alternate"></link><updated>2013-06-20T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2013-06-20:2013/06/20/from-django-to-github-pages.html</id><summary type="html">&lt;p&gt;I finally joined the cool club of hackers who host their blogs on &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;.  I won't rave
about the sheer awesomeness of using GitHub, &lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;, and &lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; to write blogs because
there are already about a hundred million other blogs out there doing just that.  I will, though,
mention a thing or two about migrating my blog from its previous framework, Django.&lt;/p&gt;
&lt;h2&gt;Migrating Entries&lt;/h2&gt;
&lt;p&gt;Jekyll's required layout is well-defined, so to get a bunch of database stuff to look like
Markdown, I found it was easiest to run them all through a templating script that I wrote for just
the purpose.&lt;/p&gt;
&lt;p&gt;The template is fairly straight-forward &lt;code&gt;post.html&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;{% raw %}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;Title: &amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;entry.title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;Date: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;entry.pub_date&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;date&lt;/span&gt;&lt;span class="s2"&gt;:&amp;quot;Y-m-d H:i:s&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;entry.content&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;safe&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;{% endraw %}&lt;/p&gt;
&lt;p&gt;The migration script was a little tricky because some of my posts were stored in Markdown already,
but some older ones were actually still in raw HTML from way-back-when I used a WYSIWYG editor.&lt;/p&gt;
&lt;p&gt;I used an open-source convertor called &lt;a href="https://github.com/aaronsw/html2text"&gt;html2text&lt;/a&gt; with minimal issues.&lt;/p&gt;
&lt;p&gt;The migration script converts anything written prior to May, 2012 and runs it through html2text.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.template&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Template&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.template.defaultfilters&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;slugify&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;html2text&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;blog.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;


&lt;span class="n"&gt;posts_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/Sites/dustinfarris.github.com/_posts&amp;quot;&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Starting...&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;post.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="c"&gt;# The day I started using Markdown in Django&lt;/span&gt;
    &lt;span class="n"&gt;md_started&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_default_timezone&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Migrating &amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;...&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;
        &lt;span class="n"&gt;pub_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_naive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pub_date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default_timezone&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pub_date&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;md_started&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;html2text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html2text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c"&gt;# Open a new file using Jekyll&amp;#39;s required naming format&lt;/span&gt;
        &lt;span class="n"&gt;format&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;{dir}/{date}-{slug}.md&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;posts_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pub_date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;slugify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c"&gt;# Render the template and encode in UTF-8 (just in case)&lt;/span&gt;
        &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;entry&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c"&gt;# Done&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Finished migrating &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; entries.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That took care of the heavy lifting, and I was left to tidy up the remains as I saw fit.&lt;/p&gt;
&lt;h2&gt;Bash Script&lt;/h2&gt;
&lt;p&gt;In case this blogging setup isn't hackerish enough, I wrote a quick bash script to jumpstart a new
blog post.  In &lt;code&gt;~/.profile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Create a new blog post with boilerplate front-matter&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; blog&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;shopt&lt;/span&gt; -s xpg_echo
  &lt;span class="nb"&gt;cd&lt;/span&gt; ~/Sites/dustinfarris.github.com/_posts
  &lt;span class="nv"&gt;SLUGIFIED&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed -e &lt;span class="s1"&gt;&amp;#39;s/[^[:alnum:]]/-/g&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tr -s &lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tr A-Z a-z&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;FILENAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;date +&lt;span class="se"&gt;\%&lt;/span&gt;Y-&lt;span class="se"&gt;\%&lt;/span&gt;m-&lt;span class="se"&gt;\%&lt;/span&gt;d&lt;span class="sb"&gt;`&lt;/span&gt;-&lt;span class="nv"&gt;$SLUGIFIED&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;TIMESTAMP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;date +&lt;span class="se"&gt;\%&lt;/span&gt;Y-&lt;span class="se"&gt;\%&lt;/span&gt;m-&lt;span class="se"&gt;\%&lt;/span&gt;d&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;date +&lt;span class="se"&gt;\%&lt;/span&gt;H:&lt;span class="se"&gt;\%&lt;/span&gt;M:&lt;span class="se"&gt;\%&lt;/span&gt;S&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;---\n\nlayout: default\ntitle: \&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;\&amp;quot;\ndate: &lt;/span&gt;&lt;span class="nv"&gt;$TIMESTAMP&lt;/span&gt;&lt;span class="s2"&gt;\n\n---\n\n&amp;quot;&lt;/span&gt; &amp;gt; &lt;span class="nv"&gt;$FILENAME&lt;/span&gt;.md &lt;span class="p"&gt;;&lt;/span&gt;
  vi +&lt;span class="s2"&gt;&amp;quot;:set syntax=markdown&amp;quot;&lt;/span&gt; + &lt;span class="nv"&gt;$FILENAME&lt;/span&gt;.md &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now if I can just find an editor that doesn't go berserk on embedded code blocks.&lt;/p&gt;</summary><category term="Django"></category><category term="GitHub Pages"></category><category term="Jekyll"></category><category term="Markdown"></category></entry><entry><title>Points to Consider</title><link href="http://dustinfarris.com/2013/04/28/points-to-consider.html" rel="alternate"></link><updated>2013-04-28T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2013-04-28:2013/04/28/points-to-consider.html</id><summary type="html">&lt;p&gt;&lt;a href="http://krugman.blogs.nytimes.com/2013/04/27/the-ignoramus-strategy/"&gt;Paul Krugman&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The economy isn't like an individual family that earns a certain amount
    and spends some other amount, with no relationship between the two. My
    spending is your income and your spending is my income. If we both slash
    spending, both of our incomes fall.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We are now in a situation in which many people have cut spending, either
    because they chose to or because their creditors forced them to, while
    relatively few people are willing to spend more. The result is depressed
    incomes and a depressed economy, with millions of willing workers unable
    to find jobs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Things aren't always this way, but when they are, the government is not
    in competition with the private sector. Government purchases don’t use
    resources that would otherwise be producing private goods, they put
    unemployed resources to work. Government borrowing doesn't crowd out
    private borrowing, it puts idle funds to work. As a result, now is a time
    when the government should be spending more, not less. If we ignore this
    insight and cut government spending instead, the economy will shrink and
    unemployment will rise. In fact, even private spending will shrink,
    because of falling incomes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This view of our problems has made correct predictions over the past four
    years, while alternative views have gotten it all wrong. Budget deficits
    haven't led to soaring interest rates (and the Fed's "money-printing"
    hasn't led to inflation); austerity policies have greatly deepened
    economic slumps almost everywhere they have been tried.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Yes, the government must pay its bills in the long run. But spending cuts
    and/or tax increases should wait until the economy is no longer
    depressed, and the private sector is willing to spend enough to produce
    full employment.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;</summary><category term="[Paul Krugman]"></category></entry><entry><title>"Testing in Django"</title><link href="http://dustinfarris.com/2013/02/23/testing-in-django.html" rel="alternate"></link><updated>2013-02-23T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2013-02-23:2013/02/23/testing-in-django.html</id><summary type="html">&lt;p&gt;Writing tests and test-driven development has become all the rage lately; but before declaring assertions left and
right, it's important to consider where, why, and how you will write your tests.&lt;/p&gt;
&lt;p&gt;Different frameworks have different philosophies about how to go about this but, more often than not, developers tend
to create their own style or use the style of third-party test libraries.  While there is nothing wrong with differing
styles, you should take care to ensure that your are being efficient and effective.&lt;/p&gt;
&lt;p&gt;This is my (by no means authoritative) take on the three important divisions of testing (unit/integration/functional)
in Django.&lt;/p&gt;
&lt;h2&gt;Unit Tests&lt;/h2&gt;
&lt;p&gt;The most basic level of testing is unit testing.  This is where you ensure your module uses other (already tested)
modules the way it should.  They are absolutely the least complex, no-brainer-type tests you will ever write.&lt;/p&gt;
&lt;p&gt;Think about unit tests like hooking up cars on a train.  When you hook up a car on the end of a train you'll double-
check that it is indeed fastened to the car in front of it.  You won't recheck the entire train because you assume
whoever hooked up the cars in front did their part ensuring everything was in place.&lt;/p&gt;
&lt;p&gt;For example, say I have a filter I call often so I put it into a module:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_authors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;library&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;books__library&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;library&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We know that Django's ORM works—it is &lt;em&gt;very&lt;/em&gt; well tested—so there is no need to re-test it.  What we do need to
test, though, is that our function utilizes the ORM the way we want.  We accomplish this with a unit test and a
wonderful library called &lt;a href="http://www.voidspace.org.uk/python/mock/"&gt;Mock&lt;/a&gt;. (now
&lt;a href="http://docs.python.org/3/library/unittest.mock.html"&gt;included&lt;/a&gt; in Python 3.3 and up)&lt;/p&gt;
&lt;p&gt;Installing Mock is easy with pip: &lt;code&gt;pip install mock&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Mock replaces a module with a fake module that intercepts calls and records them along with any arguments involved.
Using mock in our example, we can show that our method calls &lt;code&gt;Author.objects.filter&lt;/code&gt; without actually running it.&lt;/p&gt;
&lt;p&gt;The basic usage of Mock is first setting it up:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;my_mock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Mock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;return_value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;something&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And then asserting that it was called with any number of arguments:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;my_mock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assert_called_with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myarg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;myvalue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For our Django unit tests, we'll use Mock's &lt;code&gt;patch&lt;/code&gt; decorator which declares a Mock for the duration of the test:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@patch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;mymodule.mymethod&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_something&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mymethod_mock&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;mymethod_mock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assert_called_with&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here's what a unit test looks like for our example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;unittest&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;mock&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;myapp.mymodule&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;get_authors&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;GetAuthorsTest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="nd"&gt;@mock.patch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;myapp.mymodule.Author&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_get_authors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AuthorMock&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Mock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;return_value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ReturnMock&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_authors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;library_mock&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assert_called_with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;books__library&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;library_mock&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ReturnMock&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In summary, we:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;"Patched" our test by mocking Author.  Note that we reference Author as and object
    within our module, not from it's original source which probably would have been
    something like &lt;code&gt;myapp.models.Author&lt;/code&gt;.  Also note that mock patches are passed to
    your function as arguments which can be any name you like.  I chose &lt;code&gt;AuthorMock&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Piggybacked another mock, &lt;code&gt;objects.filter&lt;/code&gt;, on top of the AuthorMock.  You'll
    find that mocks are very flexible once they've been created.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Assigned a return value to the objects.filter mock.  We test for this later.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Called the function we want to test with a dummy argument.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Asserted that our mock was indeed called with the appropriate arguments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Asserted that the function did indeed return the result of that call, which in
    this case should be the value we gave to return_value.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We accomplished all this without actually touching the Django ORM, but now we know for sure that when mocks are put
aside, this function will operate correctly.&lt;/p&gt;
&lt;p&gt;Why do we do it this way?  Why not create some dummy data in the database in and see if it produces the right results.
Well we actually will do that later, in the form of integration tests.  Unit tests have two big benefits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;They reduce false-positives by ensuring your code is utilizing the right code
    rather than producing the right results (which could be right for your test, but
    wrong in other scenarios)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;They are very, &lt;em&gt;very&lt;/em&gt; fast.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notice we don't even use Django's &lt;code&gt;TestCase&lt;/code&gt;.  We don't need it.  For some unit tests you may, but often Python's
&lt;code&gt;unittest&lt;/code&gt; library and mock are all you need.  These tests will run insanely fast, and for that fact, you can get
into the habit of running them periodically while you're developing.&lt;/p&gt;
&lt;p&gt;As you build your application, each building block should be unit tested.  This will increase confidence in your
architecture especially when you add features to existing code.&lt;/p&gt;
&lt;h2&gt;Integration Tests&lt;/h2&gt;
&lt;p&gt;These are usually the most common tests that beginners right because they tend to be pretty straight-forward, and don't
require much thought.  Integration tests essentially are meant to accomplish "if I put in input A, do I get expected
output B?"&lt;/p&gt;
&lt;p&gt;In Django, integration tests ensure that your modules and views are generating the content you expect them to.&lt;/p&gt;
&lt;p&gt;The easiest way to write integration tests in Django is to use the &lt;code&gt;TestClient&lt;/code&gt; that Django provides which allows you
to fake browser requests and see what sort of responses you get back from you application.&lt;/p&gt;
&lt;p&gt;Say we have this very basic view:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;blog_detail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blog_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;blog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_object_or_404&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Blog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;blog_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;blog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;blog/blog_detail.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endhighlight&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;

&lt;span class="n"&gt;There&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;really&lt;/span&gt; &lt;span class="n"&gt;two&lt;/span&gt; &lt;span class="n"&gt;scenarios&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;would&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="n"&gt;Scenario&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt; &lt;span class="n"&gt;exists&lt;/span&gt;
&lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="n"&gt;Scenario&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;exist&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;scenario&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;would&lt;/span&gt; &lt;span class="n"&gt;expect&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;success&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="n"&gt;after&lt;/span&gt; &lt;span class="n"&gt;rendering&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;blog_detail&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;In&lt;/span&gt;
&lt;span class="n"&gt;scenario&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;would&lt;/span&gt; &lt;span class="n"&gt;expect&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;found&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;To&lt;/span&gt; &lt;span class="n"&gt;accomplish&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;another&lt;/span&gt; &lt;span class="n"&gt;common&lt;/span&gt; &lt;span class="n"&gt;testing&lt;/span&gt; &lt;span class="n"&gt;apparatus&lt;/span&gt; &lt;span class="n"&gt;called&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;fixture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;Mock&lt;/span&gt; &lt;span class="n"&gt;library&lt;/span&gt; &lt;span class="n"&gt;provides&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;decorator&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;easy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;Essentially&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="n"&gt;case&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;defines&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;fixture&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;For&lt;/span&gt; &lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="sb"&gt;``&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="nd"&gt;@fixture&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bob&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here is how we would write a test using Django's TestClient:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;mock&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.urlresolvers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.test&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TestCase&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;myblogapp.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Blog&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;myblogapp.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;blog_detail&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BlogDetailTest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="nd"&gt;@mock.fixture&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Blog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;BlogMock&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;BlogMock&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_when_blog_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Django"></category></entry><entry><title>"2012 27\" iMac with 32GB Kingston HyperX"</title><link href="http://dustinfarris.com/2013/01/16/2012-27-imac-with-32gb-kingston-hyperx.html" rel="alternate"></link><updated>2013-01-16T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2013-01-16:2013/01/16/2012-27-imac-with-32gb-kingston-hyperx.html</id><summary type="html">&lt;p&gt;After nearly 4 years of using a MacbookPro for all things internet, I've finally upgraded my home with a shiny new &lt;a href="http://www.apple.com/imac/"&gt;27" iMac&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The new design is amazing, and yes, it's very, &lt;em&gt;very&lt;/em&gt; fast.  The point of this article, though, is to inform anyone curious that Kingston HyperX RAM does in fact work just beautifully with the new iMac.&lt;/p&gt;
&lt;p&gt;On Kingston's website, this is not so obvious.  When you select "mac-compatible" RAM they point you to a slightly higher latency RAM that is on par with the factory RAM Apple installs.&lt;/p&gt;
&lt;p&gt;Kingston also manufactures equally speced RAM at a lower latency called "HyperX".  This RAM has a CAS latency of 9 and, I'm happy to announce, works just fine with iMac.&lt;/p&gt;
&lt;p&gt;I installed 32GB of &lt;a href="http://www.newegg.com/Product/Product.aspx?Item=N82E16820104317"&gt;KHX16S9P1K2&lt;/a&gt; in my iMac, and here are the 64-bit GeekBench results:&lt;/p&gt;
&lt;p&gt;&lt;img alt="iMac 27&amp;quot; 32GB Kingston HyperX GeekBench results" src="/media/filer_public/2013/01/16/screen_shot_2013-01-16_at_51711_pm.png" /&gt;&lt;/p&gt;</summary><category term="iMac"></category></entry><entry><title>".rvmrc and binstubs"</title><link href="http://dustinfarris.com/2012/12/13/rvmrc-and-binstubs.html" rel="alternate"></link><updated>2012-12-13T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-12-13:2012/12/13/rvmrc-and-binstubs.html</id><summary type="html">&lt;p&gt;A while ago I wrote a &lt;a href="http://dustinfarris.com/2012/8/ractivate-the-missing-script-for-rvm/"&gt;script&lt;/a&gt; to help manage gemsets and PATH settings when switching between Ruby projects.  It has worked very well, but I've recently learned about .rvmrc — yes, I'm still new at this.&lt;/p&gt;
&lt;p&gt;Most RoR programmers probably know that one must prefix console commands with &lt;code&gt;bundle exec&lt;/code&gt; to ensure the correct binaries are used for the project you are working on.  Something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;bundle exec rake db:test:prepare&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Most RoR programmers also probably know that you can "stub" out these binaries into a project directory by installing your gems with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;bundle install --binstubs=./bundler_stubs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, the objective is to get the bundler_stubs directory on your system path whenever you are working on the project (and off your path when you leave it).&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;.rvmrc&lt;/code&gt; file goes in your project's root directory and it is automatically sourced in the background when you enter the directory.  There is also an optional &lt;code&gt;.rvmrc&lt;/code&gt; file in your home directory that gets called whenever you leave your project's root directory — or enter any other non-.rvmrc-containing directory for that matter.  The .rvmrc file is simply a &lt;a href="https://rvm.io/workflow/rvmrc/"&gt;bash script&lt;/a&gt;, so without further ado, here is an .rvmrc file for your project that will switch to a project-specific gemset and place the project's bundler_stubs directory on your path.  You only need to edit the top line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rvm --create ruby-1.9.3-p327@projectname

deactivate&lt;span class="o"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$_OLD_VIRTUAL_PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$_OLD_VIRTUAL_PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;export &lt;/span&gt;PATH
    &lt;span class="nb"&gt;unset &lt;/span&gt;_OLD_VIRTUAL_PATH
    &lt;span class="k"&gt;fi&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$_OLD_VIRTUAL_PS1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nv"&gt;PS1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#_OLD_VIRTUAL_PS1&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;export &lt;/span&gt;PS1
    &lt;span class="nb"&gt;unset &lt;/span&gt;_OLD_VIRTUAL_PS1
    &lt;span class="k"&gt;fi&lt;/span&gt;

    &lt;span class="nb"&gt;unset &lt;/span&gt;_RUBY_PROJECT_DIR

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;nondestructive&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;unset&lt;/span&gt; -f deactivate
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# unset irrelevant variables&lt;/span&gt;
deactivate nondestructive

&lt;span class="nv"&gt;_RUBY_PROJECT_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;`pwd`&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;_RUBY_PROJECT_DIR
&lt;span class="nv"&gt;_OLD_VIRTUAL_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$_RUBY_PROJECT_DIR&lt;/span&gt;&lt;span class="s2"&gt;/bundler_stubs:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;PATH

&lt;span class="nv"&gt;_OLD_VIRTUAL_PS1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$PS1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;x&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; x &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nv"&gt;PS1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$PS1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nv"&gt;PS1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;(`basename \&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$_RUBY_PROJECT_DIR&lt;/span&gt;&lt;span class="s2"&gt;\&amp;quot;`) &lt;/span&gt;&lt;span class="nv"&gt;$PS1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This gives the ability to move in and out of your project's directory and your gemsets and PATH are managed seamlessly:&lt;/p&gt;
&lt;p&gt;&lt;img alt=".rvmrc script in action" src="/media/filer_public/2012/12/13/rvmscriptinaction.png" /&gt;&lt;/p&gt;</summary><category term="RVM"></category></entry><entry><title>"SEO Is Overrated"</title><link href="http://dustinfarris.com/2012/12/11/seo-is-overrated.html" rel="alternate"></link><updated>2012-12-11T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-12-11:2012/12/11/seo-is-overrated.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.smashingmagazine.com/2012/12/11/seo-the-inconvenient-truth/"&gt;Smashing Magazine&lt;/a&gt; has a good article today on the truth behind Search Engine Optimization "black magic."  It's something I've been saying for years — SEO isn't rocket science, and "companies" who claim to provide (expensive) SEO expertise are merely taking advantage of the general public ignorance on the subject.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Most website owners perceive SEO as a dark art, shrouded in mystery. They have heard phrases like "gateway pages" and "keyword density", or have been bamboozled by technobabble about the way websites should be built. All of this has left them feeling that SEO is the purview of experts. This is a misconception reenforced by certain segments of the SEO community, keen to justify their fees.&lt;/p&gt;
&lt;p&gt;Google's aim is simple: connect its searchers with the most relevant content. If you are more worried about a good ranking than providing relevant content, then you are going to be fighting a losing battle.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If your web developer did his/her job right in the first place, the "SEO" has already been done.  It is up to the company to then generate relevant content on a regular basis.  &lt;em&gt;That&lt;/em&gt; is the real "secret" of optimized web exposure.&lt;/p&gt;</summary><category term="Search Engine Optimization"></category></entry><entry><title>"HTML5 Navigation in Django"</title><link href="http://dustinfarris.com/2012/11/29/html5-navigation-in-django.html" rel="alternate"></link><updated>2012-11-29T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-11-29:2012/11/29/html5-navigation-in-django.html</id><summary type="html">&lt;p&gt;Creating a snappy user experience can be easily obtained by implementing &lt;a href="http://dev.w3.org/html5/spec/history.html#history"&gt;HTML5 navigation&lt;/a&gt;.  Not only does it take less time to render only the needed Django templates, the browser has less information to digest on the response.&lt;/p&gt;
&lt;p&gt;Note that I do not use the popular method of using jQuery to request a page, then parsing out the elements I want to replace.  No, this method intelligently renders only the appropriate "snippet" templates and returns the HTML in a JSON response.&lt;/p&gt;
&lt;p&gt;I'll use &lt;a href="http://coffeescript.org/"&gt;CoffeeScript&lt;/a&gt;, &lt;a href="http://jade-lang.com/"&gt;Jade&lt;/a&gt;, and of course Python in this example.  Don't worry if you're not familiar with the first two as it is fairly easy to understand what is going on and convert to the JavaScript and HTML equivalents.&lt;/p&gt;
&lt;p&gt;&lt;a id="contents"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#planning"&gt;Planning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#templates"&gt;Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#response-objects"&gt;Response Objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#views"&gt;Views&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#scripting-it-together"&gt;Scripting it together&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id="planning"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Planning&lt;/h2&gt;
&lt;p&gt;Before we can start building the navigation script, we need to decide which parts of the page we want to (re)load.  Take a basic (common) example:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Normal web page layout" src="/media/filer_public/2012/11/29/normallayout.png" /&gt;&lt;/p&gt;
&lt;p&gt;Say the content area is what we'll be after most of the time, but sometimes maybe the sidebar changes to.  Perhaps it holds user information that would change when a user logs in or edits their profile.  To be on the safe side, we will want to refresh the &lt;code&gt;#main &amp;gt; article&lt;/code&gt; and &lt;code&gt;#main &amp;gt; aside&lt;/code&gt; containers on every navigation event.  Moving on.&lt;/p&gt;
&lt;p&gt;&lt;a id="templates"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Templates&lt;/h2&gt;
&lt;p&gt;This is where we make decisions based on our "planning."  Based on our layout, we'll use a base template that looks something like this in &lt;code&gt;myproject/templates/base.jade&lt;/code&gt; (in Jade):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nn"&gt;!!! 5&lt;/span&gt;

&lt;span class="nt"&gt;html&lt;/span&gt;
    &lt;span class="nt"&gt;head&lt;/span&gt;
    &lt;span class="nt"&gt;title&lt;/span&gt;
        &lt;span class="nt"&gt;block&lt;/span&gt; title
        | My Project
    &lt;span class="nt"&gt;body&lt;/span&gt;
    &lt;span class="nt"&gt;header&lt;/span&gt;
        &lt;span class="nt"&gt;block&lt;/span&gt; header
        &lt;span class="nt"&gt;include&lt;/span&gt; _header
    &lt;span class="nf"&gt;#main&lt;/span&gt;
        &lt;span class="nt"&gt;aside&lt;/span&gt;
        &lt;span class="nt"&gt;include&lt;/span&gt; _aside
        &lt;span class="nt"&gt;article&lt;/span&gt;
        &lt;span class="nt"&gt;block&lt;/span&gt; content
    &lt;span class="nt"&gt;footer&lt;/span&gt;
        &lt;span class="nt"&gt;block&lt;/span&gt; footer
        &lt;span class="nt"&gt;include&lt;/span&gt; _footer
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I'm leaving out the other usual stuff (jQuery, stylesheets, etc..) for brevity.  The two areas we are concerned with, again, are the 'aside' and 'article' areas under &lt;code&gt;#main&lt;/code&gt;.  The aside area will probably be built with one template, in our case, &lt;code&gt;myproject/templates/_aside.jade&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;if&lt;/span&gt; request.user.is_authenticated
    &lt;span class="nt"&gt;p&lt;/span&gt; Welcome back!
&lt;span class="nt"&gt;else&lt;/span&gt;
    &lt;span class="nt"&gt;p&lt;/span&gt; You are not registered
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Or something like that.  The content area is more interesting.  For every "view" we will need a full template and template snippet.  The template snippet is used for HTML5 AJAX requests, the full template for regular requests.&lt;/p&gt;
&lt;p&gt;Suppose we have a blog app/model.  Using a blog 'detail' view as an example, we will have two templates.  The first, &lt;code&gt;myproject/blog/templates/blog/detail.jade&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;extends&lt;/span&gt; base

&lt;span class="nt"&gt;block&lt;/span&gt; title
    | {{ object.title }}

&lt;span class="nt"&gt;block&lt;/span&gt; content
    &lt;span class="nt"&gt;include&lt;/span&gt; blog/_detail
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's it, just a skeleton, and the meat goes in the snippet, &lt;code&gt;myproject/blog/templates/blog/_detail.jade&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;{% raw %}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;header&lt;/span&gt;
  &lt;span class="nt"&gt;h1&lt;/span&gt; {{ object.title }}
    &lt;span class="nt"&gt;p&lt;/span&gt; Written by {{ object.author }}

&lt;span class="err"&gt;{{ &lt;/span&gt;&lt;span class="nt"&gt;object&lt;/span&gt;&lt;span class="nc"&gt;.content&lt;/span&gt;|safe }}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;{% endraw %}&lt;/p&gt;
&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="response-objects"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Response Objects&lt;/h2&gt;
&lt;p&gt;A big part of the HTML5 navigation process is the HTTP response. As I mentioned, we will be compiling the HTML into a JSON response, and I've found it saves a lot of time to put a couple wrappers on Django's standard HttpResponse class.  (At the risk of confusion, I'm also going to throw in a 'redirect' class which will come in very handy for many people).  I like to put this in an 'http' module under my project module.  &lt;code&gt;myproject/http.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.template&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RequestContext&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.template.loader&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render_to_string&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils.encoding&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;smart_unicode&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;JsonResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;article_template&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;
        &lt;span class="n"&gt;aside_template&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;_aside.jade&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;request_context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RequestContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;render_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;article_template&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request_context&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;article&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;render_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aside_template&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request_context&lt;/span&gt;&lt;span class="p"&gt;)})&lt;/span&gt;
    &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JsonResponse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;smart_unicode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;JsonRedirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;redirect&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JsonRedirect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;smart_unicode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The JsonResponse object will give us a JSON response containing the new pages title, sidebar content, and main content.  We'll use this later.&lt;/p&gt;
&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="views"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Views&lt;/h2&gt;
&lt;p&gt;Now it's up to the view to return the appropriate response.  This part is really quite straight forward.  For our example detail view, we'll just make a minor adjustment to the Django's detail generic view. &lt;code&gt;myproject/blog/views.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils.decorators&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;method_decorator&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.decorators.vary&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;vary_on_headers&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.generic.detail&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DetailView&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;myproject.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;JsonResponse&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BlogDetailView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DetailView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="nd"&gt;@method_decorator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vary_on_headers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;X-Requested-With&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BlogDetailView&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;render_to_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_ajax&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;JsonResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;blog/_detail.jade&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;blog/detail.jade&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To quickly summarize, we are determining how the page is being requested, by AJAX(HTML5), or as a normal request(not HTML5), and returning the snippet, or the full page respectively.&lt;/p&gt;
&lt;p&gt;We do a minor override on the &lt;code&gt;dispatch&lt;/code&gt; method to make sure caching doesn't confuse our logic---for example if the page is requested as AJAX and Django caches the response, then the page is requested normally and Django returns the same JSON object.  The &lt;code&gt;vary_on_headers&lt;/code&gt; decorator effectively gives us two cache slots for the view.&lt;/p&gt;
&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="scripting-it-together"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Scripting it together&lt;/h2&gt;
&lt;p&gt;Now we take our server logic and implement it client-side.  We want to capture all 'a' clicks and run it through HTML5.  I'm including all the necessary code to make this work, which should mostly make sense if you are already familiar with how HTML5 pushState works.  (I use &lt;a href="http://modernizr.com/"&gt;Modernizr&lt;/a&gt; for feature detection) I'm also including a couple extra goodies like redirect handling and Google Analytics logic.  &lt;code&gt;myproject/static/javascripts/main.coffee&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Navigation handling&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;Modernizr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;history&lt;/span&gt;
    &lt;span class="c1"&gt;# Initialize history state&lt;/span&gt;
    &lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replaceState&lt;/span&gt;
    &lt;span class="nv"&gt;title: &lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;
    &lt;span class="nv"&gt;article: &lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;#main &amp;gt; article&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nv"&gt;aside: &lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;#main &amp;gt; aside&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;

    &lt;span class="c1"&gt;# Navigate to a new page&lt;/span&gt;
    &lt;span class="nv"&gt;goTo = &lt;/span&gt;&lt;span class="nf"&gt;(url) -&amp;gt;&lt;/span&gt;
    &lt;span class="c1"&gt;# First, set a query-string to prevent browsers from caching&lt;/span&gt;
    &lt;span class="c1"&gt;# the JSON response.  (a known issue in Chrome)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;is&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="nv"&gt;get_url = &lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;?dontcacheme=1&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nv"&gt;get_url = &lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;amp;dontcacheme=1&amp;#39;&lt;/span&gt;

    &lt;span class="c1"&gt;# Send the request and handle the response&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;(response) -&amp;gt;&lt;/span&gt;
        &lt;span class="c1"&gt;# Are we being redirected?&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;redirect&lt;/span&gt; &lt;span class="o"&gt;isnt&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;goTo&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;redirect&lt;/span&gt;
        &lt;span class="c1"&gt;# Nope, continue on&lt;/span&gt;
        &lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pushState&lt;/span&gt;
        &lt;span class="nv"&gt;title: &lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;
        &lt;span class="nv"&gt;article: &lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;
        &lt;span class="nv"&gt;aside: &lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aside&lt;/span&gt;
        &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;title = &lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;
        &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;#main &amp;gt; article&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;
        &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;#main &amp;gt; aside&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aside&lt;/span&gt;
        &lt;span class="nx"&gt;captureNavigation&lt;/span&gt; &lt;span class="c1"&gt;#main&lt;/span&gt;

        &lt;span class="c1"&gt;# Alert Google Analytics&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_gaq&lt;/span&gt; &lt;span class="o"&gt;isnt&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_gaq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;_trackPageView&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="c1"&gt;# Make sure we start at the top&lt;/span&gt;
        &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="c1"&gt;# Capture &amp;quot;a&amp;quot; click events.. let&amp;#39;s do this&lt;/span&gt;
    &lt;span class="nv"&gt;captureNavigation = &lt;/span&gt;&lt;span class="nf"&gt;(parent) -&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; a:not(no-html5)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;is&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;external&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;target&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;is&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;_blank&amp;#39;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
        &lt;span class="nx"&gt;goTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;href&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;

    &lt;span class="c1"&gt;# &amp;quot;$(document).ready&amp;quot; for non-coffeescript users ;)&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nf"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;captureNavigation&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;body&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There are few things to clarify here.  First is the &lt;code&gt;dontcache=1&lt;/code&gt; query-string.  This is solely to address a bug in Chrome where it will otherwise cache responses and reuse them inappropriately for future requests.&lt;/p&gt;
&lt;p&gt;Also, it is important that the &lt;code&gt;captureNavigation&lt;/code&gt; function focuses only on areas that are new to the window; otherwise you end up with a stack of event handlers on some of your elements.  Tune as desired.&lt;/p&gt;
&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="conclusion"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This gives you a slick HTML5 navigable site, and the performance bump is immediately noticeable.  It is amazing how much faster browsers parse JSON responses over HTML.&lt;/p&gt;
&lt;p&gt;There is more to consider here.  Handling forms have a couple quirks, and there's plenty of room for creativity in terms of layouts and packing extra information into the JSON responses.  Let me know in the comments if you need help with any of these.&lt;/p&gt;</summary><category term="Django HTML5"></category></entry><entry><title>"The History of Social Security"</title><link href="http://dustinfarris.com/2012/11/28/the-history-of-social-security.html" rel="alternate"></link><updated>2012-11-28T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-11-28:2012/11/28/the-history-of-social-security.html</id><summary type="html">&lt;p&gt;With Republicans (even after a sweeping electoral defeat) &lt;a href="http://www.csmonitor.com/Business/Latest-News-Wires/2012/1128/Medicare-social-program-cuts-Will-Democrats-go-along"&gt;demanding&lt;/a&gt; a strip-down of Social Security and other benefit programs, I think it is important for every American to reflect on why we have them in the first place.  The Administration has a well-written document that everyone should read:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ssa.gov/history/briefhistory3.html"&gt;The History of Social Security&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It discusses the idea of economic security and its derivatives, and how events like the Civil War, the Industrial Revolution, and the Great Depression have caused us to reexamine how the basic needs of our elderly and disabled should be insured.  President Roosevelt summarizes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Security was attained in the earlier days through the interdependence of members of families upon each other and of the families within a small community upon each other. The complexities of great communities and of organized industry make less real these simple means of security. Therefore, we are compelled to employ the active interest of the Nation as a whole through government in order to encourage a greater security for each individual who composes it... This seeking for a greater measure of welfare and happiness does not indicate a change in values. It is rather a return to values lost in the course of our economic development and expansion...&lt;/p&gt;
&lt;p&gt;~ Franklin D. Roosevelt: Message of the President to Congress, June 8, 1934&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Before we start turning up our noses at programs like Social Security and Medicare, it is important to first have a grasp on what they are and how they got there.&lt;/p&gt;</summary><category term="[Medicare"></category><category term="Social Security]"></category></entry><entry><title>"Using Google to Send Mail in Django"</title><link href="http://dustinfarris.com/2012/10/28/using-google-to-send-mail-in-django.html" rel="alternate"></link><updated>2012-10-28T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-10-28:2012/10/28/using-google-to-send-mail-in-django.html</id><summary type="html">&lt;p&gt;If you have a Gmail account (or a Google Apps account), you can use it to send mail on your behalf just like any other email client.  Remember to use port 587 (not 465), and an "application-specific" password if you use 2-step verification.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;EMAIL_HOST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;smtp.gmail.com&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;EMAIL_HOST_USER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;you@gmail.com&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;EMAIL_HOST_PASSWORD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;secret&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;EMAIL_PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;587&lt;/span&gt;
&lt;span class="n"&gt;EMAIL_USE_TLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The only thing interesting I've noticed here is that Google seems to disregard the "from" header and sends every email as you.&lt;/p&gt;
&lt;p&gt;For example, attempting the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.mail&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;send_mail&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;send_mail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Test message&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;fake@yahoo.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;mom@gmail.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;will send the email successfully to &lt;code&gt;mom@gmail.com&lt;/code&gt;, but will come "from" &lt;code&gt;you@gmail.com&lt;/code&gt;.&lt;/p&gt;</summary><category term="Django Gmail"></category></entry><entry><title>"Decorating Django Tests"</title><link href="http://dustinfarris.com/2012/10/22/decorating-django-tests.html" rel="alternate"></link><updated>2012-10-22T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-10-22:2012/10/22/decorating-django-tests.html</id><summary type="html">&lt;p&gt;Just a quick note: when decorating Django tests you have to take care to name your return function using the same "test_" format otherwise an unmodified TestRunner will not discover it.&lt;/p&gt;
&lt;p&gt;This will work:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;mydecorator&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="c"&gt;# Do some stuff&lt;/span&gt;
      &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;test_func&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestMath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

  &lt;span class="nd"&gt;@mydecorator&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_addition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note the innermost function in the decorator is named "test_func."  If this was named something more conventional, like "func," the decorated test would not be discovered.&lt;/p&gt;</summary><category term="Django Python"></category></entry><entry><title>"Django: A New Way to Write Tests"</title><link href="http://dustinfarris.com/2012/10/09/django-a-new-way-to-write-tests.html" rel="alternate"></link><updated>2012-10-09T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-10-09:2012/10/09/django-a-new-way-to-write-tests.html</id><summary type="html">&lt;p&gt;Taking a lot of inspiration from Ruby's &lt;a href="http://rspec.info"&gt;RSpec&lt;/a&gt;, I've established a new way to write my tests when doing TDD in Django.  Using &lt;a href="https://github.com/jbalogh/django-nose"&gt;django-nose&lt;/a&gt;, &lt;a href="https://github.com/dnerdy/factory_boy"&gt;factoryboy&lt;/a&gt;, and a few of my own &lt;a href="https://github.com/dustinfarris/dustinfarris/blob/master/tests/support/utilities.py"&gt;helpers&lt;/a&gt; I have greatly simplified and consolidated test writing.&lt;/p&gt;
&lt;p&gt;My file structure:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;project
  |
  +-- app1
  |
  +-- app2
  |
  +-- project
  |
  +-- tests
        |
        +-- models
        |     |
        |     +-- app1_models.py
        |     |
        |     +-- app2_models.py
        |
        +-- requests
        |     |
        |     +-- app1_pages.py
        |     |
        |     +-- app2_pages.py
        |
        +-- views
        |     |
        |     +-- app1_views.py
        |     |
        |     +-- app2_views.py
        |
        +-- support
        |     |
        |     +-- utilities.py
        |
        +-- factories.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For brevity I skipped over the &lt;code&gt;__init__.py&lt;/code&gt; files.  You can see the tree in full &lt;a href="https://github.com/dustinfarris/dustinfarris/tree/master/tests"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;utilities.py&lt;/code&gt; file contains some helper code I've written that expands on the assertions provided by Nose and provides a few other shortcuts.  When all is said and done, we get three basic types of tests: models, requests, and views.&lt;/p&gt;
&lt;p&gt;As an example for "app1" model tests, suppose app1 is a blog application:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tests.support.utilities&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tests.factories&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BlogModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_fields&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BlogFactory&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;should_respond_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;pub_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;should_respond_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;last_modified&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;should_respond_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;should_respond_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;author&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;should_respond_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;should_respond_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;slug&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;should_be_valid&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_with_blank_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BlogFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;should_not_be_valid&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_with&lt;/span&gt; &lt;span class="n"&gt;blank_content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BlogFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;should_not_be_valid&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And so on.  Here is an example of a "requests" test.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;app1.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Blog&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tests.factories&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tests.support.utilities&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BlogPages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="n"&gt;BlogFactory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;visit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;blog:index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()[:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
      &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;should_have_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/span&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_blog_page&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;blog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BlogFactory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;visit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;should_have_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/title&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;should_contain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And so on.  Finally, the "views" tests.  Suppose app2 is a contact form application:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;app2.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Message&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tests.support.utilities&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ContactViews&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_message_creation_with_invalid_information&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;old_message_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;post&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;contact&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;
    &lt;span class="n"&gt;assert_equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;old_message_count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_message_creation_with_valid_information&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;old_message_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Sample Person&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;person@email.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s"&gt;&amp;#39;message&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;This is an example message.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;post&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;contact&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;assert_equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;old_message_count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I think having tests arranged this way is much more comprehensive and readable. I've been "testing" the tests on this blog using &lt;a href="https://travis-ci.org"&gt;Travis&lt;/a&gt; continuous integration and have been very pleased. Feel free to look at the &lt;a href="https://github.com/dustinfarris/dustinfarris"&gt;source&lt;/a&gt; code for ideas.&lt;/p&gt;</summary><category term="Django RSpec"></category></entry><entry><title>"Mitt Romney and Spain"</title><link href="http://dustinfarris.com/2012/10/09/mitt-romney-and-spain.html" rel="alternate"></link><updated>2012-10-09T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-10-09:2012/10/09/mitt-romney-and-spain.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.salon.com/2012/10/07/spain_quip_adds_to_romneys_foreign_policy_trouble/"&gt;Brad Klapper&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"I don't want to go down the path of Spain," Romney said Wednesday night during the first presidential debate. He argued that government spending under Obama has reached 42 percent of the U.S. economy, a figure comparable with America's NATO ally. "I want to go down the path of growth that puts Americans to work."&lt;/p&gt;
&lt;p&gt;The remark was Romney's latest to cause international offense during a campaign that much of the world is closely monitoring.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I picked up on this too during the Oct 3 presidential debate; but my head was already spinning by that point as a result of the hail storm of you-know-what coming out of Romney's mouth.&lt;/p&gt;
&lt;p&gt;Spain isn't doing so hot, it's true, but their lack of recovery has been due to the repulsively strict austere measures they have been putting into place.  And when that doesn't work: &lt;a href="http://krugman.blogs.nytimes.com/2012/07/11/pointless-pain-in-spain/"&gt;more austerity&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, insulting yet another foreign country aside, it's doubly amusing that Romney chose Spain in his analogy given that their "recovery" policies are very nearly the exact same policies the Republican party is advocating for here in the U.S.&lt;/p&gt;</summary><category term="[Mitt Romney]"></category></entry><entry><title>""subject" Decorator for Django Tests"</title><link href="http://dustinfarris.com/2012/10/09/subject-decorator-for-django-tests.html" rel="alternate"></link><updated>2012-10-09T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-10-09:2012/10/09/subject-decorator-for-django-tests.html</id><summary type="html">&lt;p&gt;The Python elite will probably turn their noses up at me, but I just conjured an &lt;em&gt;even&lt;/em&gt; better looking way to write my &lt;a href="http://dustinfarris.com/2012/10/django-a-new-way-to-write-tests/"&gt;tests&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Using my &lt;a href="https://github.com/dustinfarris/dustinfarris/blob/master/tests/support/utilities.py"&gt;utilities.py&lt;/a&gt; file I can write the following decorator:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_item&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_item&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__class__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__bases__&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__globals__&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;it&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;
      &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;test_func&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which allows me to write tests that look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@subject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BlogFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_with_blank_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;should_not_be_valid&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Django Python"></category></entry><entry><title>"Nonrequired Reading"</title><link href="http://dustinfarris.com/2012/10/04/nonrequired-reading.html" rel="alternate"></link><updated>2012-10-04T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-10-04:2012/10/04/nonrequired-reading.html</id><summary type="html">&lt;p&gt;Via &lt;a href="http://www.synsecblog.com/2012/10/books.html"&gt;Synapse&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;On my desk stand three books that 2501 was kind enough to let me borrow. 2 psychology, 1 management and 1 rethorics. As I was skimming through them I realized something.&lt;/p&gt;
&lt;p&gt;Imagine this: These are books that contain secret knowledge. Not everyone can get their hands on them. The few who do will possess an edge over the rest.&lt;/p&gt;
&lt;p&gt;Now remove the word "secret" from the first sentence. Nothing major changed. Most people don't read, don't look for knowledge and don't want to improve. If you do any of the above things, you'll be better than them. Not everyone can afford this or is capable of it.&lt;/p&gt;
&lt;p&gt;I myself have thought for a long time that a certain skill is not worth learning if it can't be used often enough. While that sounds good in theory, in practice it does not work like that. This is the way to procrastinate and be lazy. I do that. Now I know, that while you might not ever need to use a particular skill for it's intended purpose, possessing the skill will give you a lot of perspective for everything else you do. That only is worth your while.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="reading"></category></entry><entry><title>"Mainstream Media Hiding in Your Closet"</title><link href="http://dustinfarris.com/2012/10/03/mainstream-media-hiding-in-your-closet.html" rel="alternate"></link><updated>2012-10-03T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-10-03:2012/10/03/mainstream-media-hiding-in-your-closet.html</id><summary type="html">&lt;p&gt;FOX News is ready for the big debate tomorrow.  They've peppered their front page with anti-Obama articles and released &lt;a href="http://video.foxnews.com/v/1873044131001/"&gt;this&lt;/a&gt; special report on a poll revealing America's new enemy: Mainstream media.&lt;/p&gt;
&lt;p&gt;&lt;img alt="FOX News thinks Mainstream media is America's enemy." src="/media/filer_public/2012/10/02/fox-americasenemy.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;FOX denounces these evil media outlets as "unfair," and "biased."  I'm sure many Tea-partiers wholeheartedly agree.&lt;/p&gt;</summary><category term="[Fox News]"></category></entry><entry><title>"Book Review: The Rise of Theodore Roosevelt"</title><link href="http://dustinfarris.com/2012/10/01/book-review-the-rise-of-theodore-roosevelt.html" rel="alternate"></link><updated>2012-10-01T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-10-01:2012/10/01/book-review-the-rise-of-theodore-roosevelt.html</id><summary type="html">&lt;p&gt;&lt;img alt="The Rise of Theodoore Roosevelt book cover" src="/media/filer_public/2012/10/01/riseoftr.jpg" title="The Rise of Theodore Roosevelt by Edmund Morris" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Rise of Theodore Roosevelt&lt;/em&gt; by Edmund Morris&lt;/p&gt;
&lt;p&gt;This mountain of a biography chronicles the life of Theodore Roosevelt before he became president at the age of 42.  It is inspiring, insightful, and exceedingly well documented (over 100 pages of notes).&lt;/p&gt;
&lt;p&gt;TR was noted for his integrity, personality, and masculinity.  He was a highly energetic person who never seemed to let a moment rest without doing something productive.  As a child he spent his time reading and ripping apart animals to study their insides.  As a youth he studied foreign languages, exercised for hours a day, and ripped even more animals apart.  As a young adult he attended Harvard, hunted Buffalo in the Dakotas, bought a ranch, wrote several books, served as New York assemblyman, served as the national Civil Service Commissioner, served as a New York City police commissioner, served as Assistant Secretary of the Navy, became Colonel in the Army and led the Rough Riders to victory in Santiago, Cuba, became Governor of New York, and was elected Vice President of the United States just before President McKinley was assassinated.&lt;/p&gt;
&lt;p&gt;Reading this book made me want to get off the couch.&lt;/p&gt;
&lt;p&gt;In politics, I like how TR evolved into a progressive reformer, while staying true to his Republican party.  God knows no one fitting that description exists today.&lt;/p&gt;
&lt;p&gt;TR's energy to make the most out of every minute is probably what I will take away most from this remarkable biography.  Whenever I'm feeling unmotivated, I just think of TR and start moving forward.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Roosevelt, ever the schismatic, began to write &lt;em&gt;Thomas Hart Benton&lt;/em&gt;.  He completed Chapter 1 on 27 March, by which time the boat, a flat-bottomed scow, was ready.  But a furious blizzard delayed their departure for three more days.  Roosevelt soothed his impatience with a literary letter to Cabot Lodge.  "I have got some good ideas in the first chapter, but I am not sure they are worked up rightly; my style is rough, and I do not like a certain lack of &lt;em&gt;sequitur&lt;/em&gt; that I do not seem able to get rid of."  Casually mentioning that he was about to start downriver "after some horse thieves," he added, "I shall take Matthew Arnold along."  He also took Tolstoy's &lt;em&gt;Anna Karenina&lt;/em&gt;, and a camera to record his capture of the thieves.  Already he was thinking what a good illustrated article this would make for &lt;em&gt;Century&lt;/em&gt; magazine.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Roosevelt's determination is another quality that I strongly admire.  When he put his mind to something, he never let up come hell or high water.  He would sooner loose his own life than see events unfold he thought were unjust.&lt;/p&gt;
&lt;p&gt;Politically he was extremely well-educated, mostly from being self-taught, and he was never off-put to speak his mind.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;That night a highly excited Theodore Roosevelt accosted Mark Hanna and two other Senators at a reception. In his haste to urge war upon them, he did not notice that Hanna was accompanied by Henriette Adler, a young Frenchwoman recently arrived from Paris. Roosevelt launched into a typical fist-smacking harangue, and Mlle. Adler found herself wedged between him and the wall. She tried to follow what he was saying, but was distracted by his flailing right arm, which swept nearer and nearer her bodice. Eventually his elbow ripped off a silken rose and some gauze, whereupon she exclaimed "&lt;em&gt;Mon Dieu&lt;/em&gt;."  Roosevelt, wheeling, made profuse pardons. To her alarm, he continued to pour out war rhetoric upon her in French, until Nannie Lodge tactfully appeared with a safety pin. The Senators screened Mlle. Adler off, while Roosevelt switched back to English.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;An incredible man covered by an incredible author.&lt;/p&gt;</summary><category term="reading"></category></entry><entry><title>"A '47%' Grip on Reality"</title><link href="http://dustinfarris.com/2012/09/29/a-47-grip-on-reality.html" rel="alternate"></link><updated>2012-09-29T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-09-29:2012/09/29/a-47-grip-on-reality.html</id><summary type="html">&lt;p&gt;I still &lt;a href="http://dustinfarris.com/2012/9/romney-and-mother-jones/"&gt;hold&lt;/a&gt; that Romney's "gaffe" was no more than a simple appeasement to rich Republican donors. I highly doubt that he intended to offend anyone.&lt;/p&gt;
&lt;p&gt;But he made a mistake: he got caught on camera. And now real people are really hurt.&lt;/p&gt;
&lt;p&gt;That matters.&lt;/p&gt;
&lt;p&gt;Especially when you now have a flood of personal stories being published online like this one from the &lt;a href="http://www.nytimes.com/2012/09/23/opinion/sunday/taking-responsibility-on-welfare.html"&gt;New York Times&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My country gave me the chance to rebuild my life — paying my tax tab is the only thing it's asked of me in return.&lt;/p&gt;
&lt;p&gt;I was not an exception in that little Section 8 neighborhood. Among those welfare moms were future teachers, nurses, scientists, business owners, health and safety advocates. We never believed we were "victims" or felt "entitled"; if anything, we felt determined. Wouldn't any decent person throw a rope to a drowning person? Wouldn't any drowning person take it?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The rest of that article is very moving and worth reading; you can see how good honest people have been given a real second chance at life.&lt;/p&gt;
&lt;p&gt;But not everyone has the mental endowment to see the big picture surrounding misfortunes that can befall anyone--and seemingly more-so the closer you are to the poverty line--and Mitt Romney's apparent lack of consideration and willingness to slap an "irresponsible citizen" sticker on anyone who has problems.  Note I say "apparent."  Again, I don't think this is Romney's message--a Republican message? yes, Romney's?.. well who knows what his message is anymore.&lt;/p&gt;
&lt;p&gt;And in case you're thinking that Republicans are trying to publicly water down Romney's gaffe, here's one prominent Republican who vehemently agrees.  &lt;a href="http://www.washingtontimes.com/news/2012/sep/27/mitt-romney-was-right-about-the-47-percent/?page=all#pagebreak"&gt;Ted Nugent&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mitt Romney hit the bull's-eye with his comments regarding the 47 percent of Americans...As I’ve written before, for at least the past 50 years the Democratic Party has intentionally engineered a class of political "victims" who have been bamboozled into being dependent on the federal government for their subsistence, including food, housing and now health care. They get this without paying any federal income taxes, and that's wrong. Something for nothing is always a scam. This is how you buy votes, plain and simple.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, while Romney &lt;em&gt;may&lt;/em&gt; privately "get it," others evidently don't, and the Republicans have embraced a &lt;em&gt;faux pas&lt;/em&gt; that is pissing a lot of people off.&lt;/p&gt;</summary><category term="[Mitt Romney]"></category></entry><entry><title>"Setting up a Django Server with Gentoo"</title><link href="http://dustinfarris.com/2012/09/29/setting-up-a-django-server-with-gentoo.html" rel="alternate"></link><updated>2012-09-29T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-09-29:2012/09/29/setting-up-a-django-server-with-gentoo.html</id><summary type="html">&lt;p&gt;This is part 3 in a 3 part series I've written on setting up a Django production site on Gentoo.  In the first 2 parts I went over basic boilerplate server setup, and database installation which can be on the same server or separated.&lt;/p&gt;
&lt;p&gt;&lt;a id="contents"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#postgresql"&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#virtualenv-and-pip"&gt;virtualenv and pip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gdal"&gt;GDAL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#basic-necessities"&gt;Basic Necessities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-user"&gt;Web User&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#backups"&gt;Backups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nginx"&gt;NGINX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#apache"&gt;Apache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sass"&gt;SASS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id="introduction"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Django is a fantastic web framework written in Python.  It is robust, mature, and adaptable to almost any web service need.  Deploying a Django project to production can be tricky.  This guide takes you through a well-established process that I have hand-tailored to work with the Gentoo Linux operating system.&lt;/p&gt;
&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="postgresql"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;PostgreSQL&lt;/h2&gt;
&lt;p&gt;Installing the PostgreSQL server is covered in &lt;a href="http://dustinfarris.com/2012/7/setting-up-a-postgresql-server-with-gentoo/"&gt;part 2&lt;/a&gt; of this series.  If you are hosting Postgres on the same server as your Django projects, you can skip this step.  Otherwise, you'll need to install the PostgreSQL client and create an environment variable pointing to the external Postgres server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;emerge postgresql-base -avq&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Edit &lt;code&gt;/etc/bash/bashrc&lt;/code&gt; and add the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PGOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;IP of postgres server&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="virtualenv-and-pip"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;virtualenv and pip&lt;/h2&gt;
&lt;p&gt;You should already know what these are for.  If you don't, this guide is not for you.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;emerge virtualenv -avq&lt;/span&gt;
&lt;span class="go"&gt;easy_install pip&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="gdal"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;GDAL&lt;/h2&gt;
&lt;p&gt;If you plan on doing any kind of geo-locating in your projects (and you inevitably will) it is good to have this library in place.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;echo &amp;quot;sci-libs/gdal geos&amp;quot; &amp;gt;&amp;gt; /etc/portage/package.use&lt;/span&gt;
&lt;span class="go"&gt;emerge gdal -avq&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="basic-necessities"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Basic Necessities&lt;/h2&gt;
&lt;p&gt;All the little things.  First, make sure you've set a proper language in your make config.  This is used later when installing pyenchant for spell-checking.  Add this to the end of &lt;code&gt;/etc/make.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;LINGUAS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;en&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And a few other use flags you'll probably want:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;echo &amp;quot;dev-vcs/subversion perl -dso&amp;quot; &amp;gt;&amp;gt; /etc/portage/package.use&lt;/span&gt;
&lt;span class="go"&gt;echo &amp;quot;dev-vcs/git subversion&amp;quot; &amp;gt;&amp;gt; /etc/portage/package.use&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Time to install everything:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;emerge sys-apps/ack mercurial subversion git pyenchant -avq&lt;/span&gt;
&lt;span class="go"&gt;emerge memcached xapian xapian-bindings -avq&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Edit &lt;code&gt;/etc/conf.d/memcached&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;LISTENON&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Start it and set to start on boot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;/etc/init.d/memcached start&lt;/span&gt;
&lt;span class="go"&gt;rd-update add memcached default&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="web-user"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Web User&lt;/h2&gt;
&lt;p&gt;This is the user that will house your projects and be responsible for Apache and NGINX.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;useradd --create-home --system --home=/var/www web&lt;/span&gt;
&lt;span class="go"&gt;su - web&lt;/span&gt;
&lt;span class="go"&gt;cd .ssh&lt;/span&gt;
&lt;span class="go"&gt;ssh-keygen -t rsa -C &amp;quot;web@newserver&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;cd ..&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add the following to &lt;code&gt;/var/www/.bashrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Shortcut for activating a virtualenv&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;activate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;. env/bin/activate&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;# Remove all *.pyc recursively&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;pycclean&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;find . -name &amp;quot;*.pyc&amp;quot; -exec rm {} \;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And exit.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="backups"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Backups&lt;/h2&gt;
&lt;p&gt;Ideally you'll do this on a separate server altogether, but that may not be feasible for your situation/budget.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;useradd --create-home --system --home=/var/backups backups&lt;/span&gt;
&lt;span class="go"&gt;su - backups&lt;/span&gt;
&lt;span class="go"&gt;cd .ssh&lt;/span&gt;
&lt;span class="go"&gt;ssh-keygen -t rsa -C &amp;quot;backups@newserver&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;exit&lt;/span&gt;
&lt;span class="go"&gt;passwd backups&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="nginx"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;NGINX&lt;/h2&gt;
&lt;p&gt;We use NGINX to serve static files.  Requests for pages/services themselves get reverse-proxied to Apache which in turn will communicate with Django via WSGI.  We don't need the whole shebang with NGINX, so add the following to &lt;code&gt;/etc/make.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;NGINX_MODULES_HTTP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;access auth_basic autoindex browser charset empty_gif geo gzip limit_req limit_zone map memcached proxy referer rewrite split_clients ssi upstream_ip_hash userid&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And install the VIM syntax library for the NGINX configuration files (why this doesn't come with VIM by default is beyond me).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;echo &amp;quot;www-servers/nginx vim-syntax&amp;quot; &amp;gt;&amp;gt; /etc/portage/package.use&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install NGINX.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;emerge nginx -avq&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You'll want a folder to store individual site configurations.  So create this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;mkdir /etc/nginx/vhosts.d&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Edit &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt; to your liking, then start NGINX and set it to start on boot.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;/etc/init.d/nginx start&lt;/span&gt;
&lt;span class="go"&gt;rc-update add nginx default&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="apache"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Apache&lt;/h2&gt;
&lt;p&gt;As with NGINX, we only need parts of Apache for our purposes, so add this to &lt;code&gt;/etc/make.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;APACHE2_MODULES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;authz_host deflate dir filter headers include log_config logio mime mime_magic negotiation unique_id vhost_alias&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;APACHE2_MPMS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;worker&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you plan on using SSL, disregard the -ssl flags, but otherwise:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;echo &amp;quot;www-servers/apache threads -ssl&amp;quot; &amp;gt;&amp;gt; /etc/portage/package.use&lt;/span&gt;
&lt;span class="go"&gt;echo &amp;quot;app-admin/apache-tools -ssl&amp;quot; &amp;gt;&amp;gt; /etc/portage/package.use&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install Apache and the WSGI mod.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;emerge apache mod_wsgi -avq&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Modify the following in &lt;code&gt;/etc/apache2/httpd.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;User&lt;/span&gt; web
&lt;span class="nb"&gt;Group&lt;/span&gt; web
&lt;span class="nb"&gt;NameVirtualHost&lt;/span&gt; &lt;span class="m"&gt;127.0.0.1&lt;/span&gt;:8080
&lt;span class="nb"&gt;Listen&lt;/span&gt; &lt;span class="m"&gt;8080&lt;/span&gt;
&lt;span class="nb"&gt;Include&lt;/span&gt; &lt;span class="sx"&gt;/etc/apache2/vhosts.d/&lt;/span&gt;*.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We don't need the default virtual configs that Apache comes with, so delete them.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;rm /etc/apache2/vhosts.d/*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And configure Apache to only load the modules we need by editing &lt;code&gt;/etc/conf.d/apache2&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;APACHE2_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-D INFO -D LANGUAGE -D WSGI&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Remove the unnecessary localhost directory (if it exists).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;rm -rf /var/www/localhost&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Start Apache and set it to start on boot.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;/etc/init.d/apache2 start&lt;/span&gt;
&lt;span class="go"&gt;rc-update add apache2 default&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="sass"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;SASS&lt;/h2&gt;
&lt;p&gt;I use django_compressor in all of my projects which in turn compiles my SASS files for me.  If you use django_compressor in this way also, you'll need to install SASS.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;echo &amp;#39;RUBY_TARGETS=&amp;quot;ruby19&amp;quot;&amp;#39; &amp;gt;&amp;gt; /etc/make.conf&lt;/span&gt;
&lt;span class="go"&gt;emerge dev-ruby/sass -avq&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="conclusion"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;If all went well, you now have a fully functional Django production stack.  Your projects can be git-cloned in the /var/www directory, then you simply need to set up the virtual environment, set up a database, collect static files, and symlink your apache and nginx configuration files to their respective vhosts.d folders.&lt;/p&gt;
&lt;p&gt;Don't forget to set up cron jobs for backups.&lt;/p&gt;
&lt;p&gt;If I've left anything out or failed to be clear, please let me know in the comments.&lt;/p&gt;</summary><category term="Django Gentoo"></category></entry><entry><title>"Ann Defending Mitt"</title><link href="http://dustinfarris.com/2012/09/21/ann-defending-mitt.html" rel="alternate"></link><updated>2012-09-21T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-09-21:2012/09/21/ann-defending-mitt.html</id><summary type="html">&lt;p&gt;Romney's repetitious campaign fumbles have been the source of amusement for Democrats and frustration for Republicans.  As members of his own party have been distancing themselves, Mrs. Romney jumps to his &lt;a href="http://www.cbsnews.com/8301-503544_162-57517556-503544/ann-romney-to-critics-stop-it-this-is-hard/"&gt;defense&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Stop It. This Is Hard.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Does anyone else remember this:&lt;/p&gt;
&lt;iframe frameborder="0" width="480" height="360" src="http://www.dailymotion.com/embed/video/x2yk69"&gt;&lt;/iframe&gt;

&lt;p&gt;You know what else is hard?  Being president.&lt;/p&gt;</summary><category term="[Mitt Romney]"></category></entry><entry><title>"Romney and Mother Jones"</title><link href="http://dustinfarris.com/2012/09/20/romney-and-mother-jones.html" rel="alternate"></link><updated>2012-09-20T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-09-20:2012/09/20/romney-and-mother-jones.html</id><summary type="html">&lt;p&gt;I just want to briefly weigh in on the "47%" video published by &lt;a href="http://www.motherjones.com/politics/2012/09/secret-video-romney-private-fundraiser"&gt;Mother Jones&lt;/a&gt;.  There is nothing shocking about what was said here.  Romney is in a room with his donors explaining his campaign philosophy; not his political views.  As he points out, some voters won't vote for you no matter what, so why spend the time and money trying to sway their opinion?&lt;/p&gt;
&lt;p&gt;I don't think there is anything insulting about his reasoning and I'm sure similar generalizations  are made in the other camp.&lt;/p&gt;
&lt;p&gt;For once, though, I am happy intellectualism plays a minor role in elections.  Notwithstanding the completely rational conversation, this is going to burn Romney.&lt;/p&gt;
&lt;p&gt;Now can anyone explain to me how someone managed to get a hidden cam set up without the Secret Service noticing?&lt;/p&gt;</summary><category term="[Mitt Romney]"></category></entry><entry><title>"Obstruct and Exploit"</title><link href="http://dustinfarris.com/2012/09/11/obstruct-and-exploit.html" rel="alternate"></link><updated>2012-09-11T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-09-11:2012/09/11/obstruct-and-exploit.html</id><summary type="html">&lt;p&gt;Before you give heed to Republican criticisms of how "the President has failed America," read &lt;a href="http://www.nytimes.com/2012/09/10/opinion/krugman-obstruct-and-exploit.html?src=recg"&gt;this article&lt;/a&gt; by Paul Krugman.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A year ago President Obama proposed boosting the economy with a combination of tax cuts and spending increases, aimed in particular at sustaining state and local government employment. ... The Jobs Act would have been just what the doctor ordered.&lt;/p&gt;
&lt;p&gt;But the bill went nowhere, of course, blocked by Republicans in Congress. And now, having prevented Mr. Obama from implementing any of his policies, those same Republicans are pointing to disappointing job numbers and declaring that the president’s policies have failed.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="[Paul Krugman]"></category></entry><entry><title>"RESTful Django"</title><link href="http://dustinfarris.com/2012/09/11/restful-django.html" rel="alternate"></link><updated>2012-09-11T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-09-11:2012/09/11/restful-django.html</id><summary type="html">&lt;p&gt;I've been taking a lot of time lately to determine a best practice way of incorporating a RESTful approach to Django views.  My goal is to come up with a solution so simple, using a third party library won't be necessary.&lt;/p&gt;
&lt;p&gt;As a first step, I've borrowed a lot of ideas from Rails, which makes a RESTful framework practically &lt;a href="http://guides.rubyonrails.org/routing.html"&gt;seamless&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The four HTTP methods that we most need support for are GET, POST, PUT, and DELETE.  This doesn't fully cover all potential "views" though, thus some methods become ambiguous.  For instance, GET may be used to return an object, or a list of objects.&lt;/p&gt;
&lt;p&gt;An important question is how compact do we want our URL structure to be?  If we have a separate distinguishable URL for every action (not method), then the code is straight forward, but the URL structure perhaps becomes sloppy.  If we consolidate the actions into a few URL patterns, then the URL structure is cleaner, but the coding becomes complicated.  There is a tradeoff either way.&lt;/p&gt;
&lt;p&gt;I've chosen to try the latter approach, using methods to give URLs multiple actions.&lt;/p&gt;
&lt;p&gt;The primary actions I need for any basic model are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create&lt;/li&gt;
&lt;li&gt;Show&lt;/li&gt;
&lt;li&gt;Show list&lt;/li&gt;
&lt;li&gt;Update&lt;/li&gt;
&lt;li&gt;Delete&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And these can all be accomplished with our 4 methods and just two URLs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/objects/&lt;/li&gt;
&lt;li&gt;/object/id/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But we also want to return data in an appropriate manner for API calls, so we add JSON extensions and our URL list becomes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/objects/&lt;/li&gt;
&lt;li&gt;/objects.json&lt;/li&gt;
&lt;li&gt;/objects/id/&lt;/li&gt;
&lt;li&gt;/objects/id.json&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So in &lt;code&gt;urls.py&lt;/code&gt; we add these two patterns.  Assuming we've namespaced our application, this will look something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^s/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^s\.json$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;as_json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^/(?P&amp;lt;id&amp;gt;\d+)/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^/(?P&amp;lt;id&amp;gt;\d+)\.json$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;as_json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;A 4-way stop&lt;/h2&gt;
&lt;p&gt;So the difficult part becomes the views.  I decided to put a "management" view called &lt;code&gt;do&lt;/code&gt; in front of the real workers to determine what the intended action is.  It polls the method used and any POST data that might point it in the right direction.  Hiding a &lt;code&gt;_method&lt;/code&gt; input element in HTML pages works nicely for this when you want to call a method besides GET or POST (thanks Rails).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@csrf_exempt&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;do&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;_method&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;get&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;_show&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;post&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;_create&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;put&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;_update&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;delete&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;_destroy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}[&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()](&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now that our request is pointed in the right direction, we have to handle it appropriately.&lt;/p&gt;
&lt;h2&gt;Show&lt;/h2&gt;
&lt;p&gt;The show action is arguably the easiest to handle, we just have to determine if we are showing one object, or a list of objects.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_show_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;as_json&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;queryset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MyObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;as_json&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;objs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;objs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
              &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;_state&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;objs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;objects/object_list.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;object_list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;as_json&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_show_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;as_json&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_object_or_404&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MyObject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;as_json&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;_state&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;objects/object_detail.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;object&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Create&lt;/h2&gt;
&lt;p&gt;Here is a stumbling point for me.  Everything "just works" here, but not explicitly.  The "form processing" functionality Django comes out of the box with just so happens to process any such data as long is it is appropriately keyed.  I would prefer a more robust method, but for now:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;NewObjectForm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;objects/new.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;form&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NewObjectForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;new_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;New object created!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that we create a &lt;code&gt;new&lt;/code&gt; view to display the standard HTML form for browser users.&lt;/p&gt;
&lt;h2&gt;Update&lt;/h2&gt;
&lt;p&gt;The reason I'm not completely satisfied with the way I handle the create action becomes visible here in the update action.  The same mentality applies, except we can no longer rely on Django's form data parsing--a PUT request doesn't come with request.POST; so, we have to rely on the raw data.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;edit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_object_or_404&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MyObject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;EditObjectForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;objects/edit.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;form&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_object_or_404&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MyObject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;PUT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;raw_put_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urlparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_qs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;raw_post_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;raw_put_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;attr1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attr1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;attr2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attr2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EditObjectForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;updated_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Object edit successful.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;updated_object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;edit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Delete&lt;/h2&gt;
&lt;p&gt;Last, but not least is the delete/destroy action.  I suppose this is the easiest to implement.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_destroy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_object_or_404&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MyObject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Object destroyed!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_show_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So there's one way to get RESTfulish environment into Django.  It is far from perfect, and I haven't bothered trying to explain how to do user authentication and whatnot here since I'm still trying to wrap my head around it.  But at any rate, you should be able to runserver, and run basic HTTP methods against your data.&lt;/p&gt;</summary><category term="Django REST"></category></entry><entry><title>"Today, on 'Fair and Balanced'"</title><link href="http://dustinfarris.com/2012/09/07/today-on-fair-and-balanced.html" rel="alternate"></link><updated>2012-09-07T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-09-07:2012/09/07/today-on-fair-and-balanced.html</id><summary type="html">&lt;p&gt;Today's headline on Fox News highlights their philosophy of neutral reporting:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fox News is awful" src="/media/filer/2012/09/07/foxnewsbetterpolicies.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Meanwhile, in other tabloids:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fox News look-a-like" src="/media/filer/2012/09/07/homobama__opt.jpeg" title="Fox news look-a-like" /&gt;&lt;/p&gt;</summary><category term="[Fox News]"></category></entry><entry><title>"An Inspiring Hour"</title><link href="http://dustinfarris.com/2012/09/06/an-inspiring-hour.html" rel="alternate"></link><updated>2012-09-06T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-09-06:2012/09/06/an-inspiring-hour.html</id><summary type="html">&lt;p&gt;&lt;img alt="President Bill Clinton at the 2012 Democratic National Convention" src="/media/filer/2012/09/06/video-dnc-day2-7pm-b-clinton-thumbwide.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;President Bill Clinton, who presided over years of American prosperity, gave a speech at the 2012 Democratic National Convention that was down to earth, yet extraordinarily powerful.  In case you missed it, the New York Times has a video in high definition.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://video.nytimes.com/video/2012/09/06/us/politics/100000001763238/bill-clintons-speech-.html"&gt;Watch Bill Clinton's speech on nytimes.com&lt;/a&gt;&lt;/p&gt;</summary><category term="[Bill Clinton]"></category></entry><entry><title>"And now, Fox News"</title><link href="http://dustinfarris.com/2012/09/05/and-now-fox-news.html" rel="alternate"></link><updated>2012-09-05T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-09-05:2012/09/05/and-now-fox-news.html</id><summary type="html">&lt;p&gt;How anyone can take Fox News seriously is beyond me.  After yesterday's &lt;em&gt;top&lt;/em&gt; &lt;a href="http://www.foxnews.com/politics/2012/09/04/israeli-ambassador-denies-reported-remarks-on-israel-while-dnc-chair-calls/"&gt;story&lt;/a&gt; about an assertion found in an article by another conservative news paper about words a Democrat may or may not have said to an Israel ambassador, today we are enlightened with this headline:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fox News is a joke" src="/media/filer/2012/09/05/newsjokesep5.jpg" title="Fox news is a joke" /&gt;&lt;/p&gt;
&lt;p&gt;Does anyone else think Fox's "News" stories belong on the tabloid shelf at your local supermarket next to this stuff:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Phil" src="/media/filer/2012/09/05/dr_phil_cover_enquirer.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;Fox news is a joke.&lt;/p&gt;</summary><category term="[Fox News]"></category></entry><entry><title>"Are You Better Off?"</title><link href="http://dustinfarris.com/2012/09/04/are-you-better-off.html" rel="alternate"></link><updated>2012-09-04T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-09-04:2012/09/04/are-you-better-off.html</id><summary type="html">&lt;p&gt;Via &lt;a href="http://krugman.blogs.nytimes.com/2012/09/04/the-fire-last-time/"&gt;Krugman&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dean Baker has exactly the right metaphor for journalists asking the really dumb "are you better off" question:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Suppose your house is on fire and the firefighters race to the scene. They set up their hoses and start spraying water on the blaze as quickly as possible. After the fire is put out, the courageous news reporter on the scene asks the chief firefighter, "is the house in better shape than when you got here?"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;To be honest, the "are you better off" stab is the first Republican epigram I've heard this year that I could see being an effective weapon.  As Krugman points out later in the article it's a bogus question to begin with; yet I'm afraid many Americans may not understand that--making it an ideal candidate for right-wing propaganda.&lt;/p&gt;</summary><category term="[Paul Krugman]"></category></entry><entry><title>"Austerity Will Work! Wrong."</title><link href="http://dustinfarris.com/2012/09/03/austerity-will-work-wrong.html" rel="alternate"></link><updated>2012-09-03T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-09-03:2012/09/03/austerity-will-work-wrong.html</id><summary type="html">&lt;p&gt;Borrowing a graph from &lt;a href="http://krugman.blogs.nytimes.com/2012/09/03/britains-paul-ryan/"&gt;Krugman&lt;/a&gt;, I think staging the United State's recovery versus the United Kingdom's gives us an interesting comparison of liberal versus conservative fiscal policy.&lt;/p&gt;
&lt;p&gt;&lt;img alt="US vs UK recovery" src="/media/filer/2012/09/03/090312krugman1-blog480.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Krugman says it best:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Osborne’s big idea was that Britain should turn to fiscal austerity now now now, even though the economy remained deeply depressed; it would all work out, he insisted, because the confidence fairy would come to the rescue. Never mind those whining Keynesians who said that premature austerity would send Britain into a double-dip recession.&lt;/p&gt;
&lt;p&gt;Strange to say, Britain’s recovery stalled soon after Cameron/Osborne began their new policies, and the country is now in a double-dip recession.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="[Paul Krugman]"></category></entry><entry><title>"Powerless"</title><link href="http://dustinfarris.com/2012/09/03/powerless.html" rel="alternate"></link><updated>2012-09-03T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-09-03:2012/09/03/powerless.html</id><summary type="html">&lt;p&gt;Linkin Park does it again.  From their latest album:&lt;/p&gt;</summary><category term="[Linkin Park]"></category></entry><entry><title>"National Debt: Food for Thought"</title><link href="http://dustinfarris.com/2012/09/01/national-debt-food-for-thought.html" rel="alternate"></link><updated>2012-09-01T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-09-01:2012/09/01/national-debt-food-for-thought.html</id><summary type="html">&lt;p&gt;I hear Republicans rant often about the "runaway" national debt and how China is going to "own this country" if we don't pick up our bootstraps and let Romney give rich people more tax breaks.&lt;/p&gt;
&lt;p&gt;If every American borrowed $100,000 from China to buy a house, we would owe China $31,427,982,500,000.  That's &lt;em&gt;double&lt;/em&gt; the total national debt which stands around $15 trillion, and we've built offices, houses, roads, schools, parks, libraries, a military, and the list goes on.&lt;/p&gt;
&lt;p&gt;Further, the amount we owe China is less than 8% of our national debt.  In fact, &lt;a href="http://www.gao.gov/special.pubs/longterm/debt/ownership.html"&gt;all foreign investors combined&lt;/a&gt; make up less than half of the debt.  We actually owe the majority of it to American interests--to ourselves!&lt;/p&gt;
&lt;p&gt;The next time a Republican tells you our national debt is a crisis, ask him how his mortgage is holding out.  Fine?  Ok then.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Installing MongoDB with MacPorts on MountainLion"</title><link href="http://dustinfarris.com/2012/08/30/installing-mongodb-with-macports-on-mountainlion.html" rel="alternate"></link><updated>2012-08-30T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-08-30:2012/08/30/installing-mongodb-with-macports-on-mountainlion.html</id><summary type="html">&lt;p&gt;Technically this should be as simple as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;sudo port install mongodb&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Unfortunately, the mongodb port depends (for now) on devel/boost &amp;lt;= 1.49.  The boost port was recently upgraded to 1.50, so to install db you will have to uninstall boost and explicitly reinstall it at version 1.49:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;sudo port uninstall boost&lt;/span&gt;
&lt;span class="go"&gt;svn co -r 93341 http://svn.macports.org/repository/macports/trunk/dports/devel/boost/&lt;/span&gt;
&lt;span class="go"&gt;cd boost&lt;/span&gt;
&lt;span class="go"&gt;sudo port install&lt;/span&gt;

&lt;span class="go"&gt;sudo port -n install mongodb&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="MacPorts MongoDB"></category></entry><entry><title>""ractivate", the Missing Script for RVM"</title><link href="http://dustinfarris.com/2012/08/24/ractivate-the-missing-script-for-rvm.html" rel="alternate"></link><updated>2012-08-24T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-08-24:2012/08/24/ractivate-the-missing-script-for-rvm.html</id><summary type="html">&lt;p&gt;When developing multiple projects in Ruby using &lt;a href="https://rvm.io/"&gt;RVM&lt;/a&gt;, I've found that it can be difficult to keep track of which binaries and gemsets you are using, and installing gems to the wrong gemsets can cause problems.  Inspired by &lt;a href="http://www.virtualenv.org/en/latest/index.html"&gt;virtualenv&lt;/a&gt;, I've created (largely copied) a script to switch between gemsets as you move between projects while developing in Ruby.&lt;/p&gt;
&lt;p&gt;Instructions are for OSX, but the script can be used on any UNIX-based operating system.&lt;/p&gt;
&lt;p&gt;Create a file in your home directory called &lt;code&gt;.ractivate&lt;/code&gt;, and paste this code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;deactivate&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$_OLD_VIRTUAL_PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$_OLD_VIRTUAL_PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;export &lt;/span&gt;PATH
        &lt;span class="nb"&gt;unset &lt;/span&gt;_OLD_VIRTUAL_PATH
    &lt;span class="k"&gt;fi&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$_OLD_VIRTUAL_PS1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nv"&gt;PS1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$_OLD_VIRTUAL_PS1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;export &lt;/span&gt;PS1
        &lt;span class="nb"&gt;unset &lt;/span&gt;_OLD_VIRTUAL_PS1
    &lt;span class="k"&gt;fi&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$_RUBY_PROJECT_DIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        rvm gemset use default
        &lt;span class="nb"&gt;unset &lt;/span&gt;_RUBY_PROJECT_DIR
    &lt;span class="k"&gt;fi&lt;/span&gt;

    &lt;span class="nb"&gt;unset &lt;/span&gt;RUBY_PROJECT_DIR
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;nondestructive&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;unset&lt;/span&gt; -f deactivate
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# unset irrelavent variables&lt;/span&gt;
deactivate nondestructive

&lt;span class="nv"&gt;_RUBY_PROJECT_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;`pwd`&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;_RUBY_PROJECT_DIR

&lt;span class="nv"&gt;_OLD_VIRTUAL_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$_RUBY_PROJECT_DIR&lt;/span&gt;&lt;span class="s2"&gt;/bin:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;PATH

rvm gemset use &lt;span class="sb"&gt;`&lt;/span&gt;basename &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$_RUBY_PROJECT_DIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;

&lt;span class="nv"&gt;_OLD_VIRTUAL_PS1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$PS1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;x&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; x &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nv"&gt;PS1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$PS1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nv"&gt;PS1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;(`basename \&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$_RUBY_PROJECT_DIR&lt;/span&gt;&lt;span class="s2"&gt;\&amp;quot;`) &lt;/span&gt;&lt;span class="nv"&gt;$PS1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;PS1

&lt;span class="c"&gt;# vim: ft=config&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create an alias for the script in &lt;code&gt;.profile&lt;/code&gt; (also found in your home directory).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;ractivate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;source ~/.ractivate&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The idea is to create/use gemsets that &lt;em&gt;match the directory name&lt;/em&gt; of your Ruby project.  Ex:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ractivate" src="/media/filer/2012/08/24/ractivate.jpg" title="Ractivate in action" /&gt;&lt;/p&gt;</summary><category term="RVM"></category></entry><entry><title>"Virtual Hosting, Rails, NGINX, Apache, Passenger, Ubuntu"</title><link href="http://dustinfarris.com/2012/08/24/virtual-hosting-rails-nginx-apache-passenger-ubuntu.html" rel="alternate"></link><updated>2012-08-24T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-08-24:2012/08/24/virtual-hosting-rails-nginx-apache-passenger-ubuntu.html</id><summary type="html">&lt;p&gt;I've become a fan of &lt;a href="https://rvm.io/"&gt;RVM&lt;/a&gt;, which allows you to create pseudo virtual environments called "gemsets" that can be version-locked to the specific needs of your individual projects.  In Rails, deploying several of these projects to a single server can be tricky.  This tutorial describes how this can be done.&lt;/p&gt;
&lt;p&gt;&lt;a id="contents"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#server-setup"&gt;Server setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dependencies"&gt;Dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configure-mysql"&gt;Configure MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-user"&gt;Create Web user&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#install-rvm"&gt;Install RVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#install-passenger"&gt;Install Passenger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configure-apache"&gt;Configure Apache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configure-nginx"&gt;Configure NGINX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deploy-your-project"&gt;Deploy your project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id="introduction"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Setting up a server to host multiple Ruby on Rails projects requires a well thought-out strategy to ensure a responsive system that meets your various needs.  NGINX has a fantastic record for serving static content.  Apache and Passenger are workhorses that form a terrific relationship with Ruby on Rails.  We'll combine the best of these programs to serve multiple Rails projects on an Ubuntu server.&lt;/p&gt;
&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="prerequisites"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;You will need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu (I am using 12.04 LTS)&lt;/li&gt;
&lt;li&gt;Root access or the ability to run &lt;code&gt;sudo&lt;/code&gt; commands&lt;/li&gt;
&lt;li&gt;A Rails project (or several)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="server-setup"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Server setup&lt;/h2&gt;
&lt;p&gt;These are a few basic boiler-plate Ubuntu things you may have done already:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;locale-gen en_US.UTF-8&lt;/span&gt;
&lt;span class="go"&gt;/usr/sbin/update-locale LANG=en_US.UTF-8&lt;/span&gt;
&lt;span class="go"&gt;dpkg-reconfigure tzdata&lt;/span&gt;
&lt;span class="go"&gt;apt-get update &amp;amp;&amp;amp; apt-get upgrade&lt;/span&gt;
&lt;span class="go"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="dependencies"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Dependencies&lt;/h2&gt;
&lt;p&gt;A few libraries that you'll want.  We'll also install NGINX, Apache, and MySQL here so they're in place when we configure them later.  Modify this list as needed--for example if you use subversion instead of git.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;apt-get install build-essential git-core&lt;/span&gt;
&lt;span class="go"&gt;apt-get install htop libssl-dev libreadline5 libreadline5-dev curl zlib1g zlib1g-dev&lt;/span&gt;
&lt;span class="go"&gt;apt-get install libcurl4-gnutls-dev libopenssl-ruby apache2-prefork-dev libapr1-dev libaprutil1-dev&lt;/span&gt;
&lt;span class="go"&gt;apt-get install libxslt-dev libxml2-dev nodejs npm&lt;/span&gt;
&lt;span class="go"&gt;apt-get install apache2&lt;/span&gt;
&lt;span class="go"&gt;apt-get install nginx&lt;/span&gt;
&lt;span class="go"&gt;apt-get install mysql-server mysql-client&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="configure-mysql"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Configure MySQL&lt;/h2&gt;
&lt;p&gt;I like to create a &lt;code&gt;web&lt;/code&gt; MySQL to coincide with the &lt;code&gt;web&lt;/code&gt; system user we'll create later.  All my Rails projects use the &lt;code&gt;web&lt;/code&gt; MySQL user in production.  Tune to fit your own requirements if needed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mysql&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;

&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="n"&gt;USER&lt;/span&gt; &lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;GRANT&lt;/span&gt; &lt;span class="k"&gt;ALL&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;web&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;FLUSH&lt;/span&gt; &lt;span class="n"&gt;PRIVILEGES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="web-user"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Create Web user&lt;/h2&gt;
&lt;p&gt;We'll create a system user to contain all Rails applications in the &lt;code&gt;/var/www&lt;/code&gt; directory.  Afterwords, create your RSA key needed for GitHub and others.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;rm -rf /var/www&lt;/span&gt;
&lt;span class="go"&gt;adduser --system --shell=/bin/bash --home=/var/www web&lt;/span&gt;
&lt;span class="go"&gt;addgroup web&lt;/span&gt;
&lt;span class="go"&gt;usermod -g web web&lt;/span&gt;
&lt;span class="go"&gt;su - web&lt;/span&gt;
&lt;span class="go"&gt;mkdir .ssh&lt;/span&gt;
&lt;span class="go"&gt;chmod 700 .ssh&lt;/span&gt;
&lt;span class="go"&gt;cd .ssh&lt;/span&gt;
&lt;span class="go"&gt;ssh-keygen -t rsa -C &amp;quot;web@rails&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;cd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create the &lt;a href="/2012/8/ractivate-the-missing-script-for-rvm/"&gt;ractivate&lt;/a&gt; script in the web user's home directory.  Once done, add the following to &lt;code&gt;.bashrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;ractivate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;source ~/.ractivate&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;RAILS_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;production&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create &lt;code&gt;.gemrc&lt;/code&gt; in the web user's home directory and add the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;install: --no-rdoc --no-ri
update: --no-rdoc --no-ri
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="install-rvm"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Install RVM&lt;/h2&gt;
&lt;p&gt;Run the following, as the web user, to install RVM.  This will take a while.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;curl -L https://get.rvm.io | bash -s stable --ruby&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When that finishes, install Ruby (1.9.3 for me), create a global gemset, and install bundler.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;rvm install 1.9.3 --with-openssl-dir=~/.rvm/&lt;/span&gt;
&lt;span class="go"&gt;rvm gemset use 1.9.3@global --create --default&lt;/span&gt;
&lt;span class="go"&gt;gem install bundler&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="#install-passenger"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Install Passenger&lt;/h2&gt;
&lt;p&gt;Passenger acts as the liaison between Ruby and Apache.  It is very quick, easy to install, and has &lt;a href="http://www.modrails.com/documentation.html"&gt;fantastic documentation&lt;/a&gt;.  Install with the following command, but do not follow the instructions it gives to configure Apache.  We'll do that later in a slightly modified way to accomodate multiple gemsets.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;gem install passenger&lt;/span&gt;
&lt;span class="go"&gt;rvm wrapper 1.9.3@global passenger&lt;/span&gt;
&lt;span class="go"&gt;passenger-install-apache2-module&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="#configure-apache"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Configure Apache&lt;/h2&gt;
&lt;p&gt;Now we have to make Apache work with our web user and Passenger.  Switch back to your &lt;code&gt;root&lt;/code&gt; user and change the following variables in &lt;code&gt;/etc/apache2/envvars&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;APACHE_RUN_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;web
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;APACHE_RUN_GROUP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;web
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To load the Passenger module, add the following to &lt;code&gt;/etc/apache2/httpd.conf&lt;/code&gt;.  &lt;strong&gt;Modify this for the version of Ruby and Passenger you installed.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;LoadModule&lt;/span&gt; passenger_module &lt;span class="sx"&gt;/var/www/.rvm/gems/ruby-1.9.3-p194&lt;/span&gt;@global/gems/passenger-3.0.15/ext/apache2/mod_passenger.so
&lt;span class="nb"&gt;PassengerRoot&lt;/span&gt; &lt;span class="sx"&gt;/var/www/.rvm/gems/ruby-1.9.3-p194&lt;/span&gt;@global/gems/passenger-3.0.15
&lt;span class="nb"&gt;PassengerRuby&lt;/span&gt; &lt;span class="sx"&gt;/var/www/.rvm/bin/passenger_ruby&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Configure Apache to listen locally on port 8080 by changing the following in &lt;code&gt;/etc/apache2/ports.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;NameVirtualHost&lt;/span&gt; &lt;span class="m"&gt;127.0.0.1&lt;/span&gt;:8080
&lt;span class="nb"&gt;Listen&lt;/span&gt; &lt;span class="m"&gt;8080&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Restart Apache.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;service apache2 restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="configure-nginx"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Configure NGINX&lt;/h2&gt;
&lt;p&gt;NGINX is almost ready to go out of the box; you'll just need to create a proxy configuration.  Create &lt;code&gt;/etc/nginx/proxy.conf&lt;/code&gt; and paste the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;proxy_redirect&lt;/span&gt; &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;proxy_set_header&lt;/span&gt; &lt;span class="s"&gt;Host&lt;/span&gt; &lt;span class="nv"&gt;$host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;proxy_set_header&lt;/span&gt; &lt;span class="s"&gt;X-Real-IP&lt;/span&gt; &lt;span class="nv"&gt;$remote_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;proxy_set_header&lt;/span&gt; &lt;span class="s"&gt;X-Forwarded-For&lt;/span&gt; &lt;span class="nv"&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;proxy_set_header&lt;/span&gt; &lt;span class="s"&gt;X-Url-Scheme&lt;/span&gt; &lt;span class="nv"&gt;$scheme&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;client_max_body_size&lt;/span&gt; &lt;span class="mi"&gt;10m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;client_body_buffer_size&lt;/span&gt; &lt;span class="mi"&gt;128k&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;proxy_connect_timeout&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;proxy_send_timeout&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;proxy_read_timeout&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;proxy_buffers&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="mi"&gt;4k&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;# vim: ts=4 ft=nginx&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Restart NGINX.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;service nginx restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="deploy-your-project"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Deploy your project&lt;/h2&gt;
&lt;p&gt;Before deploying to the server you will need 3 project-specific configuration files.&lt;/p&gt;
&lt;h3&gt;Project Apache config&lt;/h3&gt;
&lt;p&gt;Create &lt;code&gt;/etc/apache2/sites-available/projectname.conf&lt;/code&gt; and add the following (modified for your project):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class="s"&gt;127.0.0.1:8080&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nb"&gt;ServerName&lt;/span&gt; projectname.com

    &lt;span class="nb"&gt;DocumentRoot&lt;/span&gt; &lt;span class="sx"&gt;/var/www/projectname/public&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;IfModule&lt;/span&gt; &lt;span class="s"&gt;mod_rpaf.c&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nb"&gt;RPAFenable&lt;/span&gt; &lt;span class="k"&gt;On&lt;/span&gt;
        &lt;span class="nb"&gt;RPAFsethostname&lt;/span&gt; &lt;span class="k"&gt;On&lt;/span&gt;
        &lt;span class="nb"&gt;RPAFproxy_ips&lt;/span&gt; &lt;span class="m"&gt;127.0.0.1&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;

    &lt;span class="nb"&gt;LogLevel&lt;/span&gt; &lt;span class="k"&gt;warn&lt;/span&gt;
    &lt;span class="nb"&gt;CustomLog&lt;/span&gt; &lt;span class="sx"&gt;/var/log/apache2/projectname.access.log&lt;/span&gt; combined
    &lt;span class="nb"&gt;ErrorLog&lt;/span&gt; &lt;span class="sx"&gt;/var/log/apache2/projectname.error.log&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;# vim: ft=apache&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Project NGINX config&lt;/h3&gt;
&lt;p&gt;Create &lt;code&gt;/etc/nginx/sites-available/projectname.conf&lt;/code&gt; and add the following (modified for your project):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;projectname.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;access_log&lt;/span&gt;  &lt;span class="s"&gt;/var/log/nginx/jdknot.access.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;error_log&lt;/span&gt;   &lt;span class="s"&gt;/var/log/nginx/jdknot.error.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/assets&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;alias&lt;/span&gt; &lt;span class="s"&gt;/var/www/projectname/public/assets&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://localhost:8080&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;include&lt;/span&gt; &lt;span class="s"&gt;/etc/nginx/proxy.conf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# vim: ft=nginx&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Project setup_load_paths config&lt;/h3&gt;
&lt;p&gt;This is a file you'll add to your Rails project to inform Passenger about your gemset.  On your local machine, create &lt;code&gt;projectname/config/setup_load_paths.rb&lt;/code&gt; and paste the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MY_RUBY_HOME&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MY_RUBY_HOME&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;include?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rvm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;begin&lt;/span&gt;
        &lt;span class="n"&gt;rvm_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MY_RUBY_HOME&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;rvm_lib_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rvm_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;lib&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="vg"&gt;$LOAD_PATH&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unshift&lt;/span&gt; &lt;span class="n"&gt;rvm_lib_path&lt;/span&gt;
        &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rvm&amp;#39;&lt;/span&gt;
        &lt;span class="no"&gt;RVM&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;use_from_path!&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;rescue&lt;/span&gt; &lt;span class="no"&gt;LoadError&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;RVM ruby lib is currently unavailable.&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;BUNDLE_GEMFILE&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;../Gemfile&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bundler/setup&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And create a rvmrc file to points to your gemset.  Create &lt;code&gt;projectname/.rvmrc&lt;/code&gt; and add:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rvm 1.9.3@projectname
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you haven't already done so, commit these changes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;git add config/setup_load_path.rb&lt;/span&gt;
&lt;span class="go"&gt;git add .rvmrc&lt;/span&gt;
&lt;span class="go"&gt;git commit -m &amp;quot;Created setup_load_path and rvmrc&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;git push&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Clone and setup project&lt;/h3&gt;
&lt;p&gt;Back on the server, as your web user: clone your project, setup a gemset, and prepare the database and assets:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;su - web&lt;/span&gt;
&lt;span class="go"&gt;git clone git@github.com:yourname/projectname.git&lt;/span&gt;
&lt;span class="go"&gt;rvm gemset create projectname&lt;/span&gt;
&lt;span class="go"&gt;cd projectname&lt;/span&gt;
&lt;span class="go"&gt;ractivate&lt;/span&gt;
&lt;span class="go"&gt;bundle install --binstubs&lt;/span&gt;
&lt;span class="go"&gt;rake db:create&lt;/span&gt;
&lt;span class="go"&gt;rake db:migrate&lt;/span&gt;
&lt;span class="go"&gt;rake assets:precompile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Restart Apache and NGINX&lt;/h3&gt;
&lt;p&gt;As root:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;service apache2 restart&lt;/span&gt;
&lt;span class="go"&gt;service nginx restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="conclusion"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;If all went well, you should be able to load projectname.com.  If things don't work right, good places to start debugging are the log files in &lt;code&gt;/var/log/apache/&lt;/code&gt; and &lt;code&gt;/var/log/nginx/&lt;/code&gt;.  As always, feel free to comment or &lt;a href="/contact/"&gt;contact me&lt;/a&gt; if I have failed to explain anything clearly.&lt;/p&gt;
&lt;p&gt;A huge thanks to Aaron Sumner for his blog on &lt;a href="http://everydayrails.com/2010/09/13/rvm-project-gemsets.html"&gt;using Passenger with RVM&lt;/a&gt;.&lt;/p&gt;</summary><category term="[Ruby on Rails]"></category></entry><entry><title>"Installing Ruby on Mountain Lion/MacPorts"</title><link href="http://dustinfarris.com/2012/08/17/installing-ruby-on-mountain-lionmacports.html" rel="alternate"></link><updated>2012-08-17T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-08-17:2012/08/17/installing-ruby-on-mountain-lionmacports.html</id><summary type="html">&lt;p&gt;If you use MacPorts, the following should get Ruby installed and working on your machine.&lt;/p&gt;
&lt;h3&gt;Install RVM&lt;/h3&gt;
&lt;p&gt;Taken from the &lt;a href="https://rvm.io/rvm/install/"&gt;RVM website&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;curl -L https://get.rvm.io | bash -s stable --ruby
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install OpenSSL and libyaml&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo port install openssl libyaml
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;(Re)Install Ruby&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rvm reinstall 1.9.3 --with-openssl-dir=/opt/local --with-opt-dir=/opt/local
&lt;/pre&gt;&lt;/div&gt;</summary><category term="MacPorts RVM"></category></entry><entry><title>"Mighty Germany"</title><link href="http://dustinfarris.com/2012/08/16/mighty-germany.html" rel="alternate"></link><updated>2012-08-16T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-08-16:2012/08/16/mighty-germany.html</id><summary type="html">&lt;p&gt;Many people, especially conservatives, point to Germany as a shining example of austere success--but the country's present success is superficial.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.project-syndicate.org/commentary/early-retirement-for-the-eurozone-by-nouriel-roubini"&gt;Nouriel Roubini&lt;/a&gt; writes an article on the cost of delaying an inevitable Eurozone breakup; but what really caught my eye was a reader comment that I think describes Germany's situation very well:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Germany's strength is both intrinsic and extrinsic. The extrinsic part is a consequence of being able to export without currency appreciation. This is a consequence of the less industrially competitive components of the eurozone. It has allowed Germany and some others to increase their intrinsic strengths.&lt;/p&gt;
&lt;p&gt;It is therefore fair to say that German unemployment is in Greece and Spain and burdens the exchequer of each of these 'peripherals'. An intelligent and fully integrated system would have balanced this better. Perhaps the example of Italy with it's 'Germanic' north and 'Greek' south is an unwelcome one.&lt;/p&gt;
&lt;p&gt;If the euro is too break up, there is no bright future for Germany as the core of a northern fortress. That is the road to decline.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="Germany"></category></entry><entry><title>"Rails 'through' vs Django 'ManyToMany'"</title><link href="http://dustinfarris.com/2012/08/14/rails-through-vs-django-manytomany.html" rel="alternate"></link><updated>2012-08-14T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-08-14:2012/08/14/rails-through-vs-django-manytomany.html</id><summary type="html">&lt;p&gt;Ok, Rails &amp;amp; company have a lot of great points--I love RSpec--but I've noticed a few areas where Rails can improve.  Here, namely, I see a big difference in handling multiple relationships to self.&lt;/p&gt;
&lt;h2&gt;In Rails&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;db/migrate/create_relationships.rb&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CreateRelationships&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Migration&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;change&lt;/span&gt;
        &lt;span class="n"&gt;create_table&lt;/span&gt; &lt;span class="ss"&gt;:relationships&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
            &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;integer&lt;/span&gt; &lt;span class="ss"&gt;:person_id&lt;/span&gt;
            &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;integer&lt;/span&gt; &lt;span class="ss"&gt;:friend_id&lt;/span&gt;
            &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timestamps&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

        &lt;span class="n"&gt;add_index&lt;/span&gt; &lt;span class="ss"&gt;:relationships&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:person_id&lt;/span&gt;
        &lt;span class="n"&gt;add_index&lt;/span&gt; &lt;span class="ss"&gt;:relationships&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:friend_id&lt;/span&gt;
        &lt;span class="n"&gt;add_index&lt;/span&gt; &lt;span class="ss"&gt;:relationships&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:person_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:friend_id&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;app/models/relationship.rb&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Relationship&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
    &lt;span class="n"&gt;attr_accessible&lt;/span&gt; &lt;span class="ss"&gt;:friend_id&lt;/span&gt;

    &lt;span class="n"&gt;belongs_to&lt;/span&gt; &lt;span class="ss"&gt;:person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Person&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;belongs_to&lt;/span&gt; &lt;span class="ss"&gt;:friend&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Person&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;app/models/person.rb&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
    &lt;span class="n"&gt;has_many&lt;/span&gt; &lt;span class="ss"&gt;:relationships&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;foreign_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;person_id&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;has_many&lt;/span&gt; &lt;span class="ss"&gt;:friends&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;through&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="ss"&gt;:relationships&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="ss"&gt;:friend&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;In Django&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;people/models.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;friends&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ManyToManyField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;self&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I think there's a clear winner here--to quote from the &lt;a href="http://ruby.railstutorial.org/"&gt;tutorial&lt;/a&gt; I'm following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We begin with the tests, having faith that the magic of Rails will come to the rescue.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="[Django"></category><category term="Ruby on Rails]"></category></entry><entry><title>"The Veil of Opulence"</title><link href="http://dustinfarris.com/2012/08/13/the-veil-of-opulence.html" rel="alternate"></link><updated>2012-08-13T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-08-13:2012/08/13/the-veil-of-opulence.html</id><summary type="html">&lt;p&gt;&lt;a href="http://opinionator.blogs.nytimes.com/2012/08/12/the-veil-of-opulence/?partner=rss&amp;amp;emc=rss"&gt;Benjamin Hale&lt;/a&gt; offers a great point of view to consider when looking at our political choices--and many non-political choices for that matter.  It's really a great article.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The veil of opulence assumes that the playing field is level, that all gains are fairly gotten, that there is no cosmic adversity. In doing so, it is partial to the fortunate — for fortune here is entirely earned or deserved. The veil of ignorance, on the other hand, introduces the possibility that one might fall on hard luck or that one is not born into luck. It never once closes out the possibility that that same person might take steps to overcome that bad luck. In this respect, it is not partial to the fortunate but impartial to all. Some will win by merit, some will win by lottery. Others will lose by laziness, while still others will lose because the world has thrown them some unfathomably awful disease or some catastrophically terrible car accident. It is an illusion of prosperity to believe that each of us deserves everything we get.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term=""></category></entry><entry><title>"Why RoR is Awesome (part 1 of many)"</title><link href="http://dustinfarris.com/2012/08/10/why-ror-is-awesome-part-1-of-many.html" rel="alternate"></link><updated>2012-08-10T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-08-10:2012/08/10/why-ror-is-awesome-part-1-of-many.html</id><summary type="html">&lt;p&gt;I finally took the plunge.  I'm learning Rails.  And holy shit.&lt;/p&gt;
&lt;p&gt;RoR has a philosophy of being RESTful, which means using what's already built (HTTP) rather than reinventing the wheel.&lt;/p&gt;
&lt;p&gt;I launched a "users" app using just these &lt;em&gt;three&lt;/em&gt; commands taken from the tutorial I'm following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;rails generate scaffold User name:string email:string&lt;/span&gt;
&lt;span class="go"&gt;rake db:migrate&lt;/span&gt;
&lt;span class="go"&gt;rails server&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With &lt;em&gt;no further modifications&lt;/em&gt;, check this out (truncated for brevity):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; telnet localhost 3000

&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; POST /users HTTP/1.0
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; Content-Length: 57
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; user&lt;span class="o"&gt;[&lt;/span&gt;name&lt;span class="o"&gt;]=&lt;/span&gt;Dustin&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;user&lt;span class="o"&gt;[&lt;/span&gt;email&lt;span class="o"&gt;]=&lt;/span&gt;dustin@dustinfarris.com
&lt;span class="go"&gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;You are being &amp;lt;a href=&amp;quot;http://localhost:3000/users/1&amp;quot;&amp;gt;redirected&amp;lt;/a&amp;gt;.&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;

&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; GET /users.json
&lt;span class="go"&gt;[{&amp;quot;id&amp;quot;:1,&amp;quot;name&amp;quot;:&amp;quot;Dustin&amp;quot;,&amp;quot;email&amp;quot;:&amp;quot;dustin@dustinfarris.com&amp;quot;}]&lt;/span&gt;

&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; GET /users/1.json
&lt;span class="go"&gt;{&amp;quot;id&amp;quot;:1,&amp;quot;name&amp;quot;:&amp;quot;Dustin&amp;quot;,&amp;quot;email&amp;quot;:&amp;quot;dustin@dustinfarris.com&amp;quot;}&lt;/span&gt;

&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; DELETE /users/1
&lt;span class="go"&gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;You are being &amp;lt;a href=&amp;quot;http://localhost:3000/users&amp;quot;&amp;gt;redirected&amp;lt;/a&amp;gt;.&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;

&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; GET /users.json
&lt;span class="go"&gt;[]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is exciting stuff I tell you.  And I'm only on &lt;a href="http://ruby.railstutorial.org/"&gt;chapter 2&lt;/a&gt;!&lt;/p&gt;</summary><category term="[Ruby on Rails]"></category></entry><entry><title>"Testing Management Commands"</title><link href="http://dustinfarris.com/2012/08/09/testing-management-commands.html" rel="alternate"></link><updated>2012-08-09T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-08-09:2012/08/09/testing-management-commands.html</id><summary type="html">&lt;p&gt;I think to be a good Django citizen it would be appropriate to write tests ensuring that standard management commands work with your application.  I thought of this after dealing with a &lt;a href="https://github.com/divio/django-cms/"&gt;certain app&lt;/a&gt; that doesn't handle &lt;code&gt;loaddata&lt;/code&gt; very well.&lt;/p&gt;
&lt;p&gt;Going forward, I'm adding this TestCase to all of my applications:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os.path&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;join&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;management&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestManagement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;fixtures&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;myapp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setUp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;project_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;PROJECT_DIR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;project_dir&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ImproperlyConfigured&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Missing PROJECT_DIR in settings&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tearDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;project_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;test_myapp.json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_dumpdata_loaddata&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;data_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;project_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;test_myapp.json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;management&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;dumpdata&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;myapp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;data_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;management&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call_command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;loaddata&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;project_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;test_myapp.json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It's a little awkward because I'm relying on the test throwing an error rather than failing an assertion, but it's the best my 10pm mind can come up with for now.&lt;/p&gt;</summary><category term="Django"></category></entry><entry><title>"Django Model Managers via Related"</title><link href="http://dustinfarris.com/2012/08/08/django-model-managers-via-related.html" rel="alternate"></link><updated>2012-08-08T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-08-08:2012/08/08/django-model-managers-via-related.html</id><summary type="html">&lt;p&gt;It is fairly common practice to use a custom model manager when you have a certain field(s) that you know you will be filtering by a lot.  I found a small caveat from the traditional approach when you take related objects into account.  Take this classic example for published blog posts:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Author&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PostManager&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Manager&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;published&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PostManager&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_query_set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;published&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;related_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;posts&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TextField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;published&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BooleanField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;objects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PostManager&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All is fine and dandy in a template if you ask for {% raw %}{{ post_list.published }}{% endraw %}, but a problem arises when you utilize the custom manager function through the related field; {{ "{{ author.posts.published "}}}} gives an iterator with &lt;em&gt;all&lt;/em&gt; posts, not just the ones related to the author!&lt;/p&gt;
&lt;p&gt;I haven't had time to figure out the mechanics of this phenomena, but to get things working as expected we have to make use of the &lt;code&gt;all()&lt;/code&gt; function of the superclass rather than &lt;code&gt;get_query_set()&lt;/code&gt;.  It seems the latter is unaware of any related instantiations.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PostManager&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;published&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Another possible workaround would be to have to completely separate managers, one called published, and the other called objects, where the published manager overrides &lt;code&gt;get_query_set&lt;/code&gt; instead of adding an additional method:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PublishedPostManager&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Manager&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_query_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PublishedPostManager&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_query_set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_published&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="n"&gt;is_published&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BooleanField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;published&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PublishedPostManager&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;objects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Manager&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Django"></category></entry><entry><title>"HTML5 Navigation Bug When Returning From External Site"</title><link href="http://dustinfarris.com/2012/08/08/html5-navigation-bug-when-returning-from-external-site.html" rel="alternate"></link><updated>2012-08-08T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-08-08:2012/08/08/html5-navigation-bug-when-returning-from-external-site.html</id><summary type="html">&lt;p&gt;So HTML5 navigation is in full swing, and it's awesome.  If you aren't implementing it yet, start.  I found a bug in Chrome, though, (and possibly other browsers) that resulted in your JSON data being grossly displayed as a webpage if the user visited and returned from an external site.&lt;/p&gt;
&lt;p&gt;It appears that Chrome caches the AJAX response from the HTML5 navigation as the complete content for that particular URL.  To overcome this, add a dummy GET parameter:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;href&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;?dontcache=1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pushState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;url&lt;/span&gt;
            &lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of course, if you're already using GET parameters in your link URLs there's the issue of appending parameters to parameters which involves &lt;a href="http://stackoverflow.com/questions/486896/adding-a-parameter-to-the-url-with-javascript"&gt;more regex&lt;/a&gt; than this post deserves.&lt;/p&gt;</summary><category term="HTML5"></category></entry><entry><title>"Book Review: Brave New World"</title><link href="http://dustinfarris.com/2012/08/05/book-review-brave-new-world.html" rel="alternate"></link><updated>2012-08-05T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-08-05:2012/08/05/book-review-brave-new-world.html</id><summary type="html">&lt;p&gt;&lt;img alt="Brave New World book cover" src="/media/filer/2012/08/05/bravenewworld.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Brave New World&lt;/em&gt; by Aldous Huxley&lt;/p&gt;
&lt;p&gt;I think what is most remarkable about this book is that it foreshadows the world we live in today on several levels.  From anti-depressants to age-defying creams to &lt;a href="http://www.cbsnews.com/2100-500164_162-611618.html"&gt;manipulating the gender&lt;/a&gt; of an unborn baby, Huxley is probably looking down on us saying, "I told you so."  But the real question is: Is it really such a bad thing?&lt;/p&gt;
&lt;p&gt;I am a proponent of science as a means to improve our physical health, and I support advances in social sciences that encourage peace and harmony.  In Brave New World we are shown a society where doctors can make you look young well into your 60s, and newborns are physically bread and mentally conditioned to be unobtrusive, productive, and happy.  Happy.&lt;/p&gt;
&lt;p&gt;So what is the tradeoff?  Perhaps the most obvious "negative" is the loss of freedom, and therefore the loss of meaning in an individual life, but what is freedom and meaning anyway?  Philosophers have been debating that question for centuries.  If a person is happy in their own mind, was freedom and meaning really all that important?&lt;/p&gt;
&lt;p&gt;I wonder if, with the recent pushes around the country to &lt;a href="http://travel.nytimes.com/2012/01/27/us/a-ballot-push-to-legalize-marijuana-with-alcohol-as-the-role-model.html?ref=marijuana"&gt;legalize marijuana&lt;/a&gt;, we are looking at the very circumstance Huxley describe as having "all the advantages of Christianity and alcohol; none of their defects"--referring to the use of Soma in his novel.&lt;/p&gt;
&lt;p&gt;I challenge anyone who finds &lt;em&gt;Brave New World&lt;/em&gt; representative of threats to society to take a serious inner examination and determine if it would really be that bad.  Scary?  Maybe at first.  Bad?  I say on many counts, no.  Now where's my damn Soma?  ;-)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A really efficient totalitarian state would be one in which the all-powerful executive of political bosses and their army of managers control a population of slaves who do not have to be coerced, because they love their servitude.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="reading"></category></entry><entry><title>"Book Review: Call of the Wild"</title><link href="http://dustinfarris.com/2012/08/05/book-review-call-of-the-wild.html" rel="alternate"></link><updated>2012-08-05T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-08-05:2012/08/05/book-review-call-of-the-wild.html</id><summary type="html">&lt;p&gt;&lt;img alt="The Call of the Wild book cover" src="/media/filer/2012/08/05/callofthewild.jpg" title="The Call of the Wild by Jack London" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Call of the Wild&lt;/em&gt; by Jack London&lt;/p&gt;
&lt;p&gt;It took me an impressively small amount of time to read this book partly because of short length, and partly because it is one of those books you just can't put down to save your soul.&lt;/p&gt;
&lt;p&gt;The Call of the Wild is a story about a dog named Buck who undergoes many deep transformations over the course of his life.  The philosophical undertones characterized by Bucks life demonstrate the impeccable wisdom Jack London must have had.&lt;/p&gt;
&lt;p&gt;I'll recommend this book to anyone not only for its spiritual awakening power, but also because it is simply a great story!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;He was a killer, a thing that preyed, living on things that lived, unaided, alone, by virtue of his own strength and prowess, surviving triumphantly in a hostile environment where only the strong survived.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="reading"></category></entry><entry><title>"Django + Typography = django-typogrify"</title><link href="http://dustinfarris.com/2012/07/09/django-typography-django-typogrify.html" rel="alternate"></link><updated>2012-07-09T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-07-09:2012/07/09/django-typography-django-typogrify.html</id><summary type="html">&lt;p&gt;Something I've put off dealing with (until today) is typography.  As a little bit of history: the typewriter forced us to sacrifice certain printed media standards because of its monospaced font.  Things like double-spacing between sentences and using straight quotes can be considered typewriter-era "hacks" so this portable machine could sort of mimic what the printing presses were doing.&lt;/p&gt;
&lt;p&gt;Well a lot of these hacks have become habitual and, for some, even typing "law"--how many people know there should only be &lt;a href="http://en.wikipedia.org/wiki/Sentence_spacing"&gt;one space&lt;/a&gt; between sentences?  Well, thanks to the advancement of technology, we can break these habits and return to the glory days of beautiful text.&lt;/p&gt;
&lt;p&gt;In Django, this means server-side substitution.  Since there are not separate open-quotes/close-quotes keys on my keyboard, and especially since I use &lt;a href="http://dustinfarris.com/2012/5/goodbye-tinymce/"&gt;markdown&lt;/a&gt; to draft my writings, something needs to process the text and make the appropriate replacements.  Enter &lt;a href="https://github.com/chrisdrackett/django-typogrify/"&gt;django-typogrify&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;django-typogrify with the help of a &lt;a href="http://daringfireball.net/projects/smartypants/"&gt;smartypants&lt;/a&gt; Python port does a lot, most significantly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Converts straight quotes to "curly" quotes&lt;/li&gt;
&lt;li&gt;Converts three dots into ellipsis&lt;/li&gt;
&lt;li&gt;Converts dashes into hyphens, en dashes, and em dashes&lt;/li&gt;
&lt;li&gt;Prevents "widowed" one-word lines as a result of word wrapping&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It does a lot more than that, but those are the main points I'm using.  I had a small caveat because I usually write my em dashes as " -- ".  Note the surrounding spaces.  I've learned that this is actually bad grammar; there should be no spaces when writing an em dash.  Thankfully, Django and Python make this an easy fix:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;blog.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;
  &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
      &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;(\w) -- (\w)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;r&amp;#39;\1--\2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There is plenty more typography work to do here.  django-typogrify does a lot of class-wrapping for various grammatical entities which need to be styled.  I also need to take a look at my font choices from a "big picture" point of view and determine if they are working well together.  Smashing Magazine plenty of &lt;a href="http://www.smashingmagazine.com/tag/typography/"&gt;material&lt;/a&gt; on that.  All in all, though, django-typogrify has given my blog a nice kick in the typographic pants.&lt;/p&gt;</summary><category term="Django"></category></entry><entry><title>"Tax Inequality"</title><link href="http://dustinfarris.com/2012/07/09/tax-inequality.html" rel="alternate"></link><updated>2012-07-09T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-07-09:2012/07/09/tax-inequality.html</id><summary type="html">&lt;p&gt;President Obama wants to &lt;a href="http://www.nytimes.com/2012/07/09/us/politics/obama-seeks-2013-tax-cuts-within-limits.html"&gt;extend tax cuts&lt;/a&gt; for Americans, but only for those making less than $250,000.  Is this appropriate?  &lt;a href="http://krugman.blogs.nytimes.com/2012/07/08/taxes-at-the-top/"&gt;Paul Krugman&lt;/a&gt; thinks so.  As he points out, if you combine corporations and people--which are practically &lt;a href="http://www.supremecourt.gov/opinions/09pdf/08-205.pdf"&gt;synonymous&lt;/a&gt; these days--you see that the top 1% have been doing &lt;em&gt;very&lt;/em&gt; well over the past 50 years in terms of tax breaks while the middle class have seen their taxes rise.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Federal Tax Rates by Income group from 1960 to 2004" src="/media/filer/2012/07/09/070812krugman2-blog480.jpg" title="From krugman.nytimes.com" /&gt;&lt;/p&gt;
&lt;p&gt;I might point out that the unemployment rate in 1960 &lt;a href="http://www.bls.gov/cps/cpsaat01.htm"&gt;was 5.5%&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In fact, if you look at unemployment data and tax rates over time, it becomes pretty clear that there is no direct correlation between unemployment and taxes.  Nonetheless, Mitt's campaign was quick to respond to Obama's proposal &lt;a href="http://politicalticker.blogs.cnn.com/2012/07/09/romney-responds-to-obamas-tax-cut-pledge/"&gt;saying&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Governor Romney knows that job-killing tax increases will hurt our troubled economy even further, and he has a plan to lower the rates and broaden the base without increasing the deficit to encourage investment and job creation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;"Job killing," huh?  I don't see it.  I'm no economist, but attempting to draw a parallel between taxes and job creation seems to be nothing but rhetorical nonsense (aka politics).&lt;/p&gt;</summary><category term="[Mitt Romney]"></category></entry><entry><title>"Automating Old Junk-mail Removal in Gentoo/Postfix"</title><link href="http://dustinfarris.com/2012/07/07/automating-old-junk-mail-removal-in-gentoopostfix.html" rel="alternate"></link><updated>2012-07-07T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-07-07:2012/07/07/automating-old-junk-mail-removal-in-gentoopostfix.html</id><summary type="html">&lt;p&gt;I run a mail server on a typical Linux/Postfix/Amavisd/Dovecot stack and have been recently playing with sa-learn.  More on that later.  In the mean-time I thought I'd share a quickie bash command to remove old junk mail from all virtual users that I just spun up in a cron job:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;find /var/mail/ -regextype posix-extended -regex &amp;#39;.*Junk/(cur|new)/.*&amp;#39; -ctime 14 -exec rm {} \;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of note is the &lt;code&gt;-regextype&lt;/code&gt; flag.  Apparently, &lt;a href="http://linux.die.net/man/1/find"&gt;find&lt;/a&gt; uses emacs style regex parsing by default which doesn't allow "or" groups.  Ok, I'm really going to sleep now.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Setting up a PostgreSQL Server with Gentoo"</title><link href="http://dustinfarris.com/2012/07/06/setting-up-a-postgresql-server-with-gentoo.html" rel="alternate"></link><updated>2012-07-06T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-07-06:2012/07/06/setting-up-a-postgresql-server-with-gentoo.html</id><summary type="html">&lt;p&gt;Setting up a database server is usually the first step when deploying a web framework stack.  This is the second of &lt;a href="http://dustinfarris.com/tag/setting-up-gentoo-postgres-and-django/"&gt;three documents&lt;/a&gt; showing how to get Django up and running with Gentoo.&lt;/p&gt;
&lt;p&gt;&lt;a id="contents"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#firewall"&gt;Firewall&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#install-postgres"&gt;Install Postgres&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#install-postgis-extensions"&gt;Install PostGIS Extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-super-users"&gt;Create Super Users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id="introduction"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Using Gentoo Linux to run PostgreSQL is a great marriage of technologies ready to meet and exceed the demands of most web applications.  Getting up and running is a breeze, and thanks to Gentoo's Portage packaging system, you can run multiple major versions of Postgres seamlessly on the same machine.  This document describes the basic PostgreSQL server installation requirements you should have in place when preparing to deploy a Django project.  Note this only describes the database &lt;em&gt;server&lt;/em&gt; side of Postgres.&lt;/p&gt;
&lt;p&gt;&lt;a href="#contents"&gt;Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="prerequisites"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Gentoo Linux (see my &lt;a href="http://dustinfarris.com/2012/2/setting-up-a-gentoo-server/"&gt;guide on setting up Gentoo&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Root access&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#contents"&gt;Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="firewall"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Firewall&lt;/h2&gt;
&lt;p&gt;If Postgres will be running on a separate server from your applications, you will have to open the Postgres port on your firewall.  If Postgres is running on the same machine as your applications, you can skip this section.&lt;/p&gt;
&lt;p&gt;Edit both &lt;code&gt;/etc/iptables.up.config&lt;/code&gt; and &lt;code&gt;/etc/ip6tables.up.config&lt;/code&gt; adding this line somewhere before the final "reject all" line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# PostgreSQL server&lt;/span&gt;
-A INPUT -p tcp -m state --state NEW --dport &lt;span class="m"&gt;5432&lt;/span&gt; -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Save and restart iptables:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;iptables-restore &amp;lt; /etc/iptables.up.config&lt;/span&gt;
&lt;span class="go"&gt;ip6tables-restore &amp;lt; /etc/ip6tables.up.config&lt;/span&gt;
&lt;span class="go"&gt;/etc/init.d/iptables save&lt;/span&gt;
&lt;span class="go"&gt;/etc/init.d/ip6tables save&lt;/span&gt;
&lt;span class="go"&gt;/etc/init.d/iptables restart&lt;/span&gt;
&lt;span class="go"&gt;/etc/init.d/ip6tables restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="install-postgres"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Install Postgres&lt;/h2&gt;
&lt;p&gt;The portage package with default USE flags is appropriate for our installation, so just emerge Postgres.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;emerge dev-db/postgresql-server&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Since Django and most other web frameworks are pushing everything to be UTF-8 encoded, it's best if the database server starts doing so from the beginning.  Before creating a database, find and change (or add if missing) a line in &lt;code&gt;/etc/conf.d/postgresql-9.1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;PG_INITDB_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--locale=en_US.UTF-8&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now create a database.  The exact command for this depends on the version of Postgres that got installed, and portage will have outputted the command needed.  If this is lost in your console history, you can always retrieve it from the logs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;grep &amp;quot;config =dev-db/postgres&amp;quot; /var/log/portage/elog/summary.log&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As of this writing, the current version of Postgres installed on a stable hardened profile is 9.1.4, so the command run is this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;emerge --config =dev-db/postgresql-server-9.1.4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This sets up a fresh database in &lt;code&gt;/var/lib/postgresql/9.1/&lt;/code&gt; called &lt;code&gt;data&lt;/code&gt;.  Now make any edits you need to &lt;code&gt;/etc/postgresql-9.1/postgresql.conf&lt;/code&gt;.  The defaults are probably fine, I just make sure the following are set:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;lc_messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;en_US.UTF-8&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;lc_monetary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;en_US.UTF-8&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;lc_numeric&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;en_US.UTF-8&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;lc_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;en_US.UTF-8&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, if this server will be separate from the application server, you will need to explicitly tell Postgres to allow connections form your application server.  In &lt;code&gt;/etc/postgresql-9.1/postgresql.conf&lt;/code&gt;, be sure that the &lt;code&gt;listen_addresses&lt;/code&gt; variable contains the IP address postgres should listen on. e.g.:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;listen_addresses = &amp;#39;localhost, 192.168.0.120&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Additional security-related configurations are found in &lt;code&gt;/etc/postgresql-9.1/pg_hba.conf&lt;/code&gt;.  If needed, add this line toward the bottom (substituting your application server's IP address):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;host  all  all  156.123.456.12  trust
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, just start the database server and tell Gentoo to start it on boot.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;/etc/init.d/postgresql-9.1 start&lt;/span&gt;
&lt;span class="go"&gt;rc-update add postgresql-9.1 default&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="#contents"&gt;Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="install-postgis-extensions"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Install PostGIS Extensions&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://postgis.refractions.net/"&gt;PostGIS&lt;/a&gt; is a set of spatial extensions to support geographic objects in PostgreSQL.  There is a chance you may not need this right away, but it is extremely handy to have readily available when you do.  I recommend installing these extensions whether you foresee actually using them or not.&lt;/p&gt;
&lt;p&gt;First, install the &lt;a href="http://www.gdal.org/"&gt;GDAL&lt;/a&gt; dependency:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;emerge gdal -avq&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Before installing PostGIS, I find that it helps to "version lock" the installation as a major upgrade may break your applications without some TLC.  To do this, find the current version Portage is installing &lt;a href="http://gentoo-portage.com/dev-db/postgis"&gt;here&lt;/a&gt; and add an appropriate line to &lt;code&gt;/etc/portage/package.mask&lt;/code&gt;.  I use PostGIS 1.5.3, but PostGIS was recently upgraded to 2.0.  This breaks my applications, so I want to hold off on that upgrade for now.  I added this line to &lt;code&gt;/etc/portage/package.mask&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt;&lt;span class="o"&gt;=&lt;/span&gt;dev-db/postgis-2.0.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which tells Portage not to install any version of PostGIS equal to or greater than 2.0.0.  Now, emerge PostGIS.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;emerge postgis -avq&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you'll probably see in the output, PostGIS requires some painless configuration before it is ready to be installed into your database.  Find and edit these two lines in &lt;code&gt;/etc/postgis_dbs&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;templates&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;template_postgis&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;configured&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install PostGIS into your database; like Postgres, the exact command here depends on the exact version of PostGIS you installed.  If you forgot, just run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;grep &amp;quot;config =dev-db/postgis&amp;quot; /var/log/portage/elog/summary.log&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For me, the command is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;emerge --config =dev-db/postgis-1.5.3-r1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With PostGIS now installed, you will will be able to create "spatially enabled" databases using &lt;code&gt;createdb -T template_postgis mydb&lt;/code&gt;.  For more information, see the &lt;a href="http://postgis.refractions.net/documentation/"&gt;PostGIS documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#contents"&gt;Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="create-super-users"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Create Super Users&lt;/h2&gt;
&lt;p&gt;It makes life easier if each system user using Postgres has a corresponding Postgres superuser.  The two primary users of Postgres on my machine are &lt;code&gt;dustin&lt;/code&gt; (my personal account) and &lt;code&gt;web&lt;/code&gt; for web applications.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;usermod -aG postgres dustin&lt;/span&gt;
&lt;span class="go"&gt;usermod -aG postgres web&lt;/span&gt;
&lt;span class="go"&gt;su - postgres&lt;/span&gt;
&lt;span class="go"&gt;createuser -s dustin&lt;/span&gt;
&lt;span class="go"&gt;createuser -s web&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, when you switch two either of these accounts, you can run administrative commands (&lt;code&gt;createdb&lt;/code&gt;, &lt;code&gt;dropdb&lt;/code&gt;, etc..) painlessly.&lt;/p&gt;
&lt;p&gt;&lt;a href="#contents"&gt;Contents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="conclusion"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;If all went well, you now have a running PostgreSQL server ready to start accepting connections.  If you have any issues getting of the ground, feel free to comment here and/or email me.&lt;/p&gt;
&lt;p&gt;&lt;a href="#contents"&gt;Contents&lt;/a&gt;&lt;/p&gt;</summary><category term="Gentoo"></category></entry><entry><title>"Facebook Meta-tags using Django and Jade"</title><link href="http://dustinfarris.com/2012/07/05/facebook-meta-tags-using-django-and-jade.html" rel="alternate"></link><updated>2012-07-05T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-07-05:2012/07/05/facebook-meta-tags-using-django-and-jade.html</id><summary type="html">&lt;p&gt;I've found the Facebook doesn't do the best job of inferring general information from my blog articles on its own.  Fortunately, the folks at FB provide a name-spaced meta tag schema more commonly known as &lt;a href="https://developers.facebook.com/docs/opengraph/"&gt;Open Graph&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Implementing a quick self-explanatory in a Django template &lt;a href="http://dustinfarris.com/2012/6/django-and-jade/"&gt;using Jade&lt;/a&gt; is easy.  First we add a few extra items to our context before rendering:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.sites.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Site&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;get_object_or_404&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;entry_detail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;entry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_object_or_404&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;entry&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;site&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_current&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;protocol&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_secure&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;fb_image&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;STATIC_URL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;img/logo.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;blog/entry_detail.jade&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And in the Jade template we can easily implement the Open Graph specifications.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;block&lt;/span&gt; meta
    &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;striptags&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;truncatewords&lt;/span&gt;&lt;span class="k"&gt;:&lt;/span&gt;&lt;span class="err"&gt;23&lt;/span&gt; &lt;span class="kt"&gt;as&lt;/span&gt; &lt;span class="kt"&gt;description&lt;/span&gt;
        &lt;span class="nt"&gt;meta&lt;/span&gt;(&lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;og:description&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;#{description}&amp;#39;&lt;/span&gt;)
    &lt;span class="nt"&gt;meta&lt;/span&gt;(&lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;og:title&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;#{entry.title}&amp;#39;&lt;/span&gt;)
    &lt;span class="nt"&gt;meta&lt;/span&gt;(&lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;og:image&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;#{protocol}://#{site}#{fb_image}&amp;#39;&lt;/span&gt;)
    &lt;span class="nt"&gt;meta&lt;/span&gt;(&lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;og:type&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;article&amp;#39;&lt;/span&gt;)
    &lt;span class="nt"&gt;meta&lt;/span&gt;(&lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;og:url&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;#{protocol}://#{site}#{entry.get_absolute_url()}&amp;#39;&lt;/span&gt;)
    &lt;span class="nt"&gt;meta&lt;/span&gt;(&lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;og:site_name&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Dustin Farris&amp;#39;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now every time I write an article--which gets automatically posted to Twitter which is, in turn, synced with my Facebook timeline--I don't have to spend time deleting/revising the Facebook post.&lt;/p&gt;</summary><category term="Django"></category></entry><entry><title>"Great Expectations"</title><link href="http://dustinfarris.com/2012/07/05/great-expectations.html" rel="alternate"></link><updated>2012-07-05T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-07-05:2012/07/05/great-expectations.html</id><summary type="html">&lt;p&gt;&lt;a href="http://online.wsj.com/article/SB10001424052702303561504577497451649700504.html?mod=rss_opinion_main"&gt;Austan Goolsbee&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Of all the public reactions to last Thursday's surprise ruling from the Supreme Court on the Affordable Care Act, one of the most interesting came from the markets: Nothing happened.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="[Affordable Care Act]"></category></entry><entry><title>"Work Less, for America"</title><link href="http://dustinfarris.com/2012/07/04/work-less-for-america.html" rel="alternate"></link><updated>2012-07-04T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-07-04:2012/07/04/work-less-for-america.html</id><summary type="html">&lt;p&gt;Dean Baker has an interesting solution to unemployment: ask everyone currently employed to work less.  I think it's a fantastic proposal.&lt;/p&gt;
&lt;p&gt;From &lt;a href="http://www.guardian.co.uk/commentisfree/2012/jul/03/why-americans-should-work-less-way-germans-do"&gt;The Guardian&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Germany's growth has been no better than growth in the United States since the start of the downturn, yet its unemployment rate has fallen by 2.0 percentage points – while unemployment in the United States has risen by almost 4.0 percentage points. The difference is that Germany encourages firms to reduce work hours rather than lay off workers.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term=""></category></entry><entry><title>"CPU Hungry Retina Macbook Pro"</title><link href="http://dustinfarris.com/2012/07/02/cpu-hungry-retina-macbook-pro.html" rel="alternate"></link><updated>2012-07-02T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-07-02:2012/07/02/cpu-hungry-retina-macbook-pro.html</id><summary type="html">&lt;p&gt;I had a chance to play with one of the new Retina Macbook Pros in the Apple store in Portland the other day and noticed two things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It's beautiful&lt;/li&gt;
&lt;li&gt;Its graphics performance is sluggish&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I found point two surprising because I have been watching &lt;a href="http://en.wikipedia.org/wiki/Intel_Tick-Tock#Roadmap"&gt;Intel's roadmap&lt;/a&gt; for years and thought Ivy Bridge was just going to slay all expectations.  It turns out that pushing 4x the pixels is a daunting task even for the mighty Ivy.&lt;/p&gt;
&lt;p&gt;Part of the problem is the way current OSX applications handle their UI processing--the GPU is under-utilized.  Mountain Lion (coming later this month) is theoretically going to deal with this, but beta testers have said the improvement is modest at best.&lt;/p&gt;
&lt;p&gt;A wonderfully written article by &lt;a href="http://www.anandtech.com/show/6023/the-nextgen-macbook-pro-with-retina-display-review/8"&gt;Anand Lal Shimpi&lt;/a&gt; states:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There’s simply nothing that can be done at this point - Apple is pushing the limits of the hardware we have available today, far beyond what any other OEM has done. Future iterations of the Retina Display MacBook Pro will have faster hardware with embedded DRAM that will help mitigate this problem.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sadly, as much as I want that retina display, it looks like I'll be waiting a little longer for the chip makers to catch up with Apple.&lt;/p&gt;</summary><category term="Apple"></category></entry><entry><title>"Book Review: The Grapes of Wrath"</title><link href="http://dustinfarris.com/2012/07/01/book-review-the-grapes-of-wrath.html" rel="alternate"></link><updated>2012-07-01T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-07-01:2012/07/01/book-review-the-grapes-of-wrath.html</id><summary type="html">&lt;p&gt;&lt;img alt="The Grapes of Wrath book cover" src="/media/filer/2012/07/01/grapesofwrath.jpg" title="The Grapes of Wrath by John Steinbeck" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Grapes of Wrath&lt;/em&gt; by John Steinbeck&lt;/p&gt;
&lt;p&gt;What a novel that rings home with relevance in today's America!  Written in 1939, &lt;em&gt;The Grapes of Wrath&lt;/em&gt; tells the story of an Oklahoma family who is suddenly uprooted from their home and, unable to find work, moves to California where landowners promise work and prosperity.  To their dismay, they are met with animosity and meanness.&lt;/p&gt;
&lt;p&gt;I think &lt;em&gt;The Grapes of Wrath&lt;/em&gt; sets the tone for any immigration scenario where on one hand you have a people who have inherited riches that were fought for and won, an on the other you have people who are not so lucky seeking a means for survival.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;And while the Californians wanted many things, accumulation, social success, amusement, luxury, and a curious banking security, the new barbarians wanted only two things--land and food.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Speaking on how California was taken from Mexico by early Americans, &lt;em&gt;The Grapes of Wrath&lt;/em&gt; describes how the rich take advantage of immigrants:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;They imported slaves, although they did not call them slaves: Chinese, Japanese, Mexicans, Filipinos.  They live on rice and beans, the business men said.  They don't need much.  They wouldn't know what to do with good wages.  Why, look how they live.  Why, look what they eat.  And if they get funny--deport them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And the book makes clear the inclination of society to ignore this unfair process not due to evil intent, but due to ignorance, fear and apathy.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Men of property were terrified for their property.  Men who had never been hungry saw the eyes of the hungry.  Men who had never wanted anything very much saw the flare of want in the eyes of the migrants.  And the men of the towns and of the soft suburban country gathered to defend themselves; and they reassured themselves that they were good and the invaders bad, as a man must do before he fights.  They said, These goddamned Okies are dirty and ignorant.  They're degenerate, sexual maniacs.  These goddamned Okies are thieves.  They'll steal anything.  They've got no sense of property rights.&lt;/p&gt;
&lt;p&gt;And the latter was true, for how can a man without property know the ache of ownership?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I believe there are serious lessons to be learned regarding immigration, and before someone takes a serious stance on issues that affect the lives of millions of immigrants, he should read &lt;em&gt;The Grapes of Wrath&lt;/em&gt;.&lt;/p&gt;</summary><category term="reading"></category></entry><entry><title>"The Real Winners"</title><link href="http://dustinfarris.com/2012/07/01/the-real-winners.html" rel="alternate"></link><updated>2012-07-01T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-07-01:2012/07/01/the-real-winners.html</id><summary type="html">&lt;p&gt;Economist Paul Krugman offers his view on the recent Supreme Court ruling on the constitutionality of the Affordable Care Act.&lt;/p&gt;
&lt;p&gt;From the &lt;a href="http://www.nytimes.com/2012/06/29/opinion/the-real-winners.html"&gt;New York Times&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In short, unless you belong to that tiny class of wealthy Americans who are insulated and isolated from the realities of most people’s lives, the winners from that Supreme Court decision are your friends, your relatives, the people you work with — and, very likely, you.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="[Affordable Care Act"></category><category term="Paul Krugman]"></category></entry><entry><title>"Lessons from death row inmates"</title><link href="http://dustinfarris.com/2012/06/19/lessons-from-death-row-inmates.html" rel="alternate"></link><updated>2012-06-19T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-06-19:2012/06/19/lessons-from-death-row-inmates.html</id><summary type="html">&lt;p&gt;An interesting look at the context of the death penalty.&lt;/p&gt;</summary><category term="TED"></category></entry><entry><title>"The Brain on Trial"</title><link href="http://dustinfarris.com/2012/06/19/the-brain-on-trial.html" rel="alternate"></link><updated>2012-06-19T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-06-19:2012/06/19/the-brain-on-trial.html</id><summary type="html">&lt;p&gt;My friend Tom posted an article in response to a TED video on death-row inmates &lt;a href="http://dustinfarris.com/2012/6/lessons-from-death-row-inmates/"&gt;I posted&lt;/a&gt; yesterday.  &lt;a href="http://www.theatlantic.com/magazine/archive/2011/07/the-brain-on-trial/8520/2/"&gt;The Brain on Trial&lt;/a&gt; from The Atlantic magazine argues what I think many of us already suspect: that we are not as in control of our lives as we might like to think.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Who we can be starts with our molecular blueprints—a series of alien codes written in invisibly small strings of acids—well before we have anything to do with it. Each of us is, in part, a product of our inaccessible, microscopic history.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term=""></category></entry><entry><title>"Cache Timeout Default in Django"</title><link href="http://dustinfarris.com/2012/06/08/cache-timeout-default-in-django.html" rel="alternate"></link><updated>2012-06-08T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-06-08:2012/06/08/cache-timeout-default-in-django.html</id><summary type="html">&lt;p&gt;I had to break a bad habit where I always specify explicit cache timeout settings when building custom template tags.  For example, I might have a news feed for the homepage that looks something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.cache&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.template&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Library&lt;/span&gt;

    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;news.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Article&lt;/span&gt;


    &lt;span class="n"&gt;register&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Library&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;



    &lt;span class="nd"&gt;@register.inclusion_tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;news/_news-feed.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show_news_feed&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Display 3 most recent news articles.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;latest_articles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;news_latest_articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;latest_articles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;latest_articles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Article&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;order_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;-pub_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;news_latest_articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;latest_articles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NEWS_LATEST_ARTICLES_TIMEOUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;latest_articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;latest_articles&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice that I use a custom value for the timeout duration, which means somewhere in my &lt;code&gt;settings.py&lt;/code&gt; I have to have:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;NEWS_LATEST_ARTICLES_TIMEOUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or something like that.  However, there is a default value already available when you set up your cache backend.  Usually this looks something like this in &lt;code&gt;settings.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;CACHES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;BACKEND&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;django.core.cache.backends.memcached.MemcachedCache&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;LOCATION&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;127.0.0.1:11211&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;KEY_PREFIX&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;TIMEOUT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;VERSION&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note the timeout value here.  This value is used as a default whenever you import the &lt;code&gt;cache&lt;/code&gt; module from &lt;code&gt;django.core&lt;/code&gt;.  In fact, 300 seconds is the default value &lt;a href="https://docs.djangoproject.com/en/1.4/ref/settings/#timeout"&gt;regardless&lt;/a&gt;, so you could even leave it out here.  Best to stay DRY unless otherwise needed.&lt;/p&gt;</summary><category term="Django"></category></entry><entry><title>"Django and Jade"</title><link href="http://dustinfarris.com/2012/06/01/django-and-jade.html" rel="alternate"></link><updated>2012-06-01T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-06-01:2012/06/01/django-and-jade.html</id><summary type="html">&lt;p&gt;This week I made an important addition to my tool kit.  In the past I've focused primarily on ways to streamline backend development using tools like django_compressor, Sentry, and Fabric.  More recently, however, I've taken a turn and began focusing on ways to bring my frontend up to speed.&lt;/p&gt;
&lt;p&gt;My initial focus was on incorporating new tools and resources like SASS, HTML5, Markdown and microdata (blog posts to follow).  I'd like to focus here, though, on my latest addition, Jade.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jade-lang.com/"&gt;Jade&lt;/a&gt; is a HTML preprocessor that dramatically reduces the bloat and messiness of your code.  It uses indented syntax(hey, kind of like Python!) and is extremely easy to learn.  Also, thanks to some terrific work by &lt;a href="https://github.com/SyrusAkbary/pyjade"&gt;Syrus Akbary&lt;/a&gt; who ported Jade to Python, it integrates easily with Django.&lt;/p&gt;
&lt;p&gt;To get the full experience you will need PyJade by Syrus, and the Python Markdown library (if you plan to use Markdown, which I highly recommend).  Both are available on PyPi.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install Markdown
pip install pyjade
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install pygments also if you plan on publishing code--see my post on &lt;a href="http://dustinfarris.com/2012/5/goodbye-tinymce/"&gt;syntax highlighting&lt;/a&gt; with Markdown.&lt;/p&gt;
&lt;p&gt;Enabling Jade couldn't be easier.  PyJade comes with a Django "extension" which features a template loader.  The loader wraps your existing loaders.  This allows PyJade to do the Jade preprocessing first, before handing the template off to the usual suspects.  All it takes a simple modification to your settings.py &lt;code&gt;TEMPLATE_LOADERS&lt;/code&gt; variable.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;TEMPLATE_LOADERS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;pyjade.ext.django.Loader&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;django.template.loaders.filesystem.Loader&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;django.template.loaders.app_directories.Loader&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;django.template.loaders.eggs.Loader&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With the loader in place, any '.jade' template you use in Django will be intercepted by PyJade and preprocessed.  Here is an example "base.jade":&lt;/p&gt;
&lt;p&gt;{% raw %}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="nn"&gt;!!! 5&lt;/span&gt;
    &lt;span class="nt"&gt;html&lt;/span&gt;
        &lt;span class="nt"&gt;head&lt;/span&gt;
            &lt;span class="nt"&gt;title&lt;/span&gt;
                &lt;span class="nt"&gt;block&lt;/span&gt; title
                    | My Website
        &lt;span class="nt"&gt;body&lt;/span&gt;
            &lt;span class="nt"&gt;header&lt;/span&gt;
                &lt;span class="nt"&gt;h1&lt;/span&gt; My Website
                &lt;span class="nt"&gt;nav&lt;/span&gt;
                    &lt;span class="nt"&gt;a&lt;/span&gt;(&lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="err"&gt;!=&amp;#39;{%&lt;/span&gt; &lt;span class="na"&gt;url&lt;/span&gt; &lt;span class="na"&gt;home&lt;/span&gt; &lt;span class="err"&gt;%}&amp;#39;&lt;/span&gt;) Home
                    &lt;span class="nt"&gt;a&lt;/span&gt;(&lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="err"&gt;!=&amp;#39;{%&lt;/span&gt; &lt;span class="na"&gt;url&lt;/span&gt; &lt;span class="na"&gt;blog:index&lt;/span&gt; &lt;span class="err"&gt;%}&amp;#39;&lt;/span&gt;) Blog
                    &lt;span class="nt"&gt;a&lt;/span&gt;(&lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="err"&gt;!=&amp;#39;{%&lt;/span&gt; &lt;span class="na"&gt;url&lt;/span&gt; &lt;span class="na"&gt;about&lt;/span&gt; &lt;span class="err"&gt;%}&amp;#39;&lt;/span&gt;) About Me
            &lt;span class="nf"&gt;#main&lt;/span&gt;(&lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;main&amp;#39;&lt;/span&gt;)
                &lt;span class="nt"&gt;block&lt;/span&gt; content
                    &lt;span class="nt"&gt;p&lt;/span&gt; Welcome to my website
            &lt;span class="nt"&gt;footer&lt;/span&gt;
                &lt;span class="nt"&gt;p&lt;/span&gt; All content copyright by me.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;{% endraw %}&lt;/p&gt;
&lt;p&gt;Then I can do an about page.  First, in urls.py:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.generic.simple&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;direct_to_template&lt;/span&gt;

    &lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;r&amp;#39;^about/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;direct_to_template&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;template&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;about.jade&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;about&amp;#39;&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And create about.jade which might look something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="nt"&gt;extends&lt;/span&gt; base

    &lt;span class="nt"&gt;block&lt;/span&gt; title
        | About Me

    &lt;span class="nt"&gt;block&lt;/span&gt; content
        &lt;span class="nt"&gt;article&lt;/span&gt;
            &lt;span class="nt"&gt;header&lt;/span&gt;
                &lt;span class="nt"&gt;h1&lt;/span&gt; About Me
            &lt;span class="nd"&gt;:markdown&lt;/span&gt;
                &lt;span class="nd"&gt;This is a page about me.  Be sure to check&lt;/span&gt;
                &lt;span class="nd"&gt;out my [Facebook Profile][1] where I post lots&lt;/span&gt;
                &lt;span class="nd"&gt;of crazy pictures!&lt;/span&gt;

                &lt;span class="nd"&gt;[1]: http://facebook.com/dustinfarris&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Because Jade is so easy to learn and use, the time investment really pays off.  I personally love how it feels sort of Pythonic with regards to indented syntax, and kicking out templates has certainly received a speed boost!&lt;/p&gt;</summary><category term="Django"></category></entry><entry><title>"Dustinfarris.com, Jadified"</title><link href="http://dustinfarris.com/2012/06/01/dustinfarriscom-jadified.html" rel="alternate"></link><updated>2012-06-01T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-06-01:2012/06/01/dustinfarriscom-jadified.html</id><summary type="html">&lt;p&gt;As I &lt;a href="http://dustinfarris.com/2012/6/django-and-jade/"&gt;previously mentioned&lt;/a&gt;, I have embraced &lt;a href="http://jade-lang.com/"&gt;Jade&lt;/a&gt; as a new and improved way of writing frontend markup.  As usual when learning new technologies, I've used my own website as a guinea pig.&lt;/p&gt;
&lt;p&gt;This site's markup is now 100% written in Jade and is available for your viewing pleasure on &lt;a href="https://github.com/dustinfarris/dustinfarris"&gt;GitHub&lt;/a&gt;&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Linking Multiple RSS Feeds"</title><link href="http://dustinfarris.com/2012/05/28/linking-multiple-rss-feeds.html" rel="alternate"></link><updated>2012-05-28T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-05-28:2012/05/28/linking-multiple-rss-feeds.html</id><summary type="html">&lt;p&gt;I &lt;a href="http://dustinfarris.com/2012/5/offering-rss-filter-option/"&gt;split my RSS feed&lt;/a&gt; the other day to filter technical blog posts from the rest by creating a /feeds/ page that offers the option.  Little did I know that these options can be presented right in the head of an HTML document just by adding additional "links"&lt;/p&gt;
&lt;p&gt;{% raw %}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;    &amp;lt;link&lt;/span&gt;
&lt;span class="x"&gt;        rel=&amp;quot;alternate&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;        type=&amp;quot;application/rss+xml&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;        title=&amp;quot;RSS 2.0 - All blog entries&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;        href=&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="nv"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;feed-all&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;link&lt;/span&gt;
&lt;span class="x"&gt;        rel=&amp;quot;alternate&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;        type=&amp;quot;application/rss+xml&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;        title=&amp;quot;RSS 2.0 - Technical entries only&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;        href=&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="nv"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;feed-techie&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;{% endraw %}&lt;/p&gt;
&lt;p&gt;Done.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Multiple RSS in Chrome" src="/media/filer/2012/05/28/multiple-rss.png" /&gt;&lt;/p&gt;</summary><category term="RSS"></category></entry><entry><title>"Dustinfarris.com Source on GitHub"</title><link href="http://dustinfarris.com/2012/05/24/dustinfarriscom-source-on-github.html" rel="alternate"></link><updated>2012-05-24T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-05-24:2012/05/24/dustinfarriscom-source-on-github.html</id><summary type="html">&lt;p&gt;My website is at a point where I feel comfortable making the source code public.  As of today, it is available as a &lt;a href="https://github.com/dustinfarris/dustinfarris"&gt;public repository on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've taken inspiration from other sites such as &lt;a href="https://github.com/dcramer/dcramer.github.com"&gt;David Cramer&lt;/a&gt;'s blog and even &lt;a href="https://github.com/django/djangoproject.com"&gt;Django's website&lt;/a&gt; itself.  I believe that being able to prod through working examples can be just as useful, sometimes even more useful, than reading tutorials and howtos.  I am proud to support an open philosophy where developers can freely learn from each other.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"John O'Kelly Properties in New York"</title><link href="http://dustinfarris.com/2012/05/24/john-okelly-properties-in-new-york.html" rel="alternate"></link><updated>2012-05-24T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-05-24:2012/05/24/john-okelly-properties-in-new-york.html</id><summary type="html">&lt;p&gt;I recently gave an old client of mine a site overhaul.  His site was one of my first, and let's just say things have come a long way since I built it.&lt;/p&gt;
&lt;p&gt;Upgrades include a brand new design (probably one of my best), a bump to Django 1.4, model restructuring, and a complete refactoring of HTML.  Check it out at &lt;a href="http://johnokelly.com"&gt;johnokelly.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Oh, and if you're looking for an apartment in Manhattan, you should definitely give him a call!&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Using zClip to 'Copy to Clipboard'"</title><link href="http://dustinfarris.com/2012/05/23/using-zclip-to-copy-to-clipboard.html" rel="alternate"></link><updated>2012-05-23T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-05-23:2012/05/23/using-zclip-to-copy-to-clipboard.html</id><summary type="html">&lt;p&gt;I've begun using django-filer to manage site assets after years of trying to beat a square peg (django-filebrowser) through a round hole (everything else).  It's been a very rewarding transition.&lt;/p&gt;
&lt;p&gt;Part of the addiction to filebrowser was due to its integration with django-tinymce.  A long time ago, the maker of django-tinymce added a hook+widget for django-filebrowser and users have been complaining ever since.  Despite its shortcomings, though, people such as myself have continued using it because of the "this is the only way I can add images to my editor without uploading them somewhere else" mentality.&lt;/p&gt;
&lt;p&gt;Recently, however, django-tinymce and I have &lt;a href="http://dustinfarris.com/2012/5/goodbye-tinymce/"&gt;gone our separate ways&lt;/a&gt; leaving me with the freedom to choose a new editor, and a new way to manage media.  Enter django-filer.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/stefanfoulis/django-filer"&gt;Django-filer&lt;/a&gt; is a great alternative to django-filebrowser featuring a cleaner interface and plenty of extra bells an whistles.  I now use it to upload my assets before writing a blog.  The hard part, I found, was getting the URL of uploaded assets.  I decided to &lt;a href="https://github.com/dustinfarris/django-filer"&gt;fork&lt;/a&gt; the project and add a copy-to-clipboard function using the zClip library.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.steamdev.com/zclip/"&gt;zClip&lt;/a&gt; allows you to set up an event hook on any HTML element that copies given text to the clipboard by overlaying the element with a Flash movie.&lt;/p&gt;
&lt;p&gt;In this case, I used a span container for positioning, and then a nested span element to act as the widget:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;&amp;lt;span style=&amp;quot;position:relative&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;span class=&amp;quot;zclip&amp;quot; data-copy=&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;file.url&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Activating the widget is accomplished by adding a simple jQuery snippet in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;span.zclip&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;zclip&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;flash/ZeroClipboard.swf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data-copy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;afterCopy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fadeOut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To make it work properly I had to add some CSS:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nc"&gt;.zclip&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;top&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;left&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;background&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(&amp;#39;../img/clip.png&amp;#39;)&lt;/span&gt; &lt;span class="k"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Voila, I can quickly upload images and grab the URL making the disconnect from filebrowser even less bothersome:
&lt;img alt="Screenshot of copy to clipboard" src="http://dustinfarris.com/media/filer/2012/05/23/screen_shot_2012-05-23_at_35113_pm.png" /&gt;&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Offering an RSS Filter Option"</title><link href="http://dustinfarris.com/2012/05/21/offering-an-rss-filter-option.html" rel="alternate"></link><updated>2012-05-21T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-05-21:2012/05/21/offering-an-rss-filter-option.html</id><summary type="html">&lt;p&gt;The great thing about RSS is that it allows you to get updates on things you're interested in as they are published.  However, with multifaceted blogs, such as mine, it's quite possible that you are receiving both wanted and unwanted updates from your subscription.  That's why I've decided to fork off part of my RSS feed to only propagate "technical" blog posts.&lt;/p&gt;
&lt;p&gt;I modified my feed class so that it can generate complete or filtered feeds on demand:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BlogFeed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Feed&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Dustin Farris&amp;quot;&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;techie_filter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;techie_filter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;techie_filter&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;items&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;qs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;published&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;techie_filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;qs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;qs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;techie&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;qs&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This allows me to have an RSS page that offers the filtered option in urls.py:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="c"&gt;# Blog feeds&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^feeds/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;direct_to_template&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;template&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;blog/feeds.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;feeds&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^feeds/all/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BlogFeed&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;feed-all&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^feeds/techie/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BlogFeed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;techie_filter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;feed-techie&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I think RSS should be all about beaming the right information to the right people.  Check out the new and improved &lt;a href="http://dustinfarris.com/feeds/"&gt;RSS page&lt;/a&gt; for dustinfarris.com.&lt;/p&gt;</summary><category term="RSS"></category></entry><entry><title>"Why Build a Blog with Django?"</title><link href="http://dustinfarris.com/2012/05/18/why-build-a-blog-with-django.html" rel="alternate"></link><updated>2012-05-18T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-05-18:2012/05/18/why-build-a-blog-with-django.html</id><summary type="html">&lt;p&gt;This question comes up a lot, both in flame wars and in rational discussion.  Why would you take time to build a blog application with Django when there are engines like WordPress that do the same thing out of the box.  Well it depends.&lt;/p&gt;
&lt;p&gt;The number one reason I think people choose Django to build a blog is because they want to learn Django.  Blogs are relatively straight forward animals.  They have an author, a title, and some sort of content.  They usually appear in chronological order on an index page of some kind, and if you're feeling feisty, that might even have "tags."&lt;/p&gt;
&lt;p&gt;But why else?  Yes, I built my blog with Django to learn Django, but I keep it that way because I can literally modify it in any way I please.  I am not dependent on a bucket of "plugins" that may or may not have the functionality I desire.  For example, let's say I have a typical blog model that looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;pub_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateTimeField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;auto_now_add&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;slug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SlugField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TextField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__unicode__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;

    &lt;span class="nd"&gt;@models.permalink&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_absolute_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;blog:detail&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;First, I'd like to point out how easy that was to make.  Second, assume I decide I want my blog to post to Twitter everytime I write a new entry.  Rather than digging for a WordPress plugin that may or may not do what I want, I can just override my save method:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;published_to_twitter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BooleanField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;twitter&lt;/span&gt;
    &lt;span class="n"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;twitter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Api&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;consumer_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TWITTER_CONSUMER_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;consumer_secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TWITTER_CONSUMER_SECRET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;access_token_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TWITTER_ACCESS_TOKEN_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;access_token_secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TWITTER_ACCESS_TOKEN_SECRET&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PostUpdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; http://example.com&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_absolute_url&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;published_to_twitter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
    &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Done, and I have full control over what is going on.  From the RSS feed, to the way my blog is displayed in a list view, and a detail view, to what comment engines I want to use, to how I want my blog to be tagged and/or categorized to collaboration, &lt;em&gt;I am in control.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Of course, that may not appeal to everyone, and I'll grant that no amount of internal control can trump the content you post.  But I say if you have the ability, Django is the way to go.  The learning curve is not as steep as you think, and it gives you a level of intimacy with your blog that you would not otherwise have.&lt;/p&gt;</summary><category term="Django"></category></entry><entry><title>"Book Report: The Picture of Dorian Gray"</title><link href="http://dustinfarris.com/2012/05/17/book-report-the-picture-of-dorian-gray.html" rel="alternate"></link><updated>2012-05-17T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-05-17:2012/05/17/book-report-the-picture-of-dorian-gray.html</id><summary type="html">&lt;p&gt;&lt;img alt="The Picture of Dorian Gray book cover" src="http://dustinfarris.com/media/filer/2012/05/17/doriangray.jpg" title="The Picture of Dorian Gray by Oscar Wilde" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Picture of Dorian Gray&lt;/em&gt; by Oscar Wilde&lt;/p&gt;
&lt;p&gt;What I love most about Oscar Wilde--and I'm not alone--is his impeccable sense of wit and sarcasm.  There is something about his light-hearted writing combined with a sort of philosophical depth that gives me a sensational thrill.  This book, in particular, is absolutely overflowing with epigrams and irony.&lt;/p&gt;
&lt;p&gt;Dorian Gray is a young man who unlocks the secret to perpetual youth.  He travels through life transitioning from naivety, to narcissism, to wickedness, and finally to regret, all the while maintaining a boyish appearance.  I suppose the "moral" of the story is that good looks and physical pleasure do not guarantee happiness, but there is much more to be had from this book than a mere life lesson.  As the splendid character, Lord Harry, humorously says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is no doubt that Genius lasts longer than Beauty.  That accounts for the fact that we all take such pains to over-educate ourselves.  In the wild struggle for existence, we want to have something that endures, and so we fill our minds with rubbish and facts, in the silly hope of keeping our place.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I have read many of Oscar Wilde's writings and have thoroughly enjoyed them, but I found &lt;em&gt;The Picture of Dorian Gray&lt;/em&gt; to be the most complete and entertaining of them all.&lt;/p&gt;</summary><category term="reading"></category></entry><entry><title>"RSS: Not a Fishing Pole"</title><link href="http://dustinfarris.com/2012/05/17/rss-not-a-fishing-pole.html" rel="alternate"></link><updated>2012-05-17T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-05-17:2012/05/17/rss-not-a-fishing-pole.html</id><summary type="html">&lt;p&gt;I've decided to formally denounce truncated RSS feeds.  I have become overtly annoyed by a handful of blogs I follow that break my Google Reader flow, and &lt;a href="http://www.geekinheels.com/2010/03/17/gawkers-truncated-rss-feeds-and-how-to-get-your-full-feeds-back.html"&gt;others&lt;/a&gt; &lt;a href="http://www.techdirt.com/articles/20100311/1809048526.shtml"&gt;agree with me&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The reason I love RSS so much is because it puts all of the people/organizations who write things I'm interested in in one spot.  For me, that spot is Google Reader.  Combined with some great keyboard &lt;a href="http://support.google.com/reader/bin/answer.py?hl=en&amp;amp;answer=69973"&gt;shortcuts&lt;/a&gt;, surfing blogs that I &lt;em&gt;know&lt;/em&gt; I'm interested in is seamless and enjoyable.&lt;/p&gt;
&lt;p&gt;Then comes along that one blog &lt;em&gt;cough&lt;/em&gt;Krugman&lt;em&gt;cough&lt;/em&gt; that gives you a one-liner and a link to read the rest on the original site.  This defeats the purpose of RSS!  If I wanted to read it on your site, I would bookmark your site.&lt;/p&gt;
&lt;p&gt;I myself am guilty of the truncated RSS crime, but as of today my blog's RSS feed is full HTML text.  If that means less tracking ability, so be it.  The world is a slightly better place now.&lt;/p&gt;</summary><category term="RSS"></category></entry><entry><title>"Goodbye TinyMCE, Hello Markdown"</title><link href="http://dustinfarris.com/2012/05/16/goodbye-tinymce-hello-markdown.html" rel="alternate"></link><updated>2012-05-16T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-05-16:2012/05/16/goodbye-tinymce-hello-markdown.html</id><summary type="html">&lt;p&gt;I've been a faithful &lt;a href="http://www.tinymce.com/"&gt;TinyMCE&lt;/a&gt; user for years, but
my blogging needs are growing and changing, and TinyMCE just isn't a fit
anymore. My primary complaint has been with syntax highlighting. The best
solution I was able to find was a Javascript libarary called
&lt;a href="http://alexgorbatchev.com/SyntaxHighlighter/"&gt;SyntaxHighlighter&lt;/a&gt; that
requires you to plug into the customization settings of TinyMCE and be
fastidious about embedding the right Javascript libraries and CSS stylesheets.
While it has served its purpose, I've determined that my setup was, among
other negatives, WYSIWYG first, everything else second.&lt;/p&gt;
&lt;p&gt;Recently I discovered
&lt;a href="http://daringfireball.net/projects/markdown/"&gt;markdown&lt;/a&gt;. Yes, I'm a late
bloomer. It is everything I ever wanted and nothing I never needed. Also,
Django comes fully ready for markdown syntax. For highlighting I chose the
ever-popular &lt;a href="http://pygments.org/"&gt;pygments&lt;/a&gt; library. Installing pygments
is as easy as a quick pip install. Markdown also had to be installed prior to
following a breezy &lt;a href="https://docs.djangoproject.com/en/dev/ref/contrib/markup/#id1"&gt;guide&lt;/a&gt; on
the Django docs. I dug through multiple editors for the admin before finally
choosing &lt;a href="https://bitbucket.org/carljm/django-markitup/overview"&gt;django-markitup&lt;/a&gt;, a did-the-hard-part-for-you Django app that provides
model and form hooks for the awesome
&lt;a href="http://markitup.jaysalvat.com/home/"&gt;Markitup&lt;/a&gt; Javascript editor. I
&lt;a href="https://github.com/dustinfarris/django-markitup"&gt;forked&lt;/a&gt; it to make a
minor edit to the Javascript configuration (doesn't have tab-button logic out
of the box for some reason). After all is said and done, I am able to write
standard, syntax highlighted markdown in Django admin, as simple as:&lt;/p&gt;
&lt;p&gt;{% raw %}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;load&lt;/span&gt; &lt;span class="nv"&gt;markup&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;object.content&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;markdown&lt;/span&gt;&lt;span class="s2"&gt;:&amp;quot;codehilite&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;safe&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;{% endraw %}&lt;/p&gt;
&lt;p&gt;which results in:&lt;/p&gt;
&lt;p&gt;{% raw %}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;load&lt;/span&gt; &lt;span class="nv"&gt;markup&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;object.content&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;markdown&lt;/span&gt;&lt;span class="s2"&gt;:&amp;quot;codehilite&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;safe&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;{% endraw %}&lt;/p&gt;
&lt;p&gt;The markdown templatetag honors
HTML, so my existing blog entries don't even have to be modified! I'll
probably convert a few of them anyway.&lt;/p&gt;</summary><category term="Django Markdown"></category></entry><entry><title>"ImportError: cannot import name indexes"</title><link href="http://dustinfarris.com/2012/05/16/importerror-cannot-import-name-indexes.html" rel="alternate"></link><updated>2012-05-16T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-05-16:2012/05/16/importerror-cannot-import-name-indexes.html</id><summary type="html">&lt;p&gt;I'm certainly not the first person to hit this caveat with django-haystack, as
this error has been reported for &lt;a href="https://github.com/toastdriven/django-haystack/issues/315"&gt;over a year&lt;/a&gt; now. However, I had trouble finding a concise
and reputable workaround. &lt;a href="https://github.com/toastdriven"&gt;Daniel Lindsley&lt;/a&gt;, the guy behind django-haystack, has alluded to a &lt;a href="http://django-haystack.readthedocs.org/en/v1.2.7/debugging.html#import-errors-on-start-up-mentioning-handle-registrations"&gt;workaround&lt;/a&gt; in the haystack docs, but only
affirms it as the "right" fix in a &lt;a href="https://github.com/toastdriven/django-haystack/issues/84#issuecomment-663791"&gt;somewhat buried&lt;/a&gt; GitHub issue comment. If you get
this error, it is because of the way django-haystack sets up its indexes at
the beginning of Django initialization. If there are any other applications
attempting to do something similar, it can cause conflicts and circular
imports, often leading to this error. First, instruct haystack not to load
itself on initialization: :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="c"&gt;# settings.py ...&lt;/span&gt;
    &lt;span class="n"&gt;HAYSTACK_ENABLE_REGISTRATIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Haystack cannot function without these
registrations however, so you have to "jump-start" it later in the startup
process. I chose to use urls.py. Do this for every application utilizing
haystack:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="c"&gt;# urls.py ...&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;appname&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;search_indexes&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally,
you'll have to modify &lt;code&gt;manage.py&lt;/code&gt; so that commands like &lt;code&gt;rebuild_index&lt;/code&gt; will
continue to work:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="c"&gt;# manage.py ...&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.management&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;execute_from_command_line&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;projectname&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;search_sites&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is really
the only way to keep django-haystack and other apps working in harmony until
Django enhances its startup flow.&lt;/p&gt;</summary><category term="Django"></category></entry><entry><title>"Site Updates"</title><link href="http://dustinfarris.com/2012/05/13/site-updates.html" rel="alternate"></link><updated>2012-05-13T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-05-13:2012/05/13/site-updates.html</id><summary type="html">&lt;p&gt;I just finished a pretty big round of revisions on dustinfarris.com.
Included in this makeover:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Started using &lt;a href="http://sass-lang.com/"&gt;SASS&lt;/a&gt; for my style edits. Coupled with &lt;a href="https://github.com/jezdez/django_compressor"&gt;django-compressor&lt;/a&gt;, which has a built-in preprocessor to compile edits on the fly, my CSS is more intuitive than ever.&lt;/li&gt;
&lt;li&gt;Major HTML5 refactoring. Although it may not be obvious from the outside, I pretty much gutted the entire markup and rewrote it with cleaner, and more accurate semantics.&lt;/li&gt;
&lt;li&gt;Implemented &lt;a href="http://schema.org/"&gt;microdata&lt;/a&gt; accross the site for SEO and exploratory purposes.&lt;/li&gt;
&lt;li&gt;Upgraded to &lt;a href="https://www.djangoproject.com/"&gt;Django 1.4&lt;/a&gt;. (previously on 1.4a)&lt;/li&gt;
&lt;li&gt;Installed dcramer's &lt;a href="https://github.com/dcramer/sentry"&gt;Sentry&lt;/a&gt; server to log errors and &lt;a href="https://github.com/dcramer/raven"&gt;Raven&lt;/a&gt; for detection (and_loving_ it!)&lt;/li&gt;
&lt;li&gt;Design updates--notice the new and improved background, sidebar, and search widget.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I plan on releasing the source to the public soon. Still
making minor tweaks and updating documentation, after which it is my hope that
this project will serve as a useful example of a small site to anyone who is
interested in learning about Django.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Fair and Balanced Reporting (part 2)"</title><link href="http://dustinfarris.com/2012/05/10/fair-and-balanced-reporting-part-2.html" rel="alternate"></link><updated>2012-05-10T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-05-10:2012/05/10/fair-and-balanced-reporting-part-2.html</id><summary type="html">&lt;p&gt;Yes, I spent another 30 seconds checking out Fox News' website today--which is
30 more seconds than could possibly have been healthy for me.
&lt;a href="/2012/5/fair-and-balanced-and-gay/"&gt;As it did before&lt;/a&gt;, it
blows my mind how such a wide reaching news network can stoop to posting
tabloid-level headlines on the front page like this one:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Same Sex Payoff headline on Fox News" src="/media/uploads/screen_shot_2012-05-10_at_12.07.29_pm.png" /&gt;&lt;/p&gt;
&lt;p&gt;Oh, and when you're done reading the Fair and Balanced news you can
participate in a Fair and Balanced poll:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fox News poll on why Obama announced his support for gay marriage" src="/media/uploads/screen_shot_2012-05-10_at_12.32.52_pm.png" /&gt;&lt;/p&gt;
&lt;p&gt;Fox News is a joke.&lt;/p&gt;</summary><category term="[Fox News]"></category></entry><entry><title>"Dear &lt;customer name&gt;"</title><link href="http://dustinfarris.com/2012/05/09/dear-customer-name.html" rel="alternate"></link><updated>2012-05-09T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-05-09:2012/05/09/dear-customer-name.html</id><summary type="html">&lt;p&gt;I always get a chuckle when big tech companies make silly oversights.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Email from Amazon" src="/media/uploads/screen_shot_2012-05-09_at_3.44.57_pm.png" /&gt;&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Fair and Balanced... and GAY"</title><link href="http://dustinfarris.com/2012/05/09/fair-and-balanced-and-gay.html" rel="alternate"></link><updated>2012-05-09T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-05-09:2012/05/09/fair-and-balanced-and-gay.html</id><summary type="html">&lt;p&gt;President Obama declared his support for gay marriage today.
That's interesting news. What's also
interesting is how the networks differ from each other when announcing the
news.&lt;/p&gt;
&lt;p&gt;Perhaps the differences are unnoticeable to some, but as a person who thinks
critically about webpages for a living, I couldn't help but notice how this
headline was portrayed from news site to news site--particularly with the
graphics.&lt;/p&gt;
&lt;p&gt;Here is the Times: Simple and classic much like the rest of
their site.&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;quot;Obama endorses gay marriage&amp;quot; headline at New York Times" src="/media/uploads/screen_shot_2012-05-09_at_4.54.31_pm.png" /&gt;&lt;/p&gt;
&lt;p&gt;CNN was also quick to get this up on the front page: decorated with a video
thumbnail and a neutral title, and presented alongside other breaking news.&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;quot;Obama endorses gay marriage&amp;quot; headline at CNN" src="/media/uploads/screen_shot_2012-05-09_at_4.53.46_pm.png" /&gt;&lt;/p&gt;
&lt;p&gt;Then there's our friends over at the Fair and Balanced network.
What strikes me most is the high contrast bold font they
use to scream out this headline. Coupled with a closeup
shot of the President's face and a thumbnail of two men wearing pink, I think
it's "fair" to say that the Fair and Balanced network would command more
respect (from me anyway) if it was fair, balanced, and tempered.&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;quot;Obama endorses gay marriage&amp;quot; headline at Fox News" src="/media/uploads/screen_shot_2012-05-09_at_4.51.38_pm.png" /&gt;&lt;/p&gt;</summary><category term="[Fox News]"></category></entry><entry><title>"Tick Tock"</title><link href="http://dustinfarris.com/2012/05/09/tick-tock.html" rel="alternate"></link><updated>2012-05-09T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-05-09:2012/05/09/tick-tock.html</id><summary type="html">&lt;p&gt;It's a shame we can't live out all of our life's dreams. I
wish I could pursue music. I wish I could pursue
philosophy. I wish I could pursue geology, astronomy, and
physics. In place of all that I study computers and web
development to a level that borders madness.&lt;/p&gt;
&lt;p&gt;Out of all areas of study in existance I am left with one that I can barely
keep up with. Why are we given such a short time to live?
Why is reality so complex? Why do we
care?&lt;/p&gt;</summary><category term="thoughts"></category></entry><entry><title>"Driverless Cars in Nevada"</title><link href="http://dustinfarris.com/2012/05/08/driverless-cars-in-nevada.html" rel="alternate"></link><updated>2012-05-08T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-05-08:2012/05/08/driverless-cars-in-nevada.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.telegraph.co.uk/news/uknews/road-and-rail-transport/9252657/Driverless-cars-approved-by-Nevada.html"&gt;The Telegraph&lt;/a&gt; reports on the
first US state to approve driverless cars. (You know Google
is involved)&lt;/p&gt;
&lt;p&gt;It's a beautiful thing.&lt;/p&gt;</summary><category term="Google"></category></entry><entry><title>"Lions! and Tigers! and Bears! oh .. it's an email."</title><link href="http://dustinfarris.com/2012/04/30/lions-and-tigers-and-bears-oh-its-an-email.html" rel="alternate"></link><updated>2012-04-30T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-04-30:2012/04/30/lions-and-tigers-and-bears-oh-its-an-email.html</id><summary type="html">&lt;p&gt;I had to use my personal email at work today to send files to a client because
we have an email security policy suitable for 9-year-old girls.&lt;/p&gt;</summary><category term="[Microsoft Exchange]"></category></entry><entry><title>"Book Report: For Whom the Bell Tolls"</title><link href="http://dustinfarris.com/2012/04/25/book-report-for-whom-the-bell-tolls.html" rel="alternate"></link><updated>2012-04-25T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-04-25:2012/04/25/book-report-for-whom-the-bell-tolls.html</id><summary type="html">&lt;p&gt;&lt;img alt="For Whom the Bell Tolls book cover" src="/media/uploads/uploads/hemingwaywhomthebelltolls_big.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;For Whom the Bell Tolls&lt;/em&gt; by Ernest Hemingway&lt;/p&gt;
&lt;p&gt;Hemingway tells the tale of a rouge U.S. citizen aiding the Spanish Republic
during the Spanish Civil War. The novel hits strongly on a
man's rationale when facing a hard situation.&lt;/p&gt;
&lt;p&gt;The protagonist demonstrates admirably level-headed thinking when carrying out
a mission to blow up a bridge to assist a military initiative in fascist
territory. While deep in enemy lands, he meets a girl and
falls in love, and in the end shows us how a man can be willing to give
everything for the right cause.&lt;/p&gt;
&lt;p&gt;Having previously finished Adam Smith's &lt;em&gt;&lt;a href="/2012/3/book-report-wealth-of-nations/"&gt;Wealth of Nations&lt;/a&gt;&lt;/em&gt;, I found Ernest Hemingway's
award-winning tale a welcome and thrilling refreshment.&lt;/p&gt;</summary><category term="reading"></category></entry><entry><title>"Living and Dying at the British Museum"</title><link href="http://dustinfarris.com/2012/04/24/living-and-dying-at-the-british-museum.html" rel="alternate"></link><updated>2012-04-24T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-04-24:2012/04/24/living-and-dying-at-the-british-museum.html</id><summary type="html">&lt;p&gt;&lt;img alt="People everywhere experience trouble, sorry, need and sickness and develop skill and knowledge in response to these adversities." src="/media/uploads/britishsorrow.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;I had an opportunity recently to visit the British Museum in London, and came
across a &lt;a href="http://www.britishmuseum.org/explore/galleries/themes/room_24_living_and_dying.aspx"&gt;gallery&lt;/a&gt; themed "Living and Dying." It is
an intriguing collection of artifacts that represent how humans deal with self
preservation, sickness, and death around the world.&lt;/p&gt;
&lt;p&gt;I found myself fascinated with how differently various cultures view these
universal effects of life. For instance, when people get
sick, some cultures pray, some dance, some invent medicine, and some do all of
the above; but what remains the inescapable truth is that we all react to
sickness and death.&lt;/p&gt;</summary><category term="London"></category></entry><entry><title>"Exporting `auth` Fixtures"</title><link href="http://dustinfarris.com/2012/04/13/exporting-auth-fixtures.html" rel="alternate"></link><updated>2012-04-13T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-04-13:2012/04/13/exporting-auth-fixtures.html</id><summary type="html">&lt;p&gt;I've discovered, rather painfully, that setting up auth fixtures for testing
requires a little care. Problems result when South
migrations interfere with fixture permissions.&lt;/p&gt;
&lt;p&gt;The best way to dump auth data is to use natural keys and avoid the permission
model altogether:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;./manage.py dumpdata -n auth.user auth.group &amp;gt; auth.json
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Django"></category></entry><entry><title>"Django Media: Cleaning Up Your Mess"</title><link href="http://dustinfarris.com/2012/04/12/django-media-cleaning-up-your-mess.html" rel="alternate"></link><updated>2012-04-12T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-04-12:2012/04/12/django-media-cleaning-up-your-mess.html</id><summary type="html">&lt;p&gt;Sometimes it's too easy to fire and forget when it comes to setting up
FileFields in Django. Over time, a lot of media can become stale as objects
are deleted--wasting storage space. Here is a quick way to keep your waste
footprint down: Store assets for every object in a separate folder, and remove
the folder if the object is deleted. Assume the following models:&lt;/p&gt;
&lt;p&gt;class Person(models.Model): name = models.CharField(max_length=100) class
Picture(models.Model): person = models.ForeignKey(Person) image =
models.ImageField( upload_to=lambda obj, f: 'people/%d/%s' % (obj.person.id,
f)) Note how the files are stored in an object-specific directory. Now, simply
write a pre-delete hook to remove that directory if the object is going to be
deleted:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt; &lt;span class="nn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os.path&lt;/span&gt; &lt;span class="nn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;join&lt;/span&gt; &lt;span class="nn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;settings&lt;/span&gt; &lt;span class="nn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db.models.signals&lt;/span&gt; &lt;span class="nn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pre_delete&lt;/span&gt; &lt;span class="nn"&gt;from&lt;/span&gt;
&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dispatch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dispatcher&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;receiver&lt;/span&gt; &lt;span class="nd"&gt;@receiver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pre_delete&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_person_delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;Remove media&lt;/span&gt;
&lt;span class="s"&gt;associated with a Person.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MEDIA_ROOT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;people&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;-rf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Django"></category></entry><entry><title>"Django, jQuery, and Infinite Scroll"</title><link href="http://dustinfarris.com/2012/04/09/django-jquery-and-infinite-scroll.html" rel="alternate"></link><updated>2012-04-09T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-04-09:2012/04/09/django-jquery-and-infinite-scroll.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Incomplete&lt;/strong&gt;: This post is missing some JavaScript code that got removed
somehow when I &lt;a href="http://dustinfarris.com/2013/06/from-django-to-github-pages/"&gt;switched to Octopress&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As the "next page" button becomes a thing of the past, we look for new ways to
provide streaming information. Enter infinite scroll. Implementing infinite
scroll in Django is easy thanks to the built-in
&lt;a href="https://docs.djangoproject.com/en/dev/topics/pagination/"&gt;paginator&lt;/a&gt;. What
you need is a view that will generate additional results of an object when
called upon via AJAX. Assume this model in a "people" application:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegerField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Build this view to generate the list page &lt;em&gt;and&lt;/em&gt; handle
AJAX calls for more results:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.paginator&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Paginator&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;InvalidPage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EmptyPage&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;people.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;people_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c"&gt;# If this isn&amp;#39;t AJAX, just return the page&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_ajax&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;people/people_list.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;people_qs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;order_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c"&gt;# Get the paginator&lt;/span&gt;
        &lt;span class="n"&gt;paginator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Paginator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;people&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;page&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;people&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;paginator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EmptyPage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;InvalidPage&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;people&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;paginator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;paginator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num_pages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c"&gt;# Return a snippet&lt;/span&gt;
        &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;people&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;people&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;paginator&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;paginator&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;people/_people_list.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The snippet is fairly simple.
_people_list.html:&lt;/p&gt;
&lt;p&gt;{% raw %}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;person&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;people&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    &amp;lt;li&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;people.has_next&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt; data-next=&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;people.next_page_number&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;        Name: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;person.name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;        Age: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;person.age&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;{% endraw %}&lt;/p&gt;
&lt;p&gt;And in in the main page, we enable the whole thing with
JavaScript. people_list.html:&lt;/p&gt;
&lt;p&gt;And there you have it. Alternate jQuery infinite scroll techniques can be
&lt;a href="http://www.jquery4u.com/tutorials/jquery-infinite-scrolling-demos/"&gt;found here&lt;/a&gt;.&lt;/p&gt;</summary><category term="Django jQuery"></category></entry><entry><title>"Congressmen, Lobbyists, and Super PACs"</title><link href="http://dustinfarris.com/2012/04/05/congressmen-lobbyists-and-super-pacs.html" rel="alternate"></link><updated>2012-04-05T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-04-05:2012/04/05/congressmen-lobbyists-and-super-pacs.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.jasonswadley.com/2012/04/this-american-life-on-lobbying-and-fundraising/"&gt;Jason Swadley&lt;/a&gt; suggests listening to &lt;a href="http://www.thisamericanlife.org/radio-archives/episode/461/take-the-money-and-run-for-office"&gt;This American Life&lt;/a&gt; this week and it's advice worth heeding.  The hour long discussion is a stirring perspective on the
reality of political influence.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Did He Really Say That?"</title><link href="http://dustinfarris.com/2012/03/27/did-he-really-say-that.html" rel="alternate"></link><updated>2012-03-27T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-03-27:2012/03/27/did-he-really-say-that.html</id><summary type="html">&lt;p&gt;Yes, he did.&lt;/p&gt;
&lt;p&gt;In an attempt to capitalize on Obama's discussion with Russian President
Dmitry Medvedev regarding election year politics, Mitt Romney
&lt;a href="http://politicalticker.blogs.cnn.com/2012/03/26/romney-not-worried-about-santorum-labels-russia-no-1-foe/"&gt;stated&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Russia "is without question our number one geopolitical foe,"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As I'm sure anyone can imagine, the Russians just &lt;a href="http://politicalticker.blogs.cnn.com/2012/03/27/russian-president-lobs-hollywood-charge-at-romney/"&gt;loved hearing that&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Medvedev:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"My first advice is to listen to reason when they formulate their positions.
Reason never harmed a presidential candidate. My other
advice is to check their watches from time to time: it is 2012, not the mid-
1970s."&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="[Mitt Romney]"></category></entry><entry><title>"Economists on Healthcare"</title><link href="http://dustinfarris.com/2012/03/26/economists-on-healthcare.html" rel="alternate"></link><updated>2012-03-26T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-03-26:2012/03/26/economists-on-healthcare.html</id><summary type="html">&lt;p&gt;You don't have to be lawyer to have common sense.&lt;/p&gt;
&lt;p&gt;Via &lt;a href="http://krugman.blogs.nytimes.com/2012/03/26/supreme-thoughts/"&gt;Krugman&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We know, or I think we know, that a single-payer system -- in which the
government collects taxes, and uses the revenue to provide health insurance --
would be constitutional. I mean, I don't think the court is about to strike
down Medicare.&lt;/p&gt;
&lt;p&gt;Well, ObamaRomneycare is basically a somewhat klutzy way of simulating
single-payer. Instead of collecting enough revenue to pay for universal health
insurance, it requires that those who can afford it buy the insurance
directly, then provides aid -- financed with taxes -- to those who can't. The
end result is much the same as if the government collected taxes from those
under the mandate and bought insurance for them.&lt;/p&gt;
&lt;p&gt;Yes, the system is surely less efficient than single-payer, both because
it's more complex and because it introduces another layer of middlemen. That's
what happens when you have to make political compromises. But it is in no
sense more interventionist, more tyrannical, than Medicare; it's just a
different way of achieving the same thing.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="[Affordable Care Act"></category><category term="Paul Krugman]"></category></entry><entry><title>"Obamacare is Unconstitutional?"</title><link href="http://dustinfarris.com/2012/03/25/obamacare-is-unconstitutional.html" rel="alternate"></link><updated>2012-03-25T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-03-25:2012/03/25/obamacare-is-unconstitutional.html</id><summary type="html">&lt;p&gt;It seems that our friends on the right have ramped up efforts to &lt;a href="http://www.nytimes.com/2012/03/20/us/politics/republicans-attack-health-law-as-supreme-court-hearing-nears.html?ref=affordablecareact"&gt;excite citizens&lt;/a&gt; into
thinking the Affordable Care Act is unconstitutional. The
achingly resounding argument is that forcing people to buy insurance they
don't want is somehow illegal.&lt;/p&gt;
&lt;p&gt;I have two responses:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Whoever doesn't want health insurance is out of their mind.&lt;/li&gt;
&lt;li&gt;The Congress shall have Power to regulate Commerce among the several States. (U.S. Constitution, Article I, Section 8)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Is &lt;a href="http://www.baltimoresun.com/news/nation-world/sns-rt-us-healthcare-teapartybre82n0e4-20120324,0,6453307.story"&gt;jumping up and down&lt;/a&gt; outside of the
Capitol going to change that? No.&lt;/p&gt;</summary><category term="[Affordable Care Act]"></category></entry><entry><title>"Book Report: Wealth of Nations"</title><link href="http://dustinfarris.com/2012/03/24/book-report-wealth-of-nations.html" rel="alternate"></link><updated>2012-03-24T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-03-24:2012/03/24/book-report-wealth-of-nations.html</id><summary type="html">&lt;p&gt;&lt;img alt="Wealth of Nations book cover" src="/media/uploads/uploads/wealthofnations_big.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Wealth of Nations by Adam Smith&lt;/p&gt;
&lt;p&gt;An Inquiry Into the Nature and Causes of the Wealth of Nations--yes, that's
the full title--is one of the first pieces of literature written on economics
(which technically was not even a field at the time). Adam
Smith takes a 1700's world bubbling over with discovery, and attempts to
explain monetary and behavioral trends, where they stem from, and what the
future might hold. In doing so, he created one of the most
influential texts of all time that is still widely referenced today.&lt;/p&gt;
&lt;p&gt;While many of the examples throughout are significantly outdated, much of the
wisdom is not pecuniary at all and, in a philosophical sense, is very
applicable in our present world. It is the philosophy
of_Wealth of Nations_that impacted me
the most.&lt;/p&gt;
&lt;p&gt;The first point Adam Smith makes, and refers to throughout the entire book, is
that productivity is increased substantially by the "division of labor."
Assigning simple minute tasks to individual workers allows
them to become proficient quickly, and results in increased output overall.
A thoughtful person might, however, be concerned that this
narrowing of scope of a man's daily work could be detrimental to realizing
human potential. Adam Smith recognizes the
corephenomenon:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The difference of natural talents in different men is, in reality, much less
than we are aware of; and the very different genius which appears to
distinguish men of different professions, when grown up to maturity, is not
upon many occasions so much the cause, as the effect of the division of
labour. (Book I, Chapter II, p. 23)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In my view, this might have a domino effect over the course of an individual's
life rendering a person stubborn and ignorant. Adam Smith
agrees:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The man whose whole life is spent in performing a few simple operations, of
which the effects too are, perhaps, always the same, or very nearly the same,
has no occasion to exert his understanding, or to exercise his invention in
finding out expedients for removing difficulties which never occur.
He naturally loses, therefore, the habit of such exertion,
and generally becomes as stupid and ignorant as it is possible for a human
creature to become. The torpor of his mind renders him, not
only incapable of relishing or bearing a part in any rational conversation,
but of conceiving any generous, noble, or tender sentiment and consequently of
forming any just judgment concerning many even of the ordinary duties of
private life. Of the great and extensive interests of his
country, he is altogether incapable of judging; and unless very particular
pains have been taken to render him otherwise, he is equally incapable of
defending his country in war. The uniformity of his
stationary life naturally corrupts the courage of his mind, and makes him
regard with abhorrence the irregular, uncertain, and adventurous life of a
soldier. It corrupts even the activity of his body, and
renders him incapable of exerting his strength with vigour and perseverance,
in any other employment than that to which he has been bred.
His dexterity at his own particular trade seems, in this
manner, to be acquired at the expence of his intellectual, social, and martial
virtues. But in every improved and civilized society this
is the state into which the labouring poor, that is, the great body of the
people, must necessarily fall, unless government takes some pains to prevent
it. (Book V, Chapter I, pp. 429-30)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I believe within every person there is a desire to better not just one's
condition, but, more importantly, to better oneself as a thing of value.
It is this driving desire, I think, that has led to the
great innovations mankind has imagined and produced in science, philosophy,
and art. I feel that a man, when his eyes are opened to his
own potential, tastes a power more addictive than money or fame.
Smith describes a related scenario
in_Wealth of Nations_ when he refers to the American colony
leaders.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Almost every individual of the governing party in America, fills, at present
in his own fancy, a station superior, not only to what he had ever filled
before, but to what he had ever expected to fill; and unless some new object
of ambition is presented either to him or to his leaders, if he has the
ordinary spirit of a man, he will die in defence of that station.
(Book IV, Chapter VII, p. 363)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In contrast to the individual aspiring to gain wisdom and improve his self-
worth is the person who spends his life bathing himself in whatever riches he
can attain. A "wantonness of plenty," Smith explains, is
more appropriate when considering the "play-things of children than the
serious pursuits of men."&lt;/p&gt;
&lt;p&gt;Surely, hardly anyone can claim to be completely free of profligacy over the
entire course of life, but there is a trap that we must be careful not to slip
into. Smith hints at irony between the expenses we can
afford on others versus our own selves.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In countries where a rich man can spend his revenue in no other way than by
maintaining as many people as it can maintain, he is not apt to run out, and
his benevolence it seems is seldom so violent as to attempt to maintain more
than he can afford. But where he can spend the greatest
revenue upon his own person, he frequently has no bounds to his expence,
because he frequently has no bounds to his vanity, or to his affection for his
own person. (Book III, Chapter IV, p. 267)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Smith notes that being overly generous to others, however, is not appropriate
behavior either due to the effects it has on society. Money
placed in unproductive hands, Smith writes, is immediately consumed and does
not benefit the opulence of the public at all. There is
surely, then, a balance between freely giving away all of one's riches, and
self-indulgence.&lt;/p&gt;
&lt;p&gt;An interesting factor of wealth is the envy it creates among those who don't
have it, or who don't have "enough" of it. Smith argues
that the evolution of government is a direct result of this envy:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The affluence of the rich excites the indignation of the poor, who are often
both driven by want, and prompted by envy, to invade his possessions. ... The
acquisition of valuable and extensive property, therfore, necessarily requires
the establishment of civil government. Where there is no
property, or at least none that exceeds the value of two or three days labour,
civil government is not so necessary. (Book V, Chapter I,
p. 408)&lt;/p&gt;
&lt;p&gt;Civil government, so far as it is instituted for the security of property,
is in reality instituted for the defence of the rich against the poor.
(Book V, Chapter I, p. 413)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In government, at least in ours, it seems as if there are at least 2 differing
views. One view that believes in tradition and austerity,
and another that propones progression and expansive spending.
In the United States--and I confess to generalize and
stereotype--we have Republicans and Democrats. Apparently
this a much more global situation than I knew, according to Smith:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In every society where the distinction of ranks has once been completely
established, there have been always two different schemes or systems of
morality current at the same time; of which the one may be called the strict
or austere; the other the liberal, or, if you will, the loose system.
The former is generally admired and revered by the common
people: The latter is commonly more esteemed and adopted by
what are called people of fashion. (Book V, Chapter I, p.
438)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think Smith was really on to something here. He goes on
to draw parallels between the adoption of religion and the moral strictness of
"the common people."&lt;/p&gt;
&lt;p&gt;In all, there is a wealth of knowledge in the &lt;em&gt;Wealth of Nations&lt;/em&gt;, and it is
intriguing to detect the similarities of the people of Adam Smith's world and
the people of our own. Economic understanding may have
changed greatly in 2+ centuries, but human nature, it seems, hasn't.&lt;/p&gt;
&lt;p&gt;All page citations from:&lt;/p&gt;
&lt;p&gt;Smith, A. (2008).&lt;em&gt;&lt;a href="http://www.amazon.com/gp/product/0199535922/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag=jasonswadleyc-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=0199535922"&gt;Wealth of Nations&lt;/a&gt;.&lt;/em&gt; New York, NY: Oxford
University Press.&lt;/p&gt;</summary><category term="reading"></category></entry><entry><title>"America and Energy Independence"</title><link href="http://dustinfarris.com/2012/03/23/america-and-energy-independence.html" rel="alternate"></link><updated>2012-03-23T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-03-23:2012/03/23/america-and-energy-independence.html</id><summary type="html">&lt;p&gt;The &lt;em&gt;&lt;a href="http://www.nytimes.com/2012/03/23/business/energy-environment/inching-toward-energy-independence-in-america.html"&gt;New York Times&lt;/a&gt;&lt;/em&gt; published a
long, but terrifically written recap of our nation's dependence on foreign-
made energy. A worthwhile read for anyone looking to brush
up on all this "domestic oil talk."&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"One day we were rolling in oil," recalled Jim Foreman, the general manager
of the Midland BMW dealership, "and the next day geologists were flipping
burgers at McDonald's."&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term=""></category></entry><entry><title>"Narcissism, and Facebook"</title><link href="http://dustinfarris.com/2012/03/22/narcissism-and-facebook.html" rel="alternate"></link><updated>2012-03-22T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-03-22:2012/03/22/narcissism-and-facebook.html</id><summary type="html">&lt;p&gt;&lt;a href="http://lifehacker.com/5895372/the-more-facebook-friends-you-have-the-more-unhappy-you-probably-are"&gt;Lifehacker&lt;/a&gt; recently discussed research showing a
correlation between levels of narcissism in an individual and the number of
Facebook friends he or she has.&lt;/p&gt;
&lt;p&gt;Via &lt;a href="http://www.guardian.co.uk/technology/2012/mar/17/facebook-dark-side-study-aggressive-narcissism"&gt;The Guardian&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;People who score highly on the Narcissistic Personality Inventory
questionnaire had more friends on Facebook, tagged themselves more often and
updated their newsfeeds more regularly.&lt;/p&gt;
&lt;p&gt;The research comes amid increasing evidence that young people are becoming
increasingly narcissistic, and obsessed with self-image and shallow
friendships.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Last year I performed a "friend" purge on my account, removing more than 200
friends whom, well, weren't really my friends. I have to
admit, it felt pretty good.&lt;/p&gt;</summary><category term="Facebook"></category></entry><entry><title>"This Foreign Policy Stuff is a Little Frustrating"</title><link href="http://dustinfarris.com/2012/03/16/this-foreign-policy-stuff-is-a-little-frustrating.html" rel="alternate"></link><updated>2012-03-16T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-03-16:2012/03/16/this-foreign-policy-stuff-is-a-little-frustrating.html</id><summary type="html">&lt;p&gt;&lt;em&gt;An old video from the White House when former Under Secretary of Defense for
Policy Douglas J. Feith spoke on the Iraq invasion.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The difference between the previous administration and the current one is like
night and day. Republican abuse of power is just
disheartening.&lt;/p&gt;
&lt;p&gt;The title is a &lt;a href="http://articles.nydailynews.com/2002-04-23/news/18185707_1_bush-aide-president-bush-middle-east"&gt;quote said by George W. Bush&lt;/a&gt; to his friends in 2002.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"What's So Terrible About Goldman Sachs Again?"</title><link href="http://dustinfarris.com/2012/03/16/whats-so-terrible-about-goldman-sachs-again.html" rel="alternate"></link><updated>2012-03-16T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-03-16:2012/03/16/whats-so-terrible-about-goldman-sachs-again.html</id><summary type="html">&lt;p&gt;A prestigious financial firm since the 19th century, and now there are
questions raised by former Sachs executive, &lt;a href="http://www.nytimes.com/2012/03/14/opinion/why-i-am-leaving-goldman-sachs.html"&gt;Greg Smith&lt;/a&gt;, over the corporate giant's true candor toward its clients.
So, what's really going on behind Wall Street doors?
Harvard Business Review Editorial Director Justin Fox
offers &lt;a href="http://blogs.hbr.org/fox/2012/03/greg-smiths-resignation-op-ed.html"&gt;a few possible explanations&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Smart people started working there. Wall Street had long attracted the
bottom third of the class; decent enough folks with modest ambitions. Then the
combination of bigger paychecks and higher college and grad school tuition
began driving the best students into finance. ...
And the culture of an organization composed entirely of
people who are really, really smart
and_know_they are really, really smart
may bebound to turn toxic eventually.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term=""></category></entry><entry><title>"Apple, For The Win"</title><link href="http://dustinfarris.com/2012/03/14/apple-for-the-win.html" rel="alternate"></link><updated>2012-03-14T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-03-14:2012/03/14/apple-for-the-win.html</id><summary type="html">&lt;p&gt;It's been close to three years since we &lt;a href="http://www.economist.com/node/15911334"&gt;officially came out of a recession&lt;/a&gt;, and pretty much everyone
is doing better, albeit not as much as they might like. A
certain company named Apple, however, has really left the recession in the
dust. From consistently leading consumer electronic brands
to beautiful money management (they don't have a penny of debt), Apple has
really set an example that other aspiring companies would do well to follow.&lt;/p&gt;
&lt;p&gt;Today, Apple is trading at just under $600 a share! Here is
Apple's stock value growth over the last 3 years compared with the rest of the
S&amp;amp;P 500:&lt;/p&gt;
&lt;p&gt;&lt;img alt="AAPL vs S&amp;amp;P 500 gains over 3 years" src="/media/uploads/sp500vsaapl3yr.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;My only regret from buying Apple stock is not having bought more of it when I
did.&lt;/p&gt;</summary><category term="Apple"></category></entry><entry><title>"Regulate This"</title><link href="http://dustinfarris.com/2012/03/14/regulate-this.html" rel="alternate"></link><updated>2012-03-14T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-03-14:2012/03/14/regulate-this.html</id><summary type="html">&lt;p&gt;&lt;a href="http://baselinescenario.com/2012/03/13/americans-like-regulation/"&gt;James Kwak&lt;/a&gt; throws an interesting spin on regulation sentiments, stating:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It's a well-known fact that Americans oppose government spending in the
abstract yet favor virtually every government spending program.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It's fascinating how so much of man-kind can live in the kind of bubble that
restricts you to empathize only with yourself.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Of course people want stronger food safety regulations when they read
stories about people dying from tainted food; of course they want stronger
environmental protections when they hear about toxic groundwater. At the same
time, exactly half of the political establishment has been on a crusade to
demonize regulation in general for the past forty years.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term=""></category></entry><entry><title>"A Bad Economic Analogy"</title><link href="http://dustinfarris.com/2012/03/12/a-bad-economic-analogy.html" rel="alternate"></link><updated>2012-03-12T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-03-12:2012/03/12/a-bad-economic-analogy.html</id><summary type="html">&lt;p&gt;Everyone has heard from the Right that government needs to "tighten its belt"
and behave like a responsible family in times of economic crisis.
&lt;a href="http://krugman.blogs.nytimes.com/2012/03/12/losing-the-belt/"&gt;Paul Krugman&lt;/a&gt; blows a nice hole in this analogy:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When a family tightens its belt it doesn't put itself out of a job. When a
government tightens its belt in a depressed economy, it puts lots of people
out of jobs; and this is a negative even from the government's own, narrowly
fiscal point of view, since a shrinking economy means less revenue.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="[Paul Krugman]"></category></entry><entry><title>"Distro Irony"</title><link href="http://dustinfarris.com/2012/03/12/distro-irony.html" rel="alternate"></link><updated>2012-03-12T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-03-12:2012/03/12/distro-irony.html</id><summary type="html">&lt;p&gt;Skimming through Google+ posts I ran across the great &lt;a href="https://plus.google.com/u/0/102150693225130002912/posts/1vyfmNCYpi5"&gt;Linus Torvalds&lt;/a&gt;
complaining that OpenSUSE's security policy was causing problems for his
daughter and her Macbook Air. He closes the rant by
stating:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;.. and now I need to find a new distro that actually works on the Macbook
Air.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To which a commentator responded:&lt;/p&gt;
&lt;p&gt;&lt;img alt="I think that Apple makes a decent Unix distro that runs on the Macbook Air." src="/media/uploads/linuxtorvaldsrantresponse.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;That made my day.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"The Ethics of Globalization"</title><link href="http://dustinfarris.com/2012/03/12/the-ethics-of-globalization.html" rel="alternate"></link><updated>2012-03-12T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-03-12:2012/03/12/the-ethics-of-globalization.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.project-syndicate.org/commentary/rodrik68/English"&gt;Dani Rodrik&lt;/a&gt;
shares his thoughts regarding economic globalization and the, often
overlooked, ethical consequences it potentially presents if not well-managed:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We would think differently if Gates and Buffett had enriched themselves not
through perspiration and inspiration, but by cheating, breaking labor laws,
ravaging the environment, or taking advantage of government subsidies abroad.
If we do not condone redistribution that violates widely shared moral codes at
home, why should we accept it just because it involves transactions across
political borders?&lt;/p&gt;
&lt;p&gt;Similarly, when we expect redistributive effects to even out in the long
run, so that everyone eventually comes out ahead, we are more likely to
overlook reshufflings of income. That is a key reason why we believe that
technological progress should run its course, despite its short-run
destructive effects on some. When, on the other hand, the forces of trade
repeatedly hit the same people - less educated, blue-collar workers - we may
feel less sanguine about globalization.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term=""></category></entry><entry><title>"Really, Missouri? A Statue?"</title><link href="http://dustinfarris.com/2012/03/08/really-missouri-a-statue.html" rel="alternate"></link><updated>2012-03-08T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-03-08:2012/03/08/really-missouri-a-statue.html</id><summary type="html">&lt;p&gt;I'm with &lt;a href="http://www.nydailynews.com/news/politics/bill-maher-liberals-accept-rush-limbaugh-apology-sandra-fluke-move-article-1.1035029"&gt;Bill Mahr&lt;/a&gt; who
recently criticized liberals for taking Rush Limbaugh's comments regarding
Sandra Fluke too far. What I'm not for is the $10,000 gold
statue of Rush that House Speaker Steve Tilley-R wants to erect in the
Jefferson City Hall of Famous Missourians.&lt;/p&gt;
&lt;p&gt;Tilley did respond to voters concerned over Rush's recent radio stunt.
Via &lt;a href="http://www.stltoday.com/news/local/govt-and-politics/bust-of-rush-limbaugh-to-join-twain-s-others-in/article_4aba525d-c395-5b3a-8860-0131a44b87fa.html"&gt;STLtoday&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"I'm not going to go through it and review every comment he's ever made,"
Tilley said. "Just like the people who inducted Mark Twain, Warren Hearnes or
John Ashcroft didn't."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Somehow I don't think we're comparing apples to apples here.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"What a Real Presidential Candidate Looks Like"</title><link href="http://dustinfarris.com/2012/02/28/what-a-real-presidential-candidate-looks-like.html" rel="alternate"></link><updated>2012-02-28T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-02-28:2012/02/28/what-a-real-presidential-candidate-looks-like.html</id><summary type="html">&lt;p&gt;Oh, andapparentlythis speech makes Rick
Santorum "&lt;a href="http://articles.latimes.com/2012/feb/26/news/la-pn-rick-santorum-rejects-absolute-separation-of-church-and-state-20120226"&gt;want to throw up.&lt;/a&gt;"&lt;/p&gt;</summary><category term="Rick Santorum"></category></entry><entry><title>"Rich Romney"</title><link href="http://dustinfarris.com/2012/02/27/rich-romney.html" rel="alternate"></link><updated>2012-02-27T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-02-27:2012/02/27/rich-romney.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://www.cbsnews.com/8301-503544_162-57385498-503544/romney-not-a-nascar-fan-but-friends-are-owners/"&gt;CBS News&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Asked by the AP reporter if he follows NASCAR, Romney responded, "Not as
closely as some of the most ardent fans. But I have some great friends who are
NASCAR team owners."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Total disconnect.&lt;/p&gt;</summary><category term="[Mitt Romney]"></category></entry><entry><title>"Smart Republicans Reject Science"</title><link href="http://dustinfarris.com/2012/02/26/smart-republicans-reject-science.html" rel="alternate"></link><updated>2012-02-26T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-02-26:2012/02/26/smart-republicans-reject-science.html</id><summary type="html">&lt;p&gt;The Economist's View brought up the&lt;a href="http://economistsview.typepad.com/economistsview/2012/02/make-them-identify-emotionally.html?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed%3A+EconomistsView+%28Economist%27s+View+%28EconomistsView%29%29"&gt;interesting point&lt;/a&gt; today
that a lot of what drives Republican politics revolves more around emotion
rather than science and education. Furthermore, education
seems to actually perpetuate this anomaly.&lt;/p&gt;
&lt;p&gt;Given the facts of global warming and human involvment, &lt;a href="http://www.alternet.org/story/154252/the_republican_brain:_why_even_educated_conservatives_deny_science_--_and_reality/?page=entire"&gt;Chris Mooney&lt;/a&gt; cites a &lt;a href="http://www.people-press.org/2008/05/08/a-deeper-partisan-divide-over-global-warming/"&gt;2008 Pew report&lt;/a&gt; showing the "partisan divide over the reality of global
warming." Of interest is this chart showing not only the
belief differences between Republicans, Independents, and Democrats, but also
between the less and more educated.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Party and Education graph showing who believes global warming is happening because of human activity" src="/media/uploads/417-4.gif" /&gt;&lt;/p&gt;
&lt;p&gt;Mooney talks about the effect these numbers had on him:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For Republicans, having a college degree didn't appear to make one any more
open to what scientists have to say. On the contrary, better-educated
Republicans were more skeptical of modern climate science than their less
educated brethren. ...This was my first encounter with what
I now like to call the "smart idiots" effect: The fact that politically
sophisticated or knowledgeable people are often more biased, and less
persuadable, than the ignorant. It's a reality that generates endless
frustration for many scientists--and indeed, for many well-educated,
reasonable people...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And &lt;a href="http://digbysblog.blogspot.com/2012/02/tribal-solidarity-more-important-than.html"&gt;Digby&lt;/a&gt; goes on to draw the parallel with emotion which I think
is brilliant:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;...Ultimately, this is about tribalism, feeling part of a group, being
validated by it and thinking and behaving in ways that preserve your place in
it. We all do it to some extent...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Things finally are making sense.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Two Subdomains, One Django"</title><link href="http://dustinfarris.com/2012/02/26/two-subdomains-one-django.html" rel="alternate"></link><updated>2012-02-26T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-02-26:2012/02/26/two-subdomains-one-django.html</id><summary type="html">&lt;p&gt;I want to serve two sub-domains from the same Django project--not unheard of,
see the countless multi-lingual sites out there. My goal,
however, is specifically to share the whole project, except for the URLs.
In theory, I could make use of
Django's&lt;a href="https://docs.djangoproject.com/en/dev/ref/contrib/sites/"&gt;"sites" framework&lt;/a&gt;. The first thing to do is create
two "sites" in the back-end, then identify a specific one in two different
settings files.&lt;/p&gt;
&lt;p&gt;One for subdomain abc:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# settings_abc.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;settings_base&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;SITE_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And another for subdomain xyz:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# settings_xyz.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;settings_base&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;SITE_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then in &lt;code&gt;urls.py&lt;/code&gt;, I could create a conditional statement like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# urls.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.sites.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Site&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="n"&gt;curent_site&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SITE_ID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;current_site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;domain&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;abc.domain.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;current_site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;domain&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;xyz.domain.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is me thinking out loud. I'll have to test it live to
see how well it works. Eventually, I'd like one general
purpose sub-domain, and then another sub-domain to serve secure content.&lt;/p&gt;
&lt;p&gt;*[URL]: Universal Resource Locator&lt;/p&gt;</summary><category term="Django"></category></entry><entry><title>"Gasping For Words"</title><link href="http://dustinfarris.com/2012/02/25/gasping-for-words.html" rel="alternate"></link><updated>2012-02-25T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-02-25:2012/02/25/gasping-for-words.html</id><summary type="html">&lt;p&gt;Blurting without censorship.&lt;/p&gt;
&lt;p&gt;One time-wasting habit of mine I should really break is reading comment
threads on political articles--especially articles dealing with the upcoming
election. The sheer mass of mindless ill-informed, half-
thoughts that commenters spill out is just very sad. What
makes it worse is the complete lack of grammar, spelling ability, and word
choice discernment. I like to call it "Typing Tourett's."&lt;/p&gt;
&lt;p&gt;Here is a random example from an ABC News article dealing with, well, it
doesn't really matter:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;UNFORUTANTELY 99% of us cars need oil. And YES, if US produced more OIL, we
would dampen the effects of the world wide oil market. I'm not giving
opinions, nor I'm I stating any left or right wing rhethoic. I'm simply stated
UNDISPUTELY FACTS. But vote for OBAMA anyway. I like 15% unemploymeny, raising
OIL prices, a divided national, unstoppable deficits, a failing dollar, and a
man, who leads by pointing his finger and blaming.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You know, a government in a country such as ours can only be as smart, wise,
and effective as the people who elect it into place. So
look in the mirror America, and &lt;em&gt;then&lt;/em&gt; start talking about change.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"I Finished Insanity!"</title><link href="http://dustinfarris.com/2012/02/21/i-finished-insanity.html" rel="alternate"></link><updated>2012-02-21T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-02-21:2012/02/21/i-finished-insanity.html</id><summary type="html">&lt;p&gt;Two months ago, I put myself to the challenge of completing a 60-day period of
enduring hell also known as the &lt;a href="http://www.beachbody.com/product/fitness_programs/best_sellers/insanity.do"&gt;Beachbody Insanity program&lt;/a&gt;.
If you haven't seen the promos on late-night TV, it is a
cardio conditioning program led by instructor Shaun T. that utilizes what he
likes to call "interval training." Interval training is a
kind of fitness exercise where, at certain intervals, you want to die.&lt;/p&gt;
&lt;p&gt;Here is my before and after:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Insanity before and after" src="/media/uploads/uploads/insanitybeforeafter_medium.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;To be honest, I don't think that picture does justice to the blood, sweat, and
tears I've shed for 4 fortnights. In the first image I
weighed 137 pounds and couldn't make it through the warm-up without gasping
for air. In exhibit B, I am now 153 pounds with a resting
heart-rate at 62bpm (which I think is pretty decent for my age and life
history).&lt;/p&gt;
&lt;p&gt;Anyone looking to improve their cardio should give Insanity a try, but I'll
caution it is not for the faint of heart. ;-) Up next is &lt;a href="http://www.beachbody.com/product/fitness_programs/best_sellers/p90x.do"&gt;p90x&lt;/a&gt;.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"In-page Links and Fixed Header Overlap"</title><link href="http://dustinfarris.com/2012/02/21/in-page-links-and-fixed-header-overlap.html" rel="alternate"></link><updated>2012-02-21T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-02-21:2012/02/21/in-page-links-and-fixed-header-overlap.html</id><summary type="html">&lt;p&gt;Problem: You have a fixed position header (like the one on this page), and you
find that using &lt;code&gt;&amp;lt;a href="#othersection"&amp;gt;&lt;/code&gt; causes a portion of your document
to be "hidden" by the banner after being brought to the top of the page. From
a visual standpoint, when you declare &lt;code&gt;position:fixed&lt;/code&gt; on an element, say a
div, the browser stops considering the div's dimensions when working with
other parts of the page layout. This is especially noticeable when you have an
in-page link and it scrolls underneath your banner. For example, if you have:&lt;/p&gt;
&lt;p&gt;Click to jump to "section"&lt;/p&gt;
&lt;h2&gt;Section&lt;/h2&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;When you click the link to jump to &lt;code&gt;#section&lt;/code&gt;, your h2, and possibly other
text, will be partially hidden by the header &lt;code&gt;div&lt;/code&gt;. &lt;img alt="Fixed-header problem example" src="/media/uploads/fixedheader_example.png" /&gt; The solution is to "trick"
the browser into thinking the jump point is higher than it really is. To make
this solution elegant, use a separate element (like span) when declaring the
jump point: :::html&lt;/p&gt;
&lt;h2&gt;Section&lt;/h2&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;Assuming the header's height is 70px, you must offset the jump point by at
least that much. Modify the span element with the following CSS:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nc"&gt;.anchor&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;margin-top&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;visibility&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The browser will consider the height attribute when calculating
where to scroll to, and the negative top margin keeps any large gaps from
appearing in your page content. &lt;img alt="Fixed-header problem fixed example" src="/media/uploads/fixedheaderfixed_example.png" /&gt; This solution works
well in all modern browsers.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS: Cascading Style Sheets&lt;/li&gt;
&lt;/ul&gt;</summary><category term="CSS"></category></entry><entry><title>"Memphis Lives In Me"</title><link href="http://dustinfarris.com/2012/02/21/memphis-lives-in-me.html" rel="alternate"></link><updated>2012-02-21T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-02-21:2012/02/21/memphis-lives-in-me.html</id><summary type="html">&lt;p&gt;Substitute your hometown for Memphis and this song can be a real tearjerker.
Also, Adam Pascal has an incredible voice!&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Shutting Down dfcode.com"</title><link href="http://dustinfarris.com/2012/02/19/shutting-down-dfcodecom.html" rel="alternate"></link><updated>2012-02-19T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-02-19:2012/02/19/shutting-down-dfcodecom.html</id><summary type="html">&lt;p&gt;Maintaining two blogs has become impossible, so I'm consolidating my writing
to this one. I will migrate the most hit blogs and create
redirects so bookmarks should be good for the rest of the year, but I have no
plans to renew the domain registration when it expires.&lt;/p&gt;
&lt;p&gt;Expect more technie-oriented writing here in the near future.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Give Me My Money and Go Away"</title><link href="http://dustinfarris.com/2012/02/13/give-me-my-money-and-go-away.html" rel="alternate"></link><updated>2012-02-13T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-02-13:2012/02/13/give-me-my-money-and-go-away.html</id><summary type="html">&lt;p&gt;A drilldown on hypocrisy.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://krugman.blogs.nytimes.com/2012/02/13/moochers-for-self-reliance/"&gt;Paul Krugman&lt;/a&gt; discusses a &lt;a href="http://www.nytimes.com/2012/02/12/us/even-critics-of-safet-net-increasingly-depend-on-it.html?_r=1&amp;amp;src=me&amp;amp;ref=general"&gt;New York Times article&lt;/a&gt; that articulates the
ratio of money states give and receive to and from the Federal government
versus their political philosophy:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So are states that get a lot but don't pay much also states that vote for
candidates demanding self-reliance and an end to Big Government? Basically,
yes. By my reckoning, 7 of the most dependent states in the sense that they
pay relatively little while receiving a lot went for McCain in 2008; only 2 of
the least dependent states did.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Maybe a little introspection is called for.&lt;/p&gt;</summary><category term="[Paul Krugman]"></category></entry><entry><title>"Sarah Palin's Political Discourse"</title><link href="http://dustinfarris.com/2012/02/13/sarah-palins-political-discourse.html" rel="alternate"></link><updated>2012-02-13T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-02-13:2012/02/13/sarah-palins-political-discourse.html</id><summary type="html">&lt;p&gt;&lt;img alt="Sarah Palin at CPAC" src="/media/uploads/uploads/sarah-palin-cpac-ap-cropped-proto-custom_28_big.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;In case you (hopefully) missed it, here are the real show-stoppers from
Palin's &lt;a href="http://www.youtube.com/watch?v=qQ6sXNSgQtY"&gt;keynote speech&lt;/a&gt; at the
Conservative Political Action Conference on Saturday:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"We are just dog-gone frustrated with the pace of change!"&lt;/p&gt;
&lt;p&gt;"I say keep your change, we'll keep our god, our guns, and our
constitution!"&lt;/p&gt;
&lt;p&gt;"Mr. President, we don't want an economy built to last, we want an economy
built to grow!"&lt;/p&gt;
&lt;p&gt;"Mr. President, we want your administration to end!"&lt;/p&gt;
&lt;p&gt;"'Hope and change', yeah you
better_hope_things change!"&lt;/p&gt;
&lt;p&gt;"USA! USA! USA!"&lt;/p&gt;
&lt;p&gt;"They're hoppin' in a jacuzzi! America it's time we drain
the jacuzzi and throw the bums out with the bath water!"&lt;/p&gt;
&lt;p&gt;"The Tea Party rose up because Americans woke up!"&lt;/p&gt;
&lt;p&gt;"We're not red! We're not blue! We are
Red, White, and Blue, and President Obama we
are_through_with you!"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I don't even know where to start.&lt;/p&gt;</summary><category term="[Sarah Palin]"></category></entry><entry><title>"Paraphrased Dialogue Over Birth Control Access"</title><link href="http://dustinfarris.com/2012/02/10/paraphrased-dialogue-over-birth-control-access.html" rel="alternate"></link><updated>2012-02-10T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-02-10:2012/02/10/paraphrased-dialogue-over-birth-control-access.html</id><summary type="html">&lt;p&gt;After reading various opinion articles and comments therein, here is my
perspective on this week's controversy:&lt;/p&gt;
&lt;h2&gt;Beginning of week&lt;/h2&gt;
&lt;p&gt;OBAMA: Institutions and corporations must follow the same
rules regardless of religious affiliation with regard to providing access to
birth control.&lt;/p&gt;
&lt;p&gt;REPUBLICANS: He's a socialist! He's
violating religious freedoms! He just wants to get
reelected!&lt;/p&gt;
&lt;h2&gt;2 days later&lt;/h2&gt;
&lt;p&gt;OBAMA: Ok, we'll compromise and have this obligation fall on the insurers
instead.&lt;/p&gt;
&lt;p&gt;REPUBLICANS: He's a flip-flop! He just
wants to get reelected!&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Randall Terry is a Lunatic"</title><link href="http://dustinfarris.com/2012/02/05/randall-terry-is-a-lunatic.html" rel="alternate"></link><updated>2012-02-05T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-02-05:2012/02/05/randall-terry-is-a-lunatic.html</id><summary type="html">&lt;p&gt;Randall who?&lt;/p&gt;
&lt;p&gt;If you haven't heard, there is a madman living in America who thinks it is
appropriate to broadcast ads featuring aborted fetuses during the Super
Bowl. Apparently these ads have already &lt;a href="http://motherjones.com/mojo/2011/12/aborted-fetus-campaign-ads-hit-airwaves-iowa"&gt;been running in Iowa&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Without getting into too much of a rant, who the _hell _does this lunatic
think he is trying to put a brutal show on a program that families across the
country will be watching? -- families that include
children, and women who have been through the &lt;a href="http://women.webmd.com/tc/abortion-emotional-recovery-topic-overview"&gt;emotional pains&lt;/a&gt;
that are often endured after an abortion.&lt;/p&gt;
&lt;p&gt;Indeed, who is this insensitive maniac? A quick &lt;a href="http://en.wikipedia.org/wiki/Randall_Terry"&gt;Wikipedia search&lt;/a&gt; reveals that he is a 53
-year-old white male from New York who has been married twice and arrested
more than 40 times in his life. He has filed for
bankruptcy, forged political figures' voices in political ads for personal
gain, and after his son came out of the closet, he publically stated his son
was "no longer welcome in their home."&lt;/p&gt;
&lt;p&gt;He has recently put himself on the Democratic primary ticket in several states
in an attempt to steal potential votes from Obama, and to exploit a legal
loophole requiring TV stations to air his anti-abortion ad.
I think it is safe to say I will never take a word of his seriously.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"The Tea Party is Racist"</title><link href="http://dustinfarris.com/2012/02/03/the-tea-party-is-racist.html" rel="alternate"></link><updated>2012-02-03T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-02-03:2012/02/03/the-tea-party-is-racist.html</id><summary type="html">&lt;p&gt;And I'm not the only one who thinks so.&lt;/p&gt;
&lt;p&gt;It seems to me that many of the &lt;a href="http://teapartyorg.ning.com/profiles/blogs/the-danger-that-the-obama-administration-poses-to-america"&gt;unfounded criticisms&lt;/a&gt; against President Obama stem from
somewhere not entirely rational. The far right of the right
--which at times feels like the majority of the right--has been repeatedly
accused, rightly, of racism in their defiant vow to "defeat Obama not matter
what it takes." Even &lt;a href="http://nation.foxnews.com/glenn-beck/2011/12/13/beck-suggests-tea-party-racist"&gt;Glenn Beck&lt;/a&gt; thinks so.&lt;/p&gt;
&lt;p&gt;While browsing The Huffington Post (a succesful progressive news and blog
site), I found &lt;a href="http://www.huffingtonpost.com/2011/09/23/morgan-freeman-tea-party-racist_n_978123.html"&gt;an article&lt;/a&gt; featuring this video of Morgan Freeman
giving his thoughts on the Tea Party to CNN:&lt;/p&gt;
&lt;p&gt;On a slight digression, here is a map from a &lt;a href="http://www.nytimes.com/2008/11/11/us/politics/11south.html?pagewanted=all"&gt;2008 NY Times article&lt;/a&gt; following
the presidential election depicting which counties voted more Republican than
in prior elections. Notice anything?&lt;/p&gt;
&lt;h1&gt;&lt;img alt="Electoral Shifts 2008 vs 2004" src="/media/uploads/uploads/electoralshifts2008_big.jpg" /&gt;&lt;/h1&gt;</summary><category term=""></category></entry><entry><title>"Most people get a refund? I think not."</title><link href="http://dustinfarris.com/2012/02/02/most-people-get-a-refund-i-think-not.html" rel="alternate"></link><updated>2012-02-02T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-02-02:2012/02/02/most-people-get-a-refund-i-think-not.html</id><summary type="html">&lt;p&gt;I've heard the argument--on an uncomfortable number of occasions--that taxes
can and should be raised since "most people get a refund anyway."
What's disconcerting about this statement is the use of the
word "refund." It sounds as if the government is just
handing out money every year without actually taxing anybody.&lt;/p&gt;
&lt;p&gt;To clarify what a tax refund really is: it is the amount of taxes
you_overpaid_during the course of the
previous year. In most jobs, your employer withholds a
certain percentage of your paycheck based on your salary and exemptions you
specified when you were hired. This percentage is money
thatis paid to you, and then sent on your behalf to the
government in the form of taxes. So you are paying taxes
every time you receive a paycheck.&lt;/p&gt;
&lt;p&gt;When you get a refund, it is the amount you overpaid as was calculated by
filling out a tax return. So let's say you paid $5000 in
taxes, but receive a $750 tax refund. Maybe in April it
feels like you're getting free money, but in reality you've effectively
donated $4,250 to the U.S. Treasury.&lt;/p&gt;
&lt;p&gt;Now, I do feel that many of us could and should afford to pay more taxes for
government sanctioned movements to help those in need and stimulate the
economy, but using the number of "refunds" American tax payers receive is not
a good argument to start with.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Ludacris is in My Portfolio!"</title><link href="http://dustinfarris.com/2012/01/28/ludacris-is-in-my-portfolio.html" rel="alternate"></link><updated>2012-01-28T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-01-28:2012/01/28/ludacris-is-in-my-portfolio.html</id><summary type="html">&lt;p&gt;Earlier this month my Wonder colleagues and I wrapped up what is probably my
biggest project to date: a website for the new line of SOUL by Ludacris
headphones. And yes, I think that's pretty cool.&lt;/p&gt;
&lt;p&gt;Building the website was a lot of fun, and allowed me to explore Django even
further, as well as pick up a few project management
techniques. Ludacris even came into our office for a photo
shoot!&lt;/p&gt;
&lt;p&gt;The true end result was motivation to finally update &lt;a href="/portfolio/"&gt;my
portfolio&lt;/a&gt;.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"I think we can agree Newt Gingrich is a Flop"</title><link href="http://dustinfarris.com/2012/01/27/i-think-we-can-agree-newt-gingrich-is-a-flop.html" rel="alternate"></link><updated>2012-01-27T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-01-27:2012/01/27/i-think-we-can-agree-newt-gingrich-is-a-flop.html</id><summary type="html">&lt;p&gt;Based on a &lt;a href="http://www.cnn.com/2012/01/27/opinion/bennett-florida-debate/index.html"&gt;pathetic display&lt;/a&gt; of ill-prepared attacks directed at Mitt Romeny
during last night's debate, I believe I can finally mark off Newt Gingrich on
America's potential nightmare list.&lt;/p&gt;
&lt;p&gt;Not only did last night make Newt look like a tool, I found his comments to be
quite revealing about how fake politicians can be in a debate.
His tone and facial expressions made Romney's investments
seem heart-crushing. Yet, as it turns out, they were mutual
funds carrying investments some of which are shared by funds held by Newt!
Clearly Newt (incorrectly) thought he had an opportunity to
put on the actor's mask and drive home some political dirt.&lt;/p&gt;
&lt;p&gt;It's all very sad.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Book Report: The Catcher in the Rye"</title><link href="http://dustinfarris.com/2012/01/21/book-report-the-catcher-in-the-rye.html" rel="alternate"></link><updated>2012-01-21T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-01-21:2012/01/21/book-report-the-catcher-in-the-rye.html</id><summary type="html">&lt;p&gt;&lt;img alt="The Catcher in the Rye book cover" src="/media/uploads/uploads/img_0153_medium.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;The Catcher in the Rye by J. D. Salinger&lt;/p&gt;
&lt;p&gt;What struck me most about_Catcher in the Rye_ was how
closely my teenage self could have related to the main character of the story.
I remember, as a younger person, referring to things I
didn't understand or want to accept with one-off labels like "stupid", "lame",
"retarded" etc... It was as if my pride was determinant on
being right, all the time, and anything that might threaten that was beneath
me.&lt;/p&gt;
&lt;p&gt;Salinger captures the adolescent inner-rebellion in a very intimate dialog
that Holden Caulfield, the antihero, has with the reader.
Near the end of the book, Holden speaks with a teacher who
wisely summarizes a distinction between youth and adulthood:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The mark of the immature man is that he wants to die nobly for a cause,
while the mark of the mature man is that he wants to live humbly for one.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And what struck home most with me was the teacher's description of Holden's
problem:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This fall I think you're riding for--it's a special kind of fall, a horrible
kind. The man falling isn't permitted to feel or hear
himself hit bottom. He just keeps falling and falling.
The whole arrangement's designed for men who, at some time
or other in their lives, were looking for something their own environment
couldn't supply them with. Or they thought their own
environment couldn't supply them with. So they gave up
looking. They gave it up before they ever really even got
started.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="reading"></category></entry><entry><title>"You Can Keep Your American Rights If..."</title><link href="http://dustinfarris.com/2012/01/17/you-can-keep-your-american-rights-if.html" rel="alternate"></link><updated>2012-01-17T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-01-17:2012/01/17/you-can-keep-your-american-rights-if.html</id><summary type="html">&lt;p&gt;I want to react to &lt;a href="http://thehill.com/video/campaign/204459-romney-booed-at-debate-for-support-of-indefinite-detentions"&gt;Mitt Romney's statement&lt;/a&gt; regarding the &lt;a href="http://www.gpo.gov/fdsys/pkg/BILLS-112s1867es/pdf/BILLS-112s1867es.pdf"&gt;newly signed bill&lt;/a&gt;
that in part allows the military to detain
&lt;em&gt;indefinitely_any _American_they feel is
afilliated with terrorism _without a trial&lt;/em&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"People who side with al Qaeda do not deserve the same rights as other
people."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Where in our constitution is it written that some people deserve more rights
than others? Or perhaps the Declaration of Independence
intended to be satirical when it read:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We hold these truths to be self-evident, thatall men are
created equal, that they are endowed by their Creator with certain unalienable
Rights, that among these areLife, Liberty and the pursuit
of Happiness.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If a citizen commits treason, try him for treason, but don't deny him his
American rights.&lt;/p&gt;
&lt;p&gt;Oh, and speaking of that line from the Declaration of Independence, can we
start thinking about how it might apply to non-Americans also?
If I'm reading it correctly, being "American" isn't
actually a required qualifier at all.&lt;/p&gt;</summary><category term="[Mitt Romney]"></category></entry><entry><title>"Now Using Disqus"</title><link href="http://dustinfarris.com/2012/01/12/now-using-disqus.html" rel="alternate"></link><updated>2012-01-12T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-01-12:2012/01/12/now-using-disqus.html</id><summary type="html">&lt;p&gt;My coworker got me fired up over &lt;a href="http://disqus.com/"&gt;Disqus&lt;/a&gt;, an attractive
versatile commenting system. It was definitely a good move.&lt;/p&gt;
&lt;p&gt;Part of my energy to try something new stemmed from the irritating amount of
spam I've been cleaning out lately. I've been searching for
a solution that I could plug into my current comment system without luck.
Disqus takes care of this.&lt;/p&gt;
&lt;p&gt;I like how Disqus is well connected with major social networks.
Really it brings all the network integration a little blog
like mine could ever need and more. And to put icing on the
cake, implementation took literally 30 minutes (including a break to pay for
the Chinese delivery).&lt;/p&gt;</summary><category term="Disqus"></category></entry><entry><title>"Too Modern for Time Warner"</title><link href="http://dustinfarris.com/2012/01/10/too-modern-for-time-warner.html" rel="alternate"></link><updated>2012-01-10T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-01-10:2012/01/10/too-modern-for-time-warner.html</id><summary type="html">&lt;p&gt;&lt;img alt="Time Warner browser options" src="/media/uploads/uploads/timewarnerfml_big.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Apparently, I have upgraded myself beyond the ability to pay my cable bill at
Time Warner's "PayXpress" website. This message was
shocking for two reasons. First and initially, the fact
that the corporation providing my internet service can't receive payment
through my internet browser.&lt;/p&gt;
&lt;p&gt;Secondly, the pathetic list of browsers
they_do_support is just miserable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Firefox 2.0 &amp;amp; 3.0.  I'm running the &lt;a href="http://www.mozilla.org/en-US/firefox/9.0.1/releasenotes/"&gt;latest version&lt;/a&gt;.. 9.0.1&lt;/li&gt;
&lt;li&gt;Safari 3.0 &amp;amp; 4.0. I'm running the &lt;a href="http://support.apple.com/kb/DL1070"&gt;latest version&lt;/a&gt;.. 5.1.2&lt;/li&gt;
&lt;li&gt;Internet Explorer 6.0, 7.0 &amp;amp; 8.0.. Well I'm not on Windows, but if I was I would probably have been forced to upgrade to Microsoft's latest &amp;amp; greatest, IE 9.0 (with 10.0 on the way) and been out of luck there as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Not to mention they don't support &lt;a href="https://www.google.com/chrome/"&gt;Chrome&lt;/a&gt; at
all (my browser of choice), or &lt;a href="http://www.opera.com/"&gt;Opera&lt;/a&gt;, or
&lt;a href="http://caminobrowser.org/"&gt;Camino&lt;/a&gt;, or &lt;a href="http://www.amazon.com/Mobile-Design-Dummies-Janine-Warner/dp/0470560967"&gt;mobile browsing&lt;/a&gt;, or a &lt;a href="http://en.wikipedia.org/wiki/List_of_web_browsers"&gt;slew of other ways people browse the web&lt;/a&gt;. I
mean they could at least support text-only browsers if they're supporting &lt;a href="http://lynx.browser.org/"&gt;IE 6.0&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Of course I get this message after spending last month arguing with Time
Warner's customer service regarding their not-so-automatic payment system,
services appearing on my bill I didn't order, overwhelming price hikes for no
apparent reason, drops in bandwidth, well the list goes on; but I'll save all
that for another article.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>Example Article</title><link href="http://dustinfarris.com/2012/01/01/example-article.html" rel="alternate"></link><updated>2012-01-01T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2012-01-01:2012/01/01/example-article.html</id><summary type="html">&lt;p&gt;This is an example article. You probably want to delete it and write your own articles!&lt;/p&gt;</summary><category term="example"></category></entry><entry><title>"The Longest Shell Command I've Written"</title><link href="http://dustinfarris.com/2011/12/31/the-longest-shell-command-ive-written.html" rel="alternate"></link><updated>2011-12-31T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-12-31:2011/12/31/the-longest-shell-command-ive-written.html</id><summary type="html">&lt;p&gt;I keep two (or more) versions of PostgreSQL installed on my laptop that I
switch between depending on what project I'm working on. In
Snow Leopard, this involved setting the path for postgres to whatever version
I was using. In Lion however, it is easier to switch the
home directory for postgres altogether; leading to an alias containing this
command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;dscl localhost -change /Local/Default/Users/postgres NFSHomeDirectory &lt;span class="sb"&gt;`&lt;/span&gt;dscl localhost -read /Local/Default/Users/postgres NFSHomeDirectory &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s1"&gt;&amp;#39;/.*&amp;#39;&lt;/span&gt; -o&lt;span class="sb"&gt;`&lt;/span&gt; /opt/local/var/db/postgresql91
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's one command, and likely the longest I've personally written!&lt;/p&gt;</summary><category term="Bash"></category></entry><entry><title>"You want to pierce your what?!"</title><link href="http://dustinfarris.com/2011/12/30/you-want-to-pierce-your-what.html" rel="alternate"></link><updated>2011-12-30T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-12-30:2011/12/30/you-want-to-pierce-your-what.html</id><summary type="html">&lt;p&gt;&lt;img alt="Cow with nose ring" src="/media/uploads/4265711638_88a87b85a9.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;Has anyone else noticed kids punching holes in any piece of flesh they can put
their hands on? To be fair, I had a piercing of my own in
my late teens, but now (in my late 20s) it blows my mind how western
civilization can get away with this.&lt;/p&gt;
&lt;p&gt;It's not art, and only expresses lack of anything intelligent to do.
(and yes, I'm speaking to my 18-year-old self)&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Book Report: The Brothers Karamazov"</title><link href="http://dustinfarris.com/2011/12/27/book-report-the-brothers-karamazov.html" rel="alternate"></link><updated>2011-12-27T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-12-27:2011/12/27/book-report-the-brothers-karamazov.html</id><summary type="html">&lt;p&gt;&lt;img alt="The Brothers Karamazov book cover" src="/media/uploads/uploads/brotherskaramazov_medium.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;The Brothers Karamazov by Fyodor Dostoevsky&lt;/p&gt;
&lt;p&gt;You'll have to set aside some serious time for this one.
&lt;em&gt;Brothers Karamazov&lt;/em&gt; is a loaded book with tons of ironies
and questions to ponder. I've been eyeing this member of my
"list" for some time, and was not disappointed.&lt;/p&gt;
&lt;p&gt;Dostoevsky weaves a fabulous murder mystery, but that is not
theluminescence that shines from this gem.
Nearly every page has a hard-hitting point that relates to
life's purpose, our memories, and our relationships. Parts
of the book get political:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But what comes of this right to increase one's needs? For
the rich, isolation and spiritual suicide; for the poor, envy and murder, for
they have been given rights, but have not yet been shown any way of satisfying
their needs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And other parts deal with our personal struggle with duty and honor:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Brother... you're not ready, and such a cross is not for you. ... Heavy
burdens are not for everyone, for some they are impossible.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Anyone who is serious about literature absolutely must
give_Brothers Karamazov_a go.&lt;/p&gt;</summary><category term="reading"></category></entry><entry><title>"The Futility Of Bipartisan Outreach"</title><link href="http://dustinfarris.com/2011/12/08/the-futility-of-bipartisan-outreach.html" rel="alternate"></link><updated>2011-12-08T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-12-08:2011/12/08/the-futility-of-bipartisan-outreach.html</id><summary type="html">&lt;p&gt;I love the way &lt;a href="http://en.wikipedia.org/wiki/Paul_Krugman"&gt;Paul Krugman&lt;/a&gt;
articulates the realities of our government:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;President Obama has tried -- desperately, and far beyond the point at which
it made any kind of sense -- to reach out across the partisan divide.
...And his reward for all that is that Mitt Romney
describes him as a full-on Marxist ...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Read &lt;a href="http://krugman.blogs.nytimes.com/2011/12/07/the-futility-of-bipartisan-outreach/"&gt;his (short but sweet) blog post on nytimes.com&lt;/a&gt;.&lt;/p&gt;</summary><category term="[Paul Krugman]"></category></entry><entry><title>"Hillary Clinton Speaks to the U.N. on Gay Rights"</title><link href="http://dustinfarris.com/2011/12/07/hillary-clinton-speaks-to-the-un-on-gay-rights.html" rel="alternate"></link><updated>2011-12-07T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-12-07:2011/12/07/hillary-clinton-speaks-to-the-un-on-gay-rights.html</id><summary type="html">&lt;p&gt;I donated to Hillary Clinton's campaign during the 2008 primaries, and
although she didn't make it to the final election, I'm glad President Obama
had the intelligence and humility to make her Secretary of State.&lt;/p&gt;
&lt;p&gt;Yesterday, December 7, Mrs. Clinton gave a moving speech on the current status
of gay rights, what it means to have human rights, and how the world is
improving and can further improve. Together with President
Obama's recent &lt;a href="http://www.csmonitor.com/Business/Robert-Reich/2011/1207/Obama-s-most-important-economic-speech"&gt;powerful speech on the U.S. economy and what needs to be done&lt;/a&gt;, I am feeling unusually optimistic about our
current administration's future. Of course actions speak
louder than words, but there may be hope for our country yet.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"An Atrocity in Cherokee County"</title><link href="http://dustinfarris.com/2011/12/06/an-atrocity-in-cherokee-county.html" rel="alternate"></link><updated>2011-12-06T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-12-06:2011/12/06/an-atrocity-in-cherokee-county.html</id><summary type="html">&lt;p&gt;&lt;img alt="Jorelys Rivera, 7, of Canton, Ga." src="/media/uploads/uploads/missing%2520girl%2520georgia-315335709_v2_medium.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;I lived in Canton, GA for the entirety of 2 whole weeks. My
reasons for moving to (and leaving) that city is a separate story, but I have
memories of friendly people, good food, and plenty of nature.
The good 'ol south.&lt;/p&gt;
&lt;p&gt;What I_don't_remember is a son-
of-a-bitch who had it in him recently to abuse, rape, and "dispose" of a 7
-year-old girl. This pathetic excuse for a man literally
sexually assaulted a child and then threw her down the garbage chute when he
was finished. I'm usually a stubborn advocate for American
civil rights, due process, human equality and all, but this guy needs to burn.&lt;/p&gt;
&lt;p&gt;Read the (heart gripping) &lt;a href="http://usnews.msnbc.msn.com/_news/2011/12/05/9227681-body-of-girl-7-found-in-trash"&gt;story on msnbc.msn.com&lt;/a&gt;.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Captain, scanners detect an M-class planet"</title><link href="http://dustinfarris.com/2011/12/06/captain-scanners-detect-an-m-class-planet.html" rel="alternate"></link><updated>2011-12-06T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-12-06:2011/12/06/captain-scanners-detect-an-m-class-planet.html</id><summary type="html">&lt;p&gt;&lt;img alt="Kepler 22-b" src="/media/uploads/uploads/120511_22b_medium.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;Remember in Star Trek when the operations officer (usually Commander Data) was
scanning for "M-class" planets? Well, it looks like we mere
humans of the 21st century don't need a galaxy-class starship to do the same.
This monstrosity (about 2 and a half times the size of
Earth) was just discovered recently, and has temperatures inhabitable by
humans. The downside is it happens to be 600 light years
away from our species.&lt;/p&gt;
&lt;p&gt;If you ask me, the obvious next step is a spaceship that flies at 60-light-
years/hour.&lt;/p&gt;
&lt;p&gt;Get the &lt;a href="http://www.bbc.co.uk/news/science-environment-16040655"&gt;details on bbc.com&lt;/a&gt;.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"We need politicians like Elizabeth Warren"</title><link href="http://dustinfarris.com/2011/12/03/we-need-politicians-like-elizabeth-warren.html" rel="alternate"></link><updated>2011-12-03T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-12-03:2011/12/03/we-need-politicians-like-elizabeth-warren.html</id><summary type="html">&lt;p&gt;Beautifully spoken criticism on the nation's debt and how to approach taxation
of the rich.&lt;/p&gt;
&lt;p&gt;Learn more about her campaign for the Senate
on&lt;a href="http://elizabethwarren.com/"&gt;elizabethwarren.com&lt;/a&gt;.&lt;/p&gt;</summary><category term="[Elizabeth Warren]"></category></entry><entry><title>"American Airlines files Chapter 11"</title><link href="http://dustinfarris.com/2011/11/29/american-airlines-files-chapter-11.html" rel="alternate"></link><updated>2011-11-29T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-11-29:2011/11/29/american-airlines-files-chapter-11.html</id><summary type="html">&lt;p&gt;&lt;img alt="American Airlines Boeing 777" src="/media/uploads/uploads/b777-223er-n780an-american-airlines-aal-aa-miami-mia-kmia_medium.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;It looks like another year of high gas prices and failed labor negotiations
has taken the final swing at American Airlines. Today, the
airline giant filed for Chapter 11 protection. American is
the last major US carrier to join the ranks of airlines that have filed for
bankruptcy since 9/11.&lt;/p&gt;
&lt;p&gt;This reinforces my stance as an anti-union airline employee.
While American's predicament certainly
isn't_entirely_ the fault of brutal labor negotiations,
pompous disregard for a company's financial health--such is the attitude of
all labor unions (and many of their members) I've been in contact with--seems
to only lead in one direction: cranky employees, cranky management, and a
bankrupt airline.&lt;/p&gt;
&lt;p&gt;Read more about &lt;a href="http://online.wsj.com/article/SB10001424052970204449804577067880541410146.html?mod=googlenews_wsj"&gt;American's filing on The Wall Street Journal&lt;/a&gt;.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"How to defend Earth from asteroids"</title><link href="http://dustinfarris.com/2011/11/23/how-to-defend-earth-from-asteroids.html" rel="alternate"></link><updated>2011-11-23T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-11-23:2011/11/23/how-to-defend-earth-from-asteroids.html</id><summary type="html">&lt;p&gt;After an asteroid came &lt;a href="/2011/11/an-asteroid-closeup/"&gt;remarkably close to Earth&lt;/a&gt; recently, I began wondering just what would happen to man-kind if
one actually struck. Here is a fun talk that gives an
overview of what we know about asteroids, and what we would be able to do
right now if such a catastrophic event was foreseen in the near future.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"NMB Rejects AFA Accusations"</title><link href="http://dustinfarris.com/2011/11/19/nmb-rejects-afa-accusations.html" rel="alternate"></link><updated>2011-11-19T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-11-19:2011/11/19/nmb-rejects-afa-accusations.html</id><summary type="html">&lt;p&gt;&lt;img alt="Side of Delta aircraft" src="/media/uploads/uploads/side-of-delta_medium.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;After nearly a year of deliberating, the National Mediation Board has found
the Association of Flight Attendants' claim--that Delta interfered with the
2010 flight attendant union election process--does not warrant a revote.&lt;/p&gt;
&lt;p&gt;The AFA has been trying desperately to win Delta: campaigning for over 5
years, and managing to force 3 elections--inevitably loosing each one.
The NMB even &lt;a href="http://liveshots.blogs.foxnews.com/2010/05/11/new-union-friendly-rules-could-affect-delta/"&gt;changed the voting rules&lt;/a&gt; this last time around, stating that a union was not, in
fact, the majority of a labor group, but was rather a "union" of a majority of
those who felt like voting for a union.  Despite this rule change that
clearly favored the AFA, they did not prevail in winning this smaller version
of a "majority".&lt;/p&gt;
&lt;p&gt;It is the policy of the Board to take seriously any accusation of voting
interference; which the AFA was quick to file after loosing.
Again. Now that the claims have been set
aside, the employees of Delta Airlines can move ahead with the merger with
Northwest Airlines, and begin enjoying the benefits of a combined workgroup.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://news.delta.com/index.php?s=43&amp;amp;item=1490"&gt;Read more at news.delta.com&lt;/a&gt;&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Arizona Gets a Break"</title><link href="http://dustinfarris.com/2011/11/09/arizona-gets-a-break.html" rel="alternate"></link><updated>2011-11-09T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-11-09:2011/11/09/arizona-gets-a-break.html</id><summary type="html">&lt;p&gt;&lt;img alt="Russell Pearce" src="/media/uploads/111109032839-russell-pearce-story-top_large.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;After writing and defending a law that would allow police officers to question
a person's citizenship for getting a parking ticket, Arizona state senator
Russell Pearce was removed from office in a public election that took place
last night. I never supported this law, and see it,
personally, as a rough and humiliating slap at illegal immigrants.&lt;/p&gt;
&lt;p&gt;It is not the state's duty to catch and imprison people who do not have valid
documents. There is a whole department at the Federal level
dedicated to ensuring this process is carried out fairly and accurately.
What if I forget to signal while changing lanes, get pulled
over, and don't have my passport handy? Do I go to jail and
wait for the cops to sort things out? I mean really, what
good does this do for anyone? This law is just another
Republican attempt to wield undeserved power.&lt;/p&gt;
&lt;p&gt;At any rate, I'm glad he's not in congress any more.&lt;/p&gt;
&lt;p&gt;Read more at &lt;a href="http://www.csmonitor.com/USA/Latest-News-Wires/2011/1109/Russell-Pearce-architect-of-illegal-immigration-law-in-Arizona-loses-election"&gt;The Christian Science Monitor&lt;/a&gt;.&lt;/p&gt;</summary><category term="immigration"></category></entry><entry><title>"Simulating a Mission to Mars"</title><link href="http://dustinfarris.com/2011/11/07/simulating-a-mission-to-mars.html" rel="alternate"></link><updated>2011-11-07T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-11-07:2011/11/07/simulating-a-mission-to-mars.html</id><summary type="html">&lt;p&gt;This is absolutely stunning. A multi-national crew locked
themselves up in a mock space craft for over a year to determine the
psychological effects it would have. Who can imagine what
_that_must have been like?&lt;/p&gt;
&lt;p&gt;I always knew somehow that a Mars trip would be possible someday, but never
did I think it would happen in my lifetime. Isn't it
incredible to think that if something were to happen to Earth, our species
might be able to live on.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Clothed in blue jumpsuits, the would-be astronauts from Europe, Russia
andChinagrinned and waved as the heavy
metal door was shut on their home of the last 17 months in a mock spaceship at
a Moscow research institute.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Read the &lt;a href="http://www.reuters.com/article/2011/11/04/us-mars-isolation-odd-idUSTRE7A349220111104"&gt;full article on Reuters&lt;/a&gt;.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"An Asteroid Closeup"</title><link href="http://dustinfarris.com/2011/11/05/an-asteroid-closeup.html" rel="alternate"></link><updated>2011-11-05T00:00:00+01:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-11-05:2011/11/05/an-asteroid-closeup.html</id><summary type="html">&lt;p&gt;It looks like the folks in astronomy are getting a treat Tuesday night.
An asteroid the size of "4 city blocks" is going to come
closer to Earth than the moon!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Scientists say the asteroid won't hit us, but it will be barely more than
200,000 miles away when it passes Earth at 11:13 p.m. Tuesday, and in cosmic
terms that's really close.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://www.sfgate.com/cgi-bin/article.cgi?file=/c/a/2011/11/05/MN3V1LOKC9.DTL"&gt;San Francisco Chronicle: Asteroid headed our way will miss by this much&lt;/a&gt;&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"Book Report: The Republic"</title><link href="http://dustinfarris.com/2011/10/23/book-report-the-republic.html" rel="alternate"></link><updated>2011-10-23T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-10-23:2011/10/23/book-report-the-republic.html</id><summary type="html">&lt;p&gt;&lt;img alt="The Republic by Plato book cover" src="/media/uploads/republic_medium.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;The Republic by Plato&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Republic&lt;/em&gt; is a beautiful dialogue that takes place between Socrates and
his friends as they explore the worth and profitability of a just man.
Throughout the writing, our hero, Socrates, utilizes
dialect to argue fundamental aspects of our soul and how its nurture or
neglect affects us in life and society.&lt;/p&gt;
&lt;p&gt;Socrates teaches us that we should spend more time learning about ourselves
and the power of the Good. This in turn helps us understand
what we must do:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For you have often heard that the greatest and most important study is the
Idea of the Good, by which just things and the rest become useful and
beneficial.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Socrates also points out that we must be strong in character if we are ever to
be great:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A weak nature will never be responsible for great things, whether for good
or ill.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I find that many of the points raised in _The Republic_are
valid today. For instance, Socrates discusses the folly of
excessive praise and flattering of promising youth:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When he becomes older, I suppose, his relatives and fellow citizens will
wish to use him for their own purposes.&lt;/p&gt;
&lt;p&gt;They will fawn on him with requests and honors, anticipating the power that
will be his and flattering it in advance.&lt;/p&gt;
&lt;p&gt;[Then] won't he be filled with an impossible hope, believing himself
competent to manage the affairs of Greeks and barbarians alike, exalting
himself to a great height, filled with pretense and empty pride without
intelligence?&lt;/p&gt;
&lt;p&gt;Then suppose someone came to a person in this condition and gently spoke the
truth: that intelligence is not in him, but he needs it, and that it cannot be
possessed unless he slaves for the possession of it. Do you
think it will be easy for him to listen, in the midst of these great evils?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There is also a criticism of literature, music and poetry that I believe is
especially applicable today:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Because we shall say, I presume, that poets and prose writers therefore
speak badly about what is most important for men, claiming that many men are
happy but unjust, or just but wretched, and that the doing of injustice is
profitable if it escapes detection, while justice is another's good and one's
own loss.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think that describes a lot of what exists in pop culture today.
It's ironic that the same air of ignorance exists today as
it did over 2000 years ago. Have we learned nothing?
Or is the ratio of wisdom to ignorance hard-coded in our
genetics somewhere?&lt;/p&gt;
&lt;p&gt;We can learn a lot by reviewing the ground Socrates covered in this dialogue.
Plato wrote &lt;a href="/2011/7/book-
report-dialogues-by-plato/"&gt;many other great dialogues&lt;/a&gt; as well that teach us just as much, but I place
_The Republic _at the the top.&lt;/p&gt;
&lt;p&gt;I own &lt;a href="http://yalepress.yale.edu/book.asp?isbn=9780300136371"&gt;_The Republic _translated by R.E. Allen&lt;/a&gt;which is a modern translation of
the Greek and is delightfully readable.&lt;/p&gt;</summary><category term="reading"></category></entry><entry><title>"A Cold Lovers' Night"</title><link href="http://dustinfarris.com/2011/10/16/a-cold-lovers-night.html" rel="alternate"></link><updated>2011-10-16T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-10-16:2011/10/16/a-cold-lovers-night.html</id><summary type="html">&lt;p&gt;ETOH - A Cold Lovers' Night&lt;/p&gt;
&lt;p&gt;I recently flew to Orlando to play the piano at a wedding for an old friend of
mine. While there, he asked about a song I produced many
years ago called A Cold Lovers' Night. He was interested in
getting a copy, which was understandable--because he wrote it.&lt;/p&gt;
&lt;p&gt;Many years have passed since Matias and I wrote and recorded music together,
and I have many fond memories of those days. Work was play,
and play was music, and the whole while we became close friends expressing
ourselves in a way only melodies and rhythms can explain.&lt;/p&gt;
&lt;p&gt;We called ourselves ETOH (Entertaining Thoughts Of Happiness), and though we
never did much with our recordings, I will always cherish the prints of our
lives we left behind.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"What we learned from 5 million books"</title><link href="http://dustinfarris.com/2011/09/21/what-we-learned-from-5-million-books.html" rel="alternate"></link><updated>2011-09-21T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-09-21:2011/09/21/what-we-learned-from-5-million-books.html</id><summary type="html">&lt;p&gt;A humorous talk on an initiative to digitize books and learn about culture.&lt;/p&gt;</summary><category term="TED"></category></entry><entry><title>"Book Report: 1984"</title><link href="http://dustinfarris.com/2011/09/15/book-report-1984.html" rel="alternate"></link><updated>2011-09-15T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-09-15:2011/09/15/book-report-1984.html</id><summary type="html">&lt;p&gt;&lt;img alt="1984 book cover" src="/media/uploads/1984_medium.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;1984 by George Orwell&lt;/p&gt;
&lt;p&gt;If you want a terrifying glimpse into the future of mankind, read this book.
Orwell tells a story of a time when citizens are controlled
in every way, and wars are waged just to get rid of surplus.&lt;/p&gt;
&lt;p&gt;"The Party" dominates the people of the 1984 world, watching their every move,
listening to every spoken word, and eliminating anyone who might threaten
their manifesto:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"War is peace. Freedom is slavery.
Ignorance is strength."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The source of the phrase "Big Brother," 1984 shows us that when humanist
philosophy goes out the window, totalitarianismcombines
with oligarchical collectivism to create a supreme power of hate and control.
This book serves as a warning to those who believe rights
to life, liberty, and property are not worth fighting for.&lt;/p&gt;</summary><category term="reading"></category></entry><entry><title>"Book Report: Slaughterhouse-Five"</title><link href="http://dustinfarris.com/2011/09/09/book-report-slaughterhouse-five.html" rel="alternate"></link><updated>2011-09-09T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-09-09:2011/09/09/book-report-slaughterhouse-five.html</id><summary type="html">&lt;p&gt;&lt;img alt="Slaughterhouse-five book cover" src="/media/uploads/slaughterhouse_medium.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Slaughterhouse-Five by Kurt Vonnegut&lt;/p&gt;
&lt;p&gt;While being sufficiently entertaining enough to read quickly, I did not seem
to capture the awe that so many others have when reading this book.
However, Vonnegut offers a few interesting ideas throughout
his novel: one being that there is no such thing as time--that we are forever
frozen in all moments of existence.&lt;/p&gt;
&lt;p&gt;Kurt Vonnegut writes in a style that is easy to absorb. I'm
sure many people would get a kick out of this book in particular--which is
probably why it was listed in &lt;a href="http://en.wikipedia.org/wiki/Slaughterhouse-
Five#Literary_significance_and_reception"&gt;Time Magazine's 100 best English-language
novels written since 1923&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"That is a very &lt;em&gt;Earthling _question to ask, Mr. Pilgrim.
Why _you?&lt;/em&gt; Why &lt;em&gt;us _for that matter?
Why _anything?&lt;/em&gt; Because this moment
simply &lt;em&gt;is&lt;/em&gt;."&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="reading"></category></entry><entry><title>"Book Report: The Prince"</title><link href="http://dustinfarris.com/2011/09/05/book-report-the-prince.html" rel="alternate"></link><updated>2011-09-05T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-09-05:2011/09/05/book-report-the-prince.html</id><summary type="html">&lt;p&gt;&lt;img alt="The Prince book cover" src="/media/uploads/theprince_medium.jpg" title="The Prince by Niccolo Machiavelli" /&gt; &lt;em&gt;The Prince&lt;/em&gt; by Niccolo Machiavelli What intrigues me
about this book is that it marked a sharp change in philosophical thinking--
making a break from idealism, and instead focusing on realism. While
Machiavelli may have simply been trying to compose his way into friendship
with the leaders of Florence, his work has endured and has been an inspiration
for many fearsome leaders. The book was such a deviation, in fact, that the
Church banned it shortly after it was published. The Prince explores the logic
and reasoning a leader should employ when conquering new lands and maintaining
those he already has. Machiavelli gives no moral weight to right and wrong,
but recommends that goal-oriented logic dictate all of one's actions: &amp;gt;"Hence
it is necessary for a prince wishing to hold his own to know how to do wrong,
and to make use of it or not according to necessity." Notable individuals who
drew lessons from Machiavelli include Napoleon, Adolf Hitler, and probably
several modern-day politicians who won't otherwise admit it.&lt;/p&gt;</summary><category term="reading"></category></entry><entry><title>"Book Report: The Great Gatsby"</title><link href="http://dustinfarris.com/2011/09/02/book-report-the-great-gatsby.html" rel="alternate"></link><updated>2011-09-02T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-09-02:2011/09/02/book-report-the-great-gatsby.html</id><summary type="html">&lt;p&gt;&lt;img alt="The Great Gatsby book cover" src="/media/uploads/greatgatsby_medium.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;The Great Gatsby by F. Scott Fitzgerald&lt;/p&gt;
&lt;p&gt;An easy read that took me just short of 2 days to breeze through, I found The
Great Gatsby a fun book that was modestly entertaining.&lt;/p&gt;
&lt;p&gt;The story is of a man who falls in love, leaves for 5 years, then returns to
reclaim his love. The Great Gatsby explores how we can
dwell on the past too much, and forget to conduct ourselves nobly in the
present.&lt;/p&gt;</summary><category term="reading"></category></entry><entry><title>"Book Report: Crime and Punishment"</title><link href="http://dustinfarris.com/2011/08/29/book-report-crime-and-punishment.html" rel="alternate"></link><updated>2011-08-29T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-08-29:2011/08/29/book-report-crime-and-punishment.html</id><summary type="html">&lt;p&gt;&lt;img alt="Crime and Punishment book cover" src="/media/uploads/crimeandpunishment_medium.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Crime and Punishment by Fyodor Dostoevsky&lt;/p&gt;
&lt;p&gt;I picked up this book at my new favorite store in Manhattan, &lt;a href="http://www.strandbooks.com/"&gt;Strand Book Store&lt;/a&gt;. I had an impulsive
itch to read something from Russia, and since I've been lately determined to
read the classics, this seemed like a good pick. Plot about
murder, written by a Russian deviant who spent a few years in the Siberian
prison, raving reviews from anyone who has read it, I figured I couldn't go
wrong. Right I was.&lt;/p&gt;
&lt;p&gt;The basic outline of the story involves a Russian student who has dropped out
of university. This man has spent the more recent months of
his life in melodramatic thought, going over certain views and philosophies of
his. One key view he has is that murder, and other crime,
is only a crime when committed by normal people. He
postulated that there is a class of extraordinary citizens to whom the rules
do not apply. His favorite example was Napoleon.
He thinks that committing a crime to achieve a greater good
is forgivable, and should not even be seen as a crime in the first place.&lt;/p&gt;
&lt;p&gt;The book explores his inner struggle between his modern theoretical
justification, and his conscience. He never fully admits
feeling "sorry" for his crime, although he does eventually declare that his
reasoning may have been imperfect. (spoiler) He concludes
his journey by confessing his crime so that he may do penance and live a
better life afterwards.&lt;/p&gt;
&lt;p&gt;I think Dostoevsky must have had great insight into what motivates certain
people to behave in certain ways. While many if not most of
our actions are dictated by our daily needs, sometimes we are driven to do
great deeds, for better or worse, purely for the sake of our beliefs.
The main character in Crime and Punishment committed murder
to prove to himself that he really believed in his own theory.
He comes up with other excuses (debt, family needs, etc..)
to satiate other simple minded inquisitors, but the underlying reason never
seems to change.&lt;/p&gt;
&lt;p&gt;Dostoevsky is a brilliant writer and Crime and Punishment was particularly
easy and fun to read.&lt;/p&gt;</summary><category term="reading"></category></entry><entry><title>"Lucky Star Pinot Noir"</title><link href="http://dustinfarris.com/2011/08/27/lucky-star-pinot-noir.html" rel="alternate"></link><updated>2011-08-27T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-08-27:2011/08/27/lucky-star-pinot-noir.html</id><summary type="html">&lt;p&gt;&lt;img alt="Lucky Star Pinot Noir" src="/media/uploads/wine_small.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;I made a delightful discovery the other day. This Pinot is
fantastic both with dinner and by itself. It contains great
oaky characteristics, and is not overpowering. Not for
those with a sweet tooth (most Pinots aren't), but definitately a win for the
casual wine drinker (me). Best of all, it can be bought for
under $10! This is the first Pinot in that price range that
I've tried and liked, and, luckily for me, the wine shop down the street from
my NYC apartment keeps it regularly stocked.&lt;/p&gt;
&lt;p&gt;For a great wine around $8.99, trya 2009 Lucky Star Pinot
Noir.&lt;/p&gt;</summary><category term="wine"></category></entry><entry><title>"Mark Pagel: How language transformed humanity"</title><link href="http://dustinfarris.com/2011/08/11/mark-pagel-how-language-transformed-humanity.html" rel="alternate"></link><updated>2011-08-11T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-08-11:2011/08/11/mark-pagel-how-language-transformed-humanity.html</id><summary type="html">&lt;p&gt;Here is a fascinating talk on how humanity's significant advantage over other
species owes itself largely to the development of language.&lt;/p&gt;
&lt;p&gt;It makes me wonder if the "spark" that God or some deity breathed into us is
somehow related to this language evolution that led to the coordinated
exchange of ideas.&lt;/p&gt;</summary><category term="TED"></category></entry><entry><title>"The Charles Dickens Museum"</title><link href="http://dustinfarris.com/2011/08/07/the-charles-dickens-museum.html" rel="alternate"></link><updated>2011-08-07T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-08-07:2011/08/07/the-charles-dickens-museum.html</id><summary type="html">&lt;p&gt;On a trip to London, I decided to take some time to investigate an author I
recently read, Charles Dickens. The house on 48 Doughtry
Street was occupied by the great writer between 1837 and 1839. In this period,
he produced The Pickwick Papers, and the everlasting favorite, Oliver Twist.&lt;/p&gt;
&lt;p&gt;It was indeed a joy to climb the stairs from the wine cellar, to the ground
floor, and upwards further to the drawing room and library.
The museum has collected several pieces of furniture,
literature, and artwork that Dickens owned over the years.
The experience was quite authentic and warm, with a
friendly staff and a video documentary of Dickens prolific life.&lt;/p&gt;
&lt;p&gt;I would highly recommend anyone with an interest in great English literature
to take a stop by this museum if one happens to have a few hours of spare time
in London. The cost of entry is £7 and is well worth it.&lt;/p&gt;</summary><category term="London"></category></entry><entry><title>"A finer moment in chess"</title><link href="http://dustinfarris.com/2011/07/31/a-finer-moment-in-chess.html" rel="alternate"></link><updated>2011-07-31T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-07-31:2011/07/31/a-finer-moment-in-chess.html</id><summary type="html">&lt;p&gt;&lt;img alt="chess.com screenshot" src="/media/uploads/aproudmoment_medium.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;I love chess, but that should not be confused with me actually being any good
at it. Every now and then, though, I surprise myself.
In this Sunday morning game, I sacrifice both of my bishops
to open up black's king after he castled. After attempting
to pin my queen, I move in for mate with Rh5#.&lt;/p&gt;</summary><category term="chess"></category></entry><entry><title>"Thandie Newton: Embracing otherness, embracing myself"</title><link href="http://dustinfarris.com/2011/07/25/thandie-newton-embracing-otherness-embracing-myself.html" rel="alternate"></link><updated>2011-07-25T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-07-25:2011/07/25/thandie-newton-embracing-otherness-embracing-myself.html</id><summary type="html">&lt;p&gt;Extraordinary.&lt;/p&gt;</summary><category term="TED"></category></entry><entry><title>"Book Report: Dialogues by Plato"</title><link href="http://dustinfarris.com/2011/07/21/book-report-dialogues-by-plato.html" rel="alternate"></link><updated>2011-07-21T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-07-21:2011/07/21/book-report-dialogues-by-plato.html</id><summary type="html">&lt;p&gt;&lt;img alt="The Republic and other Dialogues book cover" src="/media/uploads/img_0583_medium.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Dialogues by Plato&lt;/p&gt;
&lt;p&gt;This covers 4 of the 5 most popular dialogues written by Plato excluding &lt;em&gt;The
Republic&lt;/em&gt; which, as a text that has moved me profoundly, &lt;a href="/2011/10/book-report-the-republic/"&gt;will get its own entry&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Plato was a Greek philosopher and friend to the dialectical genius,
Socrates. While the exact history of the man Socrates may
never be fully known, we do know that Plato chose Socrates to exhibit the
ideas presented in his writing.&lt;/p&gt;
&lt;p&gt;The dialogue approach to writing that was common in those days is very
appealing to me even in the 21st century. The process of
question and response discovery draws a sort of parrallel to the thoughts that
run through my own head. It is quite gratifying to see your
own thoughts explored, or &lt;a href="http://www.jasonswadley.com/2011/07/uncovering-our-thought-in-aristotle%E2%80%99s/"&gt;"uncovered"&lt;/a&gt; as a friend of mine wrote,
making the dialogues an especially enjoyable read.&lt;/p&gt;
&lt;p&gt;In &lt;em&gt;Apology&lt;/em&gt; we learn that Socrates is on trial for his
life. He has the conviction of a man who believes what he
preaches, and makes the best case possible given the short amount of time
allotted.&lt;/p&gt;
&lt;p&gt;In &lt;em&gt;Crito&lt;/em&gt;, Socrates is in jail awaiting death when his friend pleads with him
to escape. Socrates explains that he must accept the
sentence his government has awarded him. He believes that
although his indictment might have been avoided given more time for a proper
defence, the system of government trumps any selfish bias or desire for "a
little more life."&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Phaedo&lt;/em&gt; was probably the best of these 3 dialogues describing the death of
Socrates in my opinion. Here, Socrates explores the human
soul and offers proof that it not only exists, but has always existed and
forever will. He examins the effect of good and evil on the
soul and assures his friends that although he is to die, his soul will endure
and that death has always been the pursuit of philosophy.&lt;/p&gt;
&lt;p&gt;Finally, in &lt;em&gt;Symposium,&lt;/em&gt; Plato explores the meaning of Love, what he is, and
how he is encountered. I was hoping for a more revealing
account of love in this text than was provided. The
majority of the dialogue is thoughtless banter regarding the party and
attributing every uplifting word known to man to love.
"Love is majestic, love is pure, love is moving, etc..."
While love is certainly a thing to be praised, I feel that its praise should
be left to poets, not philosophers. In Plato's defense,
according to &lt;em&gt;Symposium&lt;/em&gt;, even poets had not yet written a single hymn of
praise to love at that time--something Plato's character, Eryximachus, sought
to remedy.&lt;/p&gt;</summary><category term="reading"></category></entry><entry><title>"Book Report: The Girl with the Dragon Tattoo"</title><link href="http://dustinfarris.com/2011/07/15/book-report-the-girl-with-the-dragon-tattoo.html" rel="alternate"></link><updated>2011-07-15T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-07-15:2011/07/15/book-report-the-girl-with-the-dragon-tattoo.html</id><summary type="html">&lt;p&gt;&lt;img alt="The Girl with the Dragon Tattoo book cover" src="/media/uploads/img_0571_medium.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;The Girl with the Dragon Tattoo by Stieg Larsson&lt;/p&gt;
&lt;p&gt;I began noticing this book all over the airports about 2 years
ago. It's hard to miss due to the bright green glossy
cover, and the fact that everyone reading it seemed to be absorbed like they
were uncovering the meaning of life.&lt;/p&gt;
&lt;p&gt;At first I laughed off the title. What guy reads a book
about a girl? Then a buddy of mine read it and gave me the
real low down. Murder mystery?
Suspense? Computer hacking? Bouts with
evil antagonists hiding in Europe? More
hacking? I bought it the next day.&lt;/p&gt;
&lt;p&gt;The book lives up to its reputation. I have never been on
reading lockdown like I was with The Girl with the Dragon
Tattoo. At one point I was staying at my mother's, reading
on her couch all night until 9am when I passed out cold.&lt;/p&gt;
&lt;p&gt;The story is about Lizbeth, a mid-20's loner who has a shady background and
knows more about computer hacking than anyone could ever suspect at face
value. She teams up with a 40-something reporter who is
hired to solve a murder mystery in northern Sweden. The
book takes sharp turns regularly, and keeps you saying to yourself, "oh no,
it's not going to go there, that's not going to happen," and then it does.&lt;/p&gt;
&lt;p&gt;The story is captivating, the characters are solid. Anyone
looking for entertainment that doesn't spray a thousand lux into your eyes
should pick up The Girl with the Dragon Tattoo.&lt;/p&gt;</summary><category term="reading"></category></entry><entry><title>"Book Report: A Tale of Two Cities"</title><link href="http://dustinfarris.com/2011/07/12/book-report-a-tale-of-two-cities.html" rel="alternate"></link><updated>2011-07-12T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-07-12:2011/07/12/book-report-a-tale-of-two-cities.html</id><summary type="html">&lt;p&gt;&lt;img alt="A Tale of Two Cities book cover" src="/media/uploads/img_0567_medium.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;A Tale of Two Cities by Charles Dickens&lt;/p&gt;
&lt;p&gt;A novel that builds continuously to the end, A Tale of Two Cities is one of
the most eloquently written texts I've read in some time.&lt;/p&gt;
&lt;p&gt;Set during the onset of the French Revolution, Charles Darnay (formally
Charles Evremonde) runs away from an aristocratic life in Paris he hates to
live as a free working man in prosperous London. In England
he meets Lucie Manette, the daughter of a doctor who happened to (spoiler
alert) be imprisoned by Charles' late family in the infamous Bastille for over
a decade. Charles and Lucie are married, after which
Charles is called back to France by a plea letter from a colleague of his left
in charge of his estate, now imprisoned by French revolutionists.&lt;/p&gt;
&lt;p&gt;Charles is put on trial as an aristocrat emigrant and sentenced to
death. He is saved in the end by the social reject
character, Sydney Carton, whose life of bad behavior is redeemed by his
sacrifice in taking Charles' place on the chopping block.&lt;/p&gt;
&lt;p&gt;This story builds progressively until the very end unlike a typical rise-
climax-fall setup. Dickens confesses this style explicitly
at one time writing: "... if you want to put it down halfway through, don't."&lt;/p&gt;
&lt;p&gt;I am inspired to read more about the French Revolution.
Dickens used a single source as a historical reference, The French Revolution:
A History by Thomas Carlyle. I suppose that would be a good
place to start.&lt;/p&gt;
&lt;p&gt;A Tale of Two Cities goes out with a bang with the fantastic closing line:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"It is a far, far better thing that I do, than I have ever done; it is a
far, far better rest that I go to, than I have ever known."&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="reading"></category></entry><entry><title>"Book Report: Lord of the Flies"</title><link href="http://dustinfarris.com/2011/07/12/book-report-lord-of-the-flies.html" rel="alternate"></link><updated>2011-07-12T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-07-12:2011/07/12/book-report-lord-of-the-flies.html</id><summary type="html">&lt;p&gt;&lt;img alt="Lord of the Flies book cover" src="/media/uploads/7624_medium.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Lord of the Flies by William Golding&lt;/p&gt;
&lt;p&gt;It took an impressively short amount of time to read this (2 days--which is
short compared to my average reading time of 2 months). The
brutal nature of humanity is the foundation of a real page-turner, indeed.&lt;/p&gt;
&lt;p&gt;The government that the boys establish in this book is caused by their need to
organize themselves. Rules and leaders are selected, and
from the start there is a tug of war for dominance. Over
time, organization becomes savagry as the boys' isolated world frees them of
social restraint and values.&lt;/p&gt;
&lt;p&gt;Lord of the Flies gives me new appreciation for society, religion, and any
government that requires people to get along and keeps primal instincts in
check.&lt;/p&gt;</summary><category term="reading"></category></entry><entry><title>"Missouri and Baby Pictures"</title><link href="http://dustinfarris.com/2011/06/21/missouri-and-baby-pictures.html" rel="alternate"></link><updated>2011-06-21T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-06-21:2011/06/21/missouri-and-baby-pictures.html</id><summary type="html">&lt;p&gt;Flying back to New York after a lovely weekend in the
Ozarks. I watched my oldest friend from high school get
married and showed my girlfriend fantastic things the
midwest has to offer, like Andy's Frozen Yogurt, and Walmart.&lt;/p&gt;
&lt;p&gt;My mother dug out some old pictures and apparently I was blonde
once. Who knew?&lt;/p&gt;
&lt;p&gt;&lt;img alt="Dustin Farris Kindergarten Picture" src="/media/uploads/img_0053_medium.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;I have to say I really appreciate the warm upbringing Missouri gave
me. I think our perspective on the world is significantly
shaped by the environment we grow up in.&lt;/p&gt;</summary><category term=""></category></entry><entry><title>"New Blog, New Look"</title><link href="http://dustinfarris.com/2011/06/16/new-blog-new-look.html" rel="alternate"></link><updated>2011-06-16T00:00:00+02:00</updated><author><name>Dustin Farris</name></author><id>tag:dustinfarris.com,2011-06-16:2011/06/16/new-blog-new-look.html</id><summary type="html">&lt;p&gt;So here it is. Rolling out the new dustinfarris.com with a
new look and a new blog engine. After having gone through 4
_very _different revisions, I've settled on a front end design and a back end
database structure that I'm happy with.&lt;/p&gt;
&lt;p&gt;Featured in front is a bright and trim menu bar that's easy to reach, but not
in the way. On the side there is a &lt;strong&gt;collapsible&lt;/strong&gt;
companion bar providing quick links to recent blogs, a (not functioning yet)
search bar, and Twitter posts (cough keyword plugs
cough). Still work to do here
obviously. Lastly, I've added some subtle jQuery with more
on the way.&lt;/p&gt;
&lt;p&gt;&lt;img alt="PostgreSQL code" src="/media/uploads/codess_big.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Behind the scenes I've hammered out a blog engine that is finally at least
close to on par with the likes of wordpress and such. Why
am I not using word press, you ask? Because I didn't write
it.&lt;/p&gt;
&lt;p&gt;New engine means new database structuring, new dynamic content generation
code, and a fresh off the press upgrade to Django 1.3 (woo hoo!)&lt;/p&gt;
&lt;p&gt;Finally, I've added some bells and whistles including a "follow-up" option
that notifies commenters when new comments are added, and an &lt;strong&gt;auto-twitter-
post&lt;/strong&gt; method that shortens the URL using my own custom service, updates
Twitter (which in turn updates Facebook), and updates the RSS, all
automatically! Now I just need to automate the actual
writing of a blog and I'll be set. :-)&lt;/p&gt;
&lt;p&gt;Well that's it for Dustin's Blog version 4.0. Stay tuned
for actual blogging.&lt;/p&gt;
&lt;p&gt;Don't forget to &lt;a href="http://feeds.feedburner.com/dustinfarris"&gt;subscribe&lt;/a&gt; or
&lt;a href="http://twitter.com/dustinfarris"&gt;follow&lt;/a&gt;.&lt;/p&gt;</summary><category term=""></category></entry></feed>